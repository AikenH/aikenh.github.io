<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AikenH Blogs</title>
  <icon>http://aikenh.cn/icon.png</icon>
  <subtitle>Recording some tips or lesson for myself</subtitle>
  <link href="http://aikenh.cn/atom.xml" rel="self"/>
  
  <link href="http://aikenh.cn/"/>
  <updated>2023-11-11T06:54:29.000Z</updated>
  <id>http://aikenh.cn/</id>
  
  <author>
    <name>AikenH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树莓派家庭影音中心2</title>
    <link href="http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%9F%B3%E4%B8%AD%E5%BF%832/"/>
    <id>http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%9F%B3%E4%B8%AD%E5%BF%832/</id>
    <published>2023-11-11T04:08:37.000Z</published>
    <updated>2023-11-11T06:54:29.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;禁止屏幕休眠显示作为-Dashboard-显示&quot;&gt;&lt;a href=&quot;#禁止屏幕休眠显示作为-Dashboard-显示&quot; class=&quot;headerlink&quot; title=&quot;禁止屏幕休眠显示作为 Dashboard 显示&quot;&gt;&lt;/a&gt;禁止屏幕休眠显示作为 Dashboard 显示&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;树莓派官方的 Raspbian 系统使用的是 lightdm 桌面显示管理器，可以设置 xservice 桌面交互显示来达到屏幕常亮的目的，也就是修改桌面配置文件 lightdm.Conf&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;http://www.raspi.cc/read-10-1.html&quot;&gt;树莓派设置禁止让屏幕休眠，显示器保持常亮状态-树莓派基础学习入门-树莓派极客,raspi.cc - Powered by raspi&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;sudo vim /etc/lightdm/lightdm.conf&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;找到 x-server-command 取消注释并在后面加 &lt;code&gt;-s 0-dpms&lt;/code&gt;，添加完后重启即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20231111132731.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参数里的：-s 参数：设置屏幕保护不启动，0 数字零，-dpms 参数：关闭电源节能管理。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="Raspberry-pie" scheme="http://aikenh.cn/categories/Dev/Raspberry-pie/"/>
    
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
    <category term="Raspberry-Pie" scheme="http://aikenh.cn/tags/Raspberry-Pie/"/>
    
    <category term="Kodi" scheme="http://aikenh.cn/tags/Kodi/"/>
    
  </entry>
  
  <entry>
    <title>破解本地自托管Emby服务</title>
    <link href="http://aikenh.cn/cn/emby_localhost_crack_by_nginx/"/>
    <id>http://aikenh.cn/cn/emby_localhost_crack_by_nginx/</id>
    <published>2023-11-10T06:05:15.000Z</published>
    <updated>2023-11-13T00:57:13.243Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Intro-问题描述&quot;&gt;&lt;a href=&quot;#Intro-问题描述&quot; class=&quot;headerlink&quot; title=&quot;Intro 问题描述&quot;&gt;&lt;/a&gt;Intro 问题描述&lt;/h2&gt;&lt;p&gt;以 emby 为例，学习如何对这种自托管的服务，请求验证网站的软件进行破解，破解的整体思路分为以下的两类：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一种是改客户端，一种是改服务端。两种方式的最终原理一样，都是搭建仿冒认证服务器，客户端访问伪服务器拿到授权信息；【3】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此无论是那种方法我们都需要搭建伪验证服务器：所以以下的操作是必须的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;抓取定位到验证服务器的地址，并获取验证服务器返回的验证信息格式；&lt;/li&gt;
&lt;li&gt;使用 Nginx 搭建虚拟的验证服务器，使其返回激活/验证信息；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果是&lt;strong&gt;修改客户端&lt;/strong&gt;，则在搭建完验证站后需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改 Host 文件，将请求验证服务器的请求劫持到本地搭建的服务上；&lt;/li&gt;
&lt;li&gt;需要伪服务器和客户端都要安装自签名证书&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是&lt;strong&gt;修改服务端&lt;/strong&gt;，则后续需要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改服务端源文件，将默认的认证服务器 mb3admin.com 地址直接改成伪服务器&lt;/li&gt;
&lt;li&gt;这样就&lt;strong&gt;不需要安装自签名证书&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果是使用 Docker 进行部署的 emby 可以使用别人修改好的服务端的镜像进行部署安装（like 开心版）&lt;/p&gt;
&lt;p&gt;本文主要介绍验证服务器的搭建、修改客户端的方法，以及一些其他的注意事项；&lt;/p&gt;</summary>
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
    <category term="Web" scheme="http://aikenh.cn/tags/Web/"/>
    
    <category term="nginx" scheme="http://aikenh.cn/tags/nginx/"/>
    
    <category term="emby" scheme="http://aikenh.cn/tags/emby/"/>
    
  </entry>
  
  <entry>
    <title>使用Ipv6部署服务03 DDNS-go 动态域名解析</title>
    <link href="http://aikenh.cn/cn/deploy_server_byipv6_03_ddnsgo/"/>
    <id>http://aikenh.cn/cn/deploy_server_byipv6_03_ddnsgo/</id>
    <published>2023-11-07T05:40:13.000Z</published>
    <updated>2023-11-08T00:45:33.507Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本系列主要介绍通过公网的 ipv6 访问局域网设备并部署自己的服务供公网访问；本篇是其中的第三篇，以 DDNS-go 开源项目为例，部署动态域名解析服务，自动更新主机记录值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
    <category term="Ipv6" scheme="http://aikenh.cn/tags/Ipv6/"/>
    
    <category term="Web" scheme="http://aikenh.cn/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>使用Ipv6部署服务02 Nginx和Https</title>
    <link href="http://aikenh.cn/cn/deploy_server_byipv6_02_nginx/"/>
    <id>http://aikenh.cn/cn/deploy_server_byipv6_02_nginx/</id>
    <published>2023-11-06T12:49:16.000Z</published>
    <updated>2023-11-13T00:56:55.123Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本系列主要介绍通过公网的 ipv6 访问局域网设备并部署自己的服务供公网访问；本篇是其中的第二篇，以腾讯云和 Nginx 为例，介绍如何将服务部署到 &lt;a href=&quot;https://域名&quot;&gt;https://域名&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需要以下的事前准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;腾讯云/阿里云/Cloudflare 等随便一个地方购买一个自己的域名&lt;/li&gt;
&lt;li&gt;公网 ipv4/ipv6 地址&lt;/li&gt;
&lt;li&gt;本地部署一个服务以供测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Nginx-Docker-安装&quot;&gt;&lt;a href=&quot;#Nginx-Docker-安装&quot; class=&quot;headerlink&quot; title=&quot;Nginx(Docker) 安装&quot;&gt;&lt;/a&gt;Nginx(Docker) 安装&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;这里选择 Docker 来分离安装 Nginx 服务，Docker 部署的优势这里就不再赘述，这里建议使用 portainer 进行容器管理和运行状态查看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先创建存放 Nginx 配置文件和证书文件的目录，后续挂载给 Nginx Contrainer 使用：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;mkdir -p /home/username/docker-file/nginx/conf.d&lt;br&gt;mkdir -p /home/username/docker-file/nginx/cert&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;配置文件存放到 &lt;code&gt;conf.d&lt;/code&gt; 中，&lt;strong&gt;各种 SSL 证书则存放到&lt;/strong&gt; &lt;code&gt;cert&lt;/code&gt; 文件夹中；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接着部署 Nginx，这次先不挂载目录，将 Nginx 中一些默认配置拷贝出来，以供后续使用和修改：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;run会自己执行镜像拉取，pull可以不执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;docker pull nginx&lt;/span&gt;&lt;br&gt;sudo docker run --name nginx -p 80:80 -d nginx &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将配置文件复制出来：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;sudo docker cp nginx:/etc/nginx/conf.d/default.conf /home/username/docker-file/nginx/conf.d/default.conf&lt;br&gt;sudo docker cp nginx:/etc/nginx/nginx.conf /home/username/docker-file/nginx/conf.d/nginx.conf&lt;br&gt;sudo docker cp nginx:/etc/nginx/mime.types /home/username/docker-file/nginx/conf.d/mime.types&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基于原始的配置文件挂载后查看 nginx 是否正常运行：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;sudo docker rm -f nginx&lt;br&gt;sudo docker run --name nginx -p 80:80 -p 443:443 -v /home/username/docker-file/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf -v /home/username/docker-file/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf -v /home/username/docker-file/nginx/conf.d/mime.types:/etc/nginx/mime.types -v /home/username/docker-file/nginx/cert:/etc/nginx/cert -d nginx&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.cnblogs.com/Aamir-Ye/p/16823739.html&quot;&gt;使用docker部署nginx并配置https - 逊老头 - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
    <category term="Ipv6" scheme="http://aikenh.cn/tags/Ipv6/"/>
    
    <category term="Web" scheme="http://aikenh.cn/tags/Web/"/>
    
    <category term="nginx" scheme="http://aikenh.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Windows端口异常占用</title>
    <link href="http://aikenh.cn/cn/Windows%E7%AB%AF%E5%8F%A3%E5%BC%82%E5%B8%B8%E5%8D%A0%E7%94%A8/"/>
    <id>http://aikenh.cn/cn/Windows%E7%AB%AF%E5%8F%A3%E5%BC%82%E5%B8%B8%E5%8D%A0%E7%94%A8/</id>
    <published>2023-11-05T15:46:54.000Z</published>
    <updated>2023-11-06T00:40:21.320Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Windows11基于 WSL2启动 docker 后报错如下（需要注意有时候使用启动命令会报错，但是 restart 命令 docker 可以运行，对应服务无法访问）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Bind: An attempt was</summary>
        
      
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    
    <category term="Docker" scheme="http://aikenh.cn/tags/Docker/"/>
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>使用Ipv6部署服务01 IPV6开启和设置</title>
    <link href="http://aikenh.cn/cn/deploy_server_byipv6/"/>
    <id>http://aikenh.cn/cn/deploy_server_byipv6/</id>
    <published>2023-11-05T11:23:17.000Z</published>
    <updated>2023-11-13T00:56:43.089Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本系列主要介绍通过公网的 ipv6 访问局域网设备并部署自己的服务供公网访问；本篇是其中的第一篇，以电信宽带为例，说明如何开启 ipv6 服务和外网访问放行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;开启 IPV6 服务主要需要修改两个地方的配置：&lt;strong&gt;光猫开启桥接模式和 IPV6 &lt;/strong&gt;、&lt;strong&gt;路由器修改为 pppoe 拨号模式以及防火墙设置&lt;/strong&gt;；这里以本人的电信光猫和小米路由器为例：&lt;/p&gt;
&lt;h2 id=&quot;背景介绍&quot;&gt;&lt;a href=&quot;#背景介绍&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h2&gt;&lt;p&gt;需要在外网访问部署于家庭内网的一些服务，考虑了以下的几个方案，决定使用 ipv6作为核心&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;方案&lt;/th&gt;
&lt;th&gt;简要说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;内网穿透&lt;/td&gt;
&lt;td&gt;Zerotier&lt;/td&gt;
&lt;td&gt;免费，需要注册账户，支持移动端，国内速度极慢，且不稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内网穿透&lt;/td&gt;
&lt;td&gt;Tailscale（备用）&lt;/td&gt;
&lt;td&gt;免费，需要注册账号，支持移动端，国内速度一版，稳定性相 Zetotier 较好，但仍不够稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内网穿透&lt;/td&gt;
&lt;td&gt;frp&lt;/td&gt;
&lt;td&gt;申请一个有公网的服务器，使用 frp 自己作为内网穿透的中转，贵，较为麻烦&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;公网 IP&lt;/td&gt;
&lt;td&gt;Ipv4&lt;/td&gt;
&lt;td&gt;难以申请，其他都好&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;公网 IP&lt;/td&gt;
&lt;td&gt;Ipv6（主力）&lt;/td&gt;
&lt;td&gt;获取简单，需要配置一下光猫使用，一劳永逸，快，稳定，多，有暴露公网的危险，需要设置防火墙&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;其他&lt;/td&gt;
&lt;td&gt;Cloudflare Zerotrust&lt;/td&gt;
&lt;td&gt;简单，免费，可以绑定域名，但是网站根本登不进去配置页面，速度不快&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2 id=&quot;光猫设置&quot;&gt;&lt;a href=&quot;#光猫设置&quot; class=&quot;headerlink&quot; title=&quot;光猫设置&quot;&gt;&lt;/a&gt;光猫设置&lt;/h2&gt;&lt;p&gt;查看光猫背面的管理员 url，进入光猫管理界面，登录&lt;strong&gt;超级管理员账户&lt;/strong&gt;（非普通账户，会跳转到更详细的管理页面，大部分同地区的超级管理员账户应该是一致的，不对可以询问下宽带师傅）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理地址通常为：192.168.1.1&lt;/li&gt;
&lt;li&gt;超级管理员账号：useradmin&lt;/li&gt;
&lt;li&gt;超级管理员密码：nE7jA%5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开始之前准备 PPPoe 拨号的帐号和密码，不知道的话等询问好了再开始操作。&lt;/p&gt;
&lt;p&gt;在天翼网关-&amp;gt;网络-&amp;gt;网络设置中进行如下的操作：（这里可以尝试改成 pppoe 并通过开发者模式查看密码，不知道密码不要轻易进行后续操作）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;连接名称选择 &lt;code&gt;+++INTERENT_R_VID_41&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;连接模式从路由改为桥接&lt;/li&gt;
&lt;li&gt;IP 模式确认为 &lt;code&gt;IPv4&amp;amp;IPv6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击保存/应用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20231105215512.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在天翼网关-&amp;gt;状态-&amp;gt;网络侧信息中检查 IPv4 和 IPv6 是否都开启成功：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20231105215637.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://cloud.tencent.com/developer/article/1894991&quot;&gt;个人宽带如何开启IPv6网络访问&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
    <category term="Ipv6" scheme="http://aikenh.cn/tags/Ipv6/"/>
    
    <category term="Web" scheme="http://aikenh.cn/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Obsidian使用 Spaced Repetition 制作闪念卡片</title>
    <link href="http://aikenh.cn/cn/Flashcard_template/"/>
    <id>http://aikenh.cn/cn/Flashcard_template/</id>
    <published>2023-10-27T16:39:59.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;该文作为基础的闪念卡片的使用说明，介绍几种闪念卡片定义的方式，便于后续查阅，参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/558326315&quot;&gt;Obsidian: Spaced Repetition插件使用指南 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.stephenmwangi.com/obsidian-spaced-repetition/&quot;&gt;Index - Obsidian Spaced Repetition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基本规则&quot;&gt;&lt;a href=&quot;#基本规则&quot; class=&quot;headerlink&quot; title=&quot;基本规则&quot;&gt;&lt;/a&gt;基本规则&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;单个确定为 Flashcards 的笔记文件中可以存放多个闪念卡片。&lt;/li&gt;
&lt;li&gt;会根据记忆程度来设立需要复习的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;卡片分组&quot;&gt;&lt;a href=&quot;#卡片分组&quot; class=&quot;headerlink&quot; title=&quot;卡片分组&quot;&gt;&lt;/a&gt;卡片分组&lt;/h2&gt;&lt;p&gt;在 Tab 中使用 &lt;code&gt;/&lt;/code&gt; 可以引出卡片界面的层级，只需要在设置里设定最高层的分组，后续的分组用 &lt;code&gt;/&lt;/code&gt; 引出即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20231027212958.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用以下的标签就能实现上述的分组结果：&lt;code&gt;#vocabulary/day00&lt;/code&gt;；需要注意到的是只有至少一个问答时才会显示在对应的表中。&lt;/p&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Obsidian" scheme="http://aikenh.cn/categories/Editor/Obsidian/"/>
    
    
    <category term="Obsidian" scheme="http://aikenh.cn/tags/Obsidian/"/>
    
    <category term="Markdown" scheme="http://aikenh.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>VsCode&#39;s RegExp Catch 正则捕获</title>
    <link href="http://aikenh.cn/cn/vsocde_regexp/"/>
    <id>http://aikenh.cn/cn/vsocde_regexp/</id>
    <published>2023-10-19T08:53:03.000Z</published>
    <updated>2023-10-31T00:30:46.713Z</updated>
    
    
    <summary type="html">&lt;p&gt;本篇简单介绍一些 VsCode 进行文本替换和查找的一些特殊的正则，该文会随着自己的使用来逐步记录，目前主要内容如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;捕获组合及其替换模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里不会介绍正则表达式的语法，对其基本语法感兴趣可以查看如下链接 &lt;a href=&quot;https://learn.microsoft.com/zh-cn/visualstudio/ide/using-regular-expressions-in-visual-studio?view=vs-2022&quot;&gt;VsCode使用正则表达式&lt;/a&gt;，以及我之前写过的&lt;a href=&quot;https://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8B%E6%AD%A3%E5%88%99/&quot;&gt;基础的正则表达式&lt;/a&gt; 一文，下面进入正题；&lt;/p&gt;
&lt;h2 id=&quot;Intro-正则搜索&quot;&gt;&lt;a href=&quot;#Intro-正则搜索&quot; class=&quot;headerlink&quot; title=&quot;Intro 正则搜索&quot;&gt;&lt;/a&gt;Intro 正则搜索&lt;/h2&gt;&lt;p&gt;正则表达式主要思路为&lt;strong&gt;模式匹配&lt;/strong&gt;，通过符号表达来指定一种模式，识别所有符合该模式的字符组合，而非某些&lt;strong&gt;特定的文字&lt;/strong&gt;，因此可以简化我们的搜索和替换过程，下面以一个例子说明。&lt;/p&gt;
&lt;p&gt;例如有一个文件配置如下，而我们希望找到其中所有 &lt;code&gt;user_config&lt;/code&gt; ，查看每个 user 的设置是否正确，由于 username 的长度和内容都不是一样的，所以这里需要使用正则来进行搜索：&lt;/p&gt;
&lt;figure class=&quot;highlight txt&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs txt&quot;&gt;zxc1_config=123&lt;br&gt;some content we dont need&lt;br&gt;asd2_config=234&lt;br&gt;and some other infomation or comment&lt;br&gt;qwer3_config=345&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对应该场景的正则表达则为 &lt;code&gt;+*_config=&lt;/code&gt; 或者 &lt;code&gt;[a-z, 0-9]*_config=&lt;/code&gt; 等写法均可，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20231019173213.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到我们需要的内容都被高亮了，这也就方便了我们进行一些复杂的文字处理，而搜索，也就是正则最基本也是最正统的用法，这里不再多说。&lt;/p&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vscode" scheme="http://aikenh.cn/categories/Editor/Vscode/"/>
    
    
    <category term="VsCode" scheme="http://aikenh.cn/tags/VsCode/"/>
    
    <category term="RegExp" scheme="http://aikenh.cn/tags/RegExp/"/>
    
  </entry>
  
  <entry>
    <title>GoMetis00_INTRO</title>
    <link href="http://aikenh.cn/cn/GoMetis00_INTRO/"/>
    <id>http://aikenh.cn/cn/GoMetis00_INTRO/</id>
    <published>2023-10-08T09:58:57.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="NotDone" scheme="http://aikenh.cn/tags/NotDone/"/>
    
  </entry>
  
  <entry>
    <title>Photography00 XS20_Recipes</title>
    <link href="http://aikenh.cn/cn/TaskPhoto00_Xs20_Recipes/"/>
    <id>http://aikenh.cn/cn/TaskPhoto00_Xs20_Recipes/</id>
    <published>2023-10-04T16:41:43.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Photography" scheme="http://aikenh.cn/categories/Photography/"/>
    
    
    <category term="Photography" scheme="http://aikenh.cn/tags/Photography/"/>
    
  </entry>
  
  <entry>
    <title>HomeAssistant01 入门基础篇</title>
    <link href="http://aikenh.cn/cn/HomeAssistant_Init/"/>
    <id>http://aikenh.cn/cn/HomeAssistant_Init/</id>
    <published>2023-08-12T09:24:50.000Z</published>
    <updated>2023-11-13T00:57:03.221Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt; 接下来本文安装的是 Container 版本的 HA，并非 Supervised 的版本，所以其中是不包含 Add-on 的，如果需要特定的 Add-on 的版本请注意。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基于本篇流程安装 HA 的前置条件是系统上已经安装好了可用的 Docker，该文会介绍 HA 和 HACS 的安装以及一些基础的配置。&lt;/p&gt;
&lt;h2 id=&quot;HA-amp-HACS-安装&quot;&gt;&lt;a href=&quot;#HA-amp-HACS-安装&quot; class=&quot;headerlink&quot; title=&quot;HA &amp;amp; HACS 安装&quot;&gt;&lt;/a&gt;HA &amp;amp; HACS 安装&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt; 本文安装于 Raspberry pi 4B，与其他操作环境可能会存在一些差异，要注意甄别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;HA&quot;&gt;&lt;a href=&quot;#HA&quot; class=&quot;headerlink&quot; title=&quot;HA&quot;&gt;&lt;/a&gt;HA&lt;/h3&gt;&lt;p&gt;安装过程主要参考 &lt;a href=&quot;https://www.home-assistant.io/installation/raspberrypi&quot;&gt;Raspberry Pi - Home Assistant &lt;/a&gt; 中 Install Home Assistant Container 的章节，如果为其他的 OS 也可以在官网找到类似的指引，不过 docker 版本的差异应该不会特别的大，个人的 Docker Compose File 也已经上传到 &lt;a href=&quot;https://github.com/AikenH/aikenh-DockerComposeYML/blob/master/HomeAssistant/docker-compose.yml&quot;&gt;GITHUB&lt;/a&gt; 可自行取用。&lt;/p&gt;
&lt;p&gt;修改完 &lt;code&gt;-v&lt;/code&gt; 的挂载目录以后（将数据保存在本地的目录）和 &lt;code&gt;-e&lt;/code&gt; 的时区后，即可执行拉取和安装 docker，这里-v 挂载的本地目录要记得，后面有用。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;docker compose up -d &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完后基于 Host 模式的 HA 会运行在 &lt;a href=&quot;http://localhost:8123&quot;&gt;http://localhost:8123&lt;/a&gt; 中，localhost 也可以用 ip 替代。安装完后随着&lt;a href=&quot;https://www.home-assistant.io/getting-started/onboarding/&quot;&gt;指引&lt;/a&gt;完成一些基础的设置，设置好默认的账号密码即可重启 docker 进入 HA 的界面；&lt;/p&gt;
&lt;p&gt;到这里已经可以做一些基础的使用了，但是为了支持更多智能家具产品，往往需要安装第三方用户商店 HACS ，从中去下载对于其他智能家具产品的支持。&lt;/p&gt;
&lt;h3 id=&quot;HACS&quot;&gt;&lt;a href=&quot;#HACS&quot; class=&quot;headerlink&quot; title=&quot;HACS&quot;&gt;&lt;/a&gt;HACS&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Home Assistant Community Store 第三方用户商店，便于下载各种各样的集成实现对于各个不同智能家具品牌和产品的支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;各种不同版本的安装方式可以参考&lt;a href=&quot;https://hacs.xyz/docs/setup/download&quot;&gt;官方网页&lt;/a&gt;，以下只介绍基于 Container 的安装方式，官方提供了安装脚本，因此现在下载已经相对简单，具体如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入挂载的本地目录，执行下面命令，即包含了下载和执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;wget -O - https://get.hacs.xyz | bash -&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;如果下不下来也可以直接打开网页复制进.Sh 脚本中；也可以去我的仓库中拉下来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装完重启 HA，在集成页面添加集成，搜索 HACS，搜索到直接进行安装，跟随配置进行安装，并打开 GITHUB 进行登录和授权即可。&lt;/p&gt;</summary>
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    
    <category term="Raspberry Pie" scheme="http://aikenh.cn/tags/Raspberry-Pie/"/>
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
    <category term="HomeAssistant" scheme="http://aikenh.cn/tags/HomeAssistant/"/>
    
  </entry>
  
  <entry>
    <title>linux下载命令之Wget和Curl</title>
    <link href="http://aikenh.cn/cn/LinuxCLI_Download/"/>
    <id>http://aikenh.cn/cn/LinuxCLI_Download/</id>
    <published>2023-07-07T14:10:52.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;想要通过命令行直接下载文件，通常想到的就是下面的两个工具：wget 和 curl，下面简单介绍一下两者的使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Wget&quot;&gt;&lt;a href=&quot;#Wget&quot; class=&quot;headerlink&quot; title=&quot;Wget&quot;&gt;&lt;/a&gt;Wget&lt;/h2&gt;&lt;p&gt;&lt;code&gt;wget&lt;/code&gt; 全称为 &lt;code&gt;web get&lt;/code&gt; ，其基本用法为：&lt;code&gt;wget [-para] url&lt;/code&gt; ，常用的参数有以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-O 指定下载文件的保存名称&lt;/li&gt;
&lt;li&gt;-b 为后台下载模式&lt;/li&gt;
&lt;li&gt;-P 下载到指定目录&lt;/li&gt;
&lt;li&gt;-c 支持断电续传&lt;/li&gt;
&lt;li&gt;-p 下载页面内的所有资源、包括图片视频等 &lt;/li&gt;
&lt;li&gt;-r 递归下载&lt;/li&gt;
&lt;li&gt;-t 最大尝试次数&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 默认无需参数的情况下即会将文件下载到当前文件夹下。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 也是最常见的用法，可以加入-c避免下载中断&lt;/span&gt;&lt;br&gt;wget url&lt;br&gt;wget -O file.tgz url&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考 Man Page 或者 &lt;a href=&quot;https://www.explainshell.com/explain/1/wget&quot;&gt;ExplainShell&lt;/a&gt; 可以找到完整的参数列表；支持从文件中读取 url ；将 log 写入指定的文件等等功能；&lt;/p&gt;
&lt;p&gt;可以看出 wget 是一个简单，专职的下载利器，无论是用来下载安装包还是 pdf 之类的东西是一个相当方便的下载工具。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    <category term="CLI" scheme="http://aikenh.cn/categories/Linux/CLI/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="CLI" scheme="http://aikenh.cn/tags/CLI/"/>
    
  </entry>
  
  <entry>
    <title>NumpyConcatenate加速</title>
    <link href="http://aikenh.cn/cn/NumpyConcatenate%E5%8A%A0%E9%80%9F/"/>
    <id>http://aikenh.cn/cn/NumpyConcatenate%E5%8A%A0%E9%80%9F/</id>
    <published>2023-07-02T02:52:26.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;多次循环进行 Numpy Concentrate 操作后，当原始数组变得过大的时，单步处理时间会逐渐变长，处理大量数据的时候时间成本极高。&lt;/p&gt;
&lt;h2 id=&quot;解决思路&quot;&gt;&lt;a href=&quot;#解决思路&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Numpy" scheme="http://aikenh.cn/tags/Numpy/"/>
    
  </entry>
  
  <entry>
    <title>树莓派02 家用服务器</title>
    <link href="http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%B6%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2023-07-02T02:30:11.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;树莓派家庭服务器的搭建以 docker 为核心，通过 docker 统一管理家庭服务，目前搭建的服务还在持续完善中，主要目的是为了方便日常使用、满足学习和探索的需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Docker 的安装这里不再赘述，参考 Docker Configuration01 Install on Linux 一文进行安装即可；本篇主要侧重于介绍部署的镜像和服务，以及简单介绍使用方式。&lt;/p&gt;
&lt;h2 id=&quot;一些-Docker-容器推荐&quot;&gt;&lt;a href=&quot;#一些-Docker-容器推荐&quot; class=&quot;headerlink&quot; title=&quot;一些 Docker 容器推荐&quot;&gt;&lt;/a&gt;一些 Docker 容器推荐&lt;/h2&gt;&lt;p&gt;这里推荐一些 Docker 容器：Alist、XiaoYa、PiDashboard、redis、mysql、portainer、memos、wikijs&lt;/p&gt;
&lt;p&gt;相关的 Docker-Compose 文件会上传到&lt;a href=&quot;https://github.com/AikenH/aikenh-DockerComposeYML&quot;&gt;AikenH/aikenh-DockerComposeYML (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;数据库部署与远程连接测试&quot;&gt;&lt;a href=&quot;#数据库部署与远程连接测试&quot; class=&quot;headerlink&quot; title=&quot;数据库部署与远程连接测试&quot;&gt;&lt;/a&gt;数据库部署与远程连接测试&lt;/h2&gt;&lt;h3 id=&quot;sqlite-3&quot;&gt;&lt;a href=&quot;#sqlite-3&quot; class=&quot;headerlink&quot; title=&quot;sqlite 3&quot;&gt;&lt;/a&gt;sqlite 3&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Sqlite 与 Mysql 等不同，是一个无服务器、零配置的数据库，其更像是一个解析特定数据库文件的命令接口（CLI 工具），其将数据完全存储于一个单一的跨平台磁盘文件中；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 sqlite3 的特性，决定了其是一个&lt;strong&gt;轻量级&lt;/strong&gt;且&lt;strong&gt;不需要额外配置&lt;/strong&gt;的数据库，但是在远程访问方面，只能通过文件共享来实现远程操作数据库。&lt;/p&gt;
&lt;p&gt;大多数的 Linux 系统版本都会附带 SQLite 的安装，因此我们可以直接使用下面的指令验证一下是否安装：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sqlite3&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果没有安装的话，可以去官方的&lt;a href=&quot;https://www.sqlite.org/download.html&quot;&gt;下载页面&lt;/a&gt;下载对应的预编译包，然后进行安装即可。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;wget https://www.sqlite.org/2023/sqlite-autoconf-3420000.tar.gz&lt;br&gt;tar -zxvf sqlite-autoconf-3420000.tar.gz&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; sqlite-autoconf-3420000&lt;br&gt;./configure --prefix=/usr/local&lt;br&gt;make &lt;br&gt;make install&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里也提供使用 Docker-compose 安装的方式，但实际上看该数据库的特性，用 docker 安装的并不是推荐的选择。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.mustafabugra.com/development/sqlite-3-docker-compose/&quot;&gt;SQLite 3 Docker Compose – Mustafa Bugra&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs yaml&quot;&gt;&lt;span class=&quot;hljs-attr&quot;&gt;version:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-attr&quot;&gt;services:&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-attr&quot;&gt;sqlite3:&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;container_name:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;sqlite3_container&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;image:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;nouchka/sqlite3:latest&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;stdin_open:&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;tty:&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;volumes:&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-comment&quot;&gt;#Modify following line&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;path-to/your/databases/sqlite3:/root/db/&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;ports:&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-bullet&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;9000:9000&amp;#x27;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;# expose ports - HOST:CONTAINER&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;restart:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;unless-stopped&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是树莓派的 ARM64，可能需要使用另一个&lt;a href=&quot;https://hub.docker.com/r/keinos/sqlite3&quot;&gt;镜像&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;docker run --&lt;span class=&quot;hljs-built_in&quot;&gt;rm&lt;/span&gt; -it -v &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;&lt;span class=&quot;hljs-subst&quot;&gt;$(pwd)&lt;/span&gt;:/workspace&amp;quot;&lt;/span&gt; -w /workspace keinos/sqlite3&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是该镜像的使用方式，实际上就是将其当成一个命令来用，所以还是建议本机安装。&lt;/p&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="Raspberry-pie" scheme="http://aikenh.cn/categories/Dev/Raspberry-pie/"/>
    
    
    <category term="SQL" scheme="http://aikenh.cn/tags/SQL/"/>
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
    <category term="Raspberry-Pie" scheme="http://aikenh.cn/tags/Raspberry-Pie/"/>
    
  </entry>
  
  <entry>
    <title>树莓派01 家庭影音中心</title>
    <link href="http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%9F%B3%E4%B8%AD%E5%BF%83/"/>
    <id>http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%B6%E5%BA%AD%E5%BD%B1%E9%9F%B3%E4%B8%AD%E5%BF%83/</id>
    <published>2023-06-27T23:28:27.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;将 RaspBerry Pi 4B 作为家庭影视中心/机顶盒的核心就是 KODI 软件，这是考虑到以下的几点：遥控器的控制、对挂载 webdav 和其他的支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最方便的方式可以选择以 KODI 为核心的两个 OS：LibreELEC、OSMC（推荐），这两个系统以 KODI 为默认启动，同时也支持远程登录和 Docker 部署等 Linux 的功能。后者更为推荐应该是前者的官方改进版本。&lt;/p&gt;
&lt;p&gt;考虑到后续可能会将该 SD 卡用于其他用处，因此本文选择的是使用 RaspBerryPi OS 的方案，以下围绕该方案进行展开：&lt;/p&gt;
&lt;h2 id=&quot;RaspBerry-Pi-OS-Kodi-Alist-方案探究&quot;&gt;&lt;a href=&quot;#RaspBerry-Pi-OS-Kodi-Alist-方案探究&quot; class=&quot;headerlink&quot; title=&quot;RaspBerry Pi OS+Kodi+Alist 方案探究&quot;&gt;&lt;/a&gt;RaspBerry Pi OS+Kodi+Alist 方案探究&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;可以参考 trouble shooting，可以发现实际上安装 kodi 最简单的方式就是直接使用 apt，无需做其他的 PPA 添加。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装Kodi&quot;&gt;&lt;a href=&quot;#安装Kodi&quot; class=&quot;headerlink&quot; title=&quot;安装Kodi&quot;&gt;&lt;/a&gt;安装Kodi&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sudo apt-get install kodi&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完后，使用 kodi 命令开启或者在开始菜单的软件中心中选择 kodi 打开。&lt;/p&gt;
&lt;h3 id=&quot;设置-GPU-显存（硬解相关）&quot;&gt;&lt;a href=&quot;#设置-GPU-显存（硬解相关）&quot; class=&quot;headerlink&quot; title=&quot;设置 GPU 显存（硬解相关）&quot;&gt;&lt;/a&gt;设置 GPU 显存（硬解相关）&lt;/h3&gt;&lt;p&gt;首先做一下&lt;strong&gt;固件的升级&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sudo rpi-update&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后&lt;strong&gt;调整一下显存&lt;/strong&gt;：系统设置里面将 gpu_mem 调高一些，我使用的是 4G，调整到了 256MB，切记不要调整太高，否则可能会开机失败，重启后查看显存是否设置成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看 GPU 显存&lt;/strong&gt;的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;vcgencmd get_mem arm &amp;amp;&amp;amp; vcgencmd get_mem gpu&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后在 kodi 中查看相关的选项的开关情况：&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.liujason.com/article/656.html&quot;&gt;树莓派RaspberryPi 4B设置显存开启硬件加速 支持Emby|Plex|JellyFin转码 LiuJason’sBlog&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="Raspberry-pie" scheme="http://aikenh.cn/categories/Dev/Raspberry-pie/"/>
    
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
    <category term="Raspberry-Pie" scheme="http://aikenh.cn/tags/Raspberry-Pie/"/>
    
    <category term="Kodi" scheme="http://aikenh.cn/tags/Kodi/"/>
    
  </entry>
  
  <entry>
    <title>Clash局域网代理共享</title>
    <link href="http://aikenh.cn/cn/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%BB%A3%E7%90%86%E5%85%B1%E4%BA%AB/"/>
    <id>http://aikenh.cn/cn/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%BB%A3%E7%90%86%E5%85%B1%E4%BA%AB/</id>
    <published>2023-06-22T02:41:25.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文介绍基于 Windows Clash Desktop 的代理服务器设置，可以为局域网内的设备提供代理服务，该方案可以解决一定的科学上网需求，但是没办法覆盖所有的场景，例如 PS5 的 Netflix ，其不走代理服务器，因此无法通过该方案解决，（软路由可破）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本篇的设置内容主要会从两个方面出发：一个是服务器的开启和防火墙的设置、另一个是客户端如何设置使用对应的代理服务器。&lt;/p&gt;
&lt;h2 id=&quot;Clash开启代理服务器&quot;&gt;&lt;a href=&quot;#Clash开启代理服务器&quot; class=&quot;headerlink&quot; title=&quot;Clash开启代理服务器&quot;&gt;&lt;/a&gt;Clash开启代理服务器&lt;/h2&gt;&lt;p&gt;Clash 作为局域网代理服务器开启的方式十分简单，主要是以下几步。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开启局域网访问 -&amp;gt; 设置端口，查看 ip -&amp;gt;  防火墙允许通行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;配置代理服务器&quot;&gt;&lt;a href=&quot;#配置代理服务器&quot; class=&quot;headerlink&quot; title=&quot;配置代理服务器&quot;&gt;&lt;/a&gt;配置代理服务器&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;开启局域网访问&lt;/strong&gt;： Allow LAN 打钩即可。&lt;br&gt;&lt;strong&gt;端口&lt;/strong&gt;：设置好想要的 mixport 即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230626091350.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;防火墙允许通行&lt;/strong&gt;： 防火墙-&amp;gt; 高级设置，找到 Clash 所有项，允许其在专用网络上通行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230626091506.png&quot; alt=&quot;image.png&quot;&gt;&lt;br&gt;&lt;strong&gt;查看 ip&lt;/strong&gt;：命令行输入 &lt;code&gt;ipconfig/ all&lt;/code&gt; 里面的 WLAN 模块，可以找到自己的局域网 ip&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230626091742.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
    <category term="Clash" scheme="http://aikenh.cn/tags/Clash/"/>
    
    <category term="LAN" scheme="http://aikenh.cn/tags/LAN/"/>
    
    <category term="Proxy" scheme="http://aikenh.cn/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>Docker Configuration01 Install on Linux</title>
    <link href="http://aikenh.cn/cn/Docker01_linux/"/>
    <id>http://aikenh.cn/cn/Docker01_linux/</id>
    <published>2023-06-22T01:25:29.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;不同于 Docker 在 Windows 端借助 Desktop 可视化进行安装和配置，Linux 端没有默认的 Desktop 界面，因此会额外安装 portainer 作为我们 docker 的 Dashboard.&lt;/p&gt;
&lt;h2 id=&quot;Install-Docker-on-Ubuntu&quot;&gt;&lt;a href=&quot;#Install-Docker-on-Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Install Docker on Ubuntu&quot;&gt;&lt;/a&gt;Install Docker on Ubuntu&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;该部分完全转载自&lt;a href=&quot;https://docs.docker.com/engine/install/raspbian/&quot;&gt;官方&lt;/a&gt;的安装指引，如果流程需要更新的时候可以移步官网检查，此外官网还包含了其他几种安装方式，这里就不介绍，这里只介绍基于 apt 的安装方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;设置-apt-的-repo&quot;&gt;&lt;a href=&quot;#设置-apt-的-repo&quot; class=&quot;headerlink&quot; title=&quot;设置 apt 的 repo&quot;&gt;&lt;/a&gt;设置 apt 的 repo&lt;/h3&gt;&lt;p&gt;1 更新 apt 的索引，同时通过下载包来允许 Apt 基于 http 来索引仓库&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sudo apt-get update&lt;br&gt;sudo apt-get install ca-certificates curl gnupg&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2 安装 docker 官方的 GPG 秘钥&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sudo install -m 0755 -d /etc/apt/keyrings&lt;br&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&lt;br&gt;sudo &lt;span class=&quot;hljs-built_in&quot;&gt;chmod&lt;/span&gt; a+r /etc/apt/keyrings/docker.gpg&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3 配置对应的 repository&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &#92;&lt;br&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;deb [arch=&amp;quot;&lt;/span&gt;$(dpkg --print-architecture)&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu &#92;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;  &amp;quot;&lt;/span&gt;$(. /etc/os-release &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;&lt;span class=&quot;hljs-variable&quot;&gt;$VERSION_CODENAME&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot; stable&amp;quot;&lt;/span&gt; | &#92;&lt;br&gt;  sudo &lt;span class=&quot;hljs-built_in&quot;&gt;tee&lt;/span&gt; /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完成上述设置之后，就可以开始安装 Docker 了。&lt;br&gt;</summary>
    
    
    
    <category term="Docker" scheme="http://aikenh.cn/categories/Docker/"/>
    
    
    <category term="Docker" scheme="http://aikenh.cn/tags/Docker/"/>
    
    <category term="Portainer" scheme="http://aikenh.cn/tags/Portainer/"/>
    
  </entry>
  
  <entry>
    <title>树莓派00 组装和亮机篇</title>
    <link href="http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%E5%88%9D%E6%8E%A2/"/>
    <id>http://aikenh.cn/cn/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%E5%88%9D%E6%8E%A2/</id>
    <published>2023-06-20T14:38:15.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近入手了树莓派 4B，打算基于树莓派做一些有趣&amp;amp;有用的项目，该系列笔记来记录个人树莓派学习和开发的历程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;连载确认！该系列文章将会从装机开始，介绍树莓派用于以下几个项目的开发和部署过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] 基于 Docker 的家庭服务器&lt;/li&gt;
&lt;li&gt;[x] 智能家居控制中枢&lt;/li&gt;
&lt;li&gt;[x] 影音中心 &amp;amp; 电视机顶盒&lt;/li&gt;
&lt;li&gt;[ ] 物联网 or AI 的衍生应用实践&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本篇首先介绍亮机和开发环境设置过程，包含：组装、系统安装、远程开发环境设置（SSH、XRDP）&lt;/p&gt;
&lt;h2 id=&quot;树莓派组装&quot;&gt;&lt;a href=&quot;#树莓派组装&quot; class=&quot;headerlink&quot; title=&quot;树莓派组装&quot;&gt;&lt;/a&gt;树莓派组装&lt;/h2&gt;&lt;p&gt;树莓派组装上比较防呆接口，唯一需要注意的是散热块和风扇的安装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 CPU 和缓存等模块上装上散热片&lt;/li&gt;
&lt;li&gt;风扇的固定位置在外壳上，接线如下图所示&lt;/li&gt;
&lt;li&gt;SD 卡的安装位置在背面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230626091027.jpg&quot; alt=&quot;微信图片_20230626091027.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;系统安装&quot;&gt;&lt;a href=&quot;#系统安装&quot; class=&quot;headerlink&quot; title=&quot;系统安装&quot;&gt;&lt;/a&gt;系统安装&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;该部分仅介绍我使用的系统安装和烧录软件，系统的选择需要根据自己所拥有的设备，以及目的去选择。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;硬件准备：SD 卡，读卡器，一台正常运行的 PC，可外接的屏幕。&lt;/p&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="Raspberry-pie" scheme="http://aikenh.cn/categories/Dev/Raspberry-pie/"/>
    
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
    <category term="Raspberry-Pie" scheme="http://aikenh.cn/tags/Raspberry-Pie/"/>
    
  </entry>
  
  <entry>
    <title>Terminal multiplexer Zellij</title>
    <link href="http://aikenh.cn/cn/LinuxZellij/"/>
    <id>http://aikenh.cn/cn/LinuxZellij/</id>
    <published>2023-05-20T08:40:19.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Tmux 作为一款优秀的终端复用器，前面已经介绍过，这里在介绍一款有着相同功能的平替，个人认为 zellij 的 UI 各方面的设计，使得其相比于 Tmux 有着更低的入门难度，也避免了需要记大量快捷键，因此这里介绍一下该工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://zellij.dev/documentation/installation.html&quot;&gt;Zellij&lt;/a&gt; 是一款终端复用器，有什么功能可以完全参考 Tmux ，还支持了许多有趣的特性和自定义 Layout 等功能（可能后续用到的话会完善该部分笔记），详细的可以参考官网的介绍，接下来就简单的介绍一下安装和一些自定义的 Alias。&lt;/p&gt;
&lt;h2 id=&quot;Install-安装&quot;&gt;&lt;a href=&quot;#Install-安装&quot; class=&quot;headerlink&quot; title=&quot;Install 安装&quot;&gt;&lt;/a&gt;Install 安装&lt;/h2&gt;&lt;p&gt;Zellij 是基于 Rust 编写，因此在安装之前需要安装 rust 和 cargo（类似 rust 的包管理器），安装可以参考 &lt;a href=&quot;https://www.rust-lang.org/tools/install&quot;&gt;Rust 官方网站（推荐）&lt;/a&gt; |  &lt;a href=&quot;https://doc.rust-lang.org/cargo/getting-started/installation.html&quot;&gt;The Cargo Book&lt;/a&gt;  | &lt;a href=&quot;https://rustwiki.org/zh-CN/cargo/getting-started/installation.html&quot;&gt;Rust Wiki CN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方网站中介绍了 WSL 的安装指令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;curl --proto &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;=https&amp;#x27;&lt;/span&gt; --tlsv1.2 -sSf https://sh.rustup.rs | sh&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#--proto以及--tlsvl在Linux或者Macos安装的时候可以忽略&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完成后可以使用如下命令，基于 Cargo 安装 zellij：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;cargo install --locked zellij&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果出现了问题也可以尝试先更新 rust&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;rustup update&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    <category term="CLI" scheme="http://aikenh.cn/categories/Linux/CLI/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="CLI" scheme="http://aikenh.cn/tags/CLI/"/>
    
    <category term="Terminal multiplexer" scheme="http://aikenh.cn/tags/Terminal-multiplexer/"/>
    
  </entry>
  
  <entry>
    <title>AIGC05 Stable Diffusion Model Training</title>
    <link href="http://aikenh.cn/cn/StableDIffusionTraining/"/>
    <id>http://aikenh.cn/cn/StableDIffusionTraining/</id>
    <published>2023-05-06T15:43:41.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;该章节主要介绍 Stable-Diffusion 中模型的训练，考虑到硬件条件的限制，实际上这里介绍的训练，都是针对大模型的各种微调技术（Lora，Dreambooth，HyperNetwork, …），这里会以 LoRA 模型的训练为主。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考文献：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gamelook.com.cn/2023/04/514936&quot;&gt;AIGC教程：Stable Diffusion精进，如何训练特定画风LoRA模型？ | 游戏大观 | GameLook.com.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/wangiqngpei557/p/17301360.html&quot;&gt;stable diffusion打造自己专属的LORA模型 - 王清培 - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kohya-ss/sd-scripts/blob/main/train_README-zh.md&quot;&gt;sd-scripts/train_README-zh.md at main · kohya-ss/sd-scripts · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Train-LoRA&quot;&gt;&lt;a href=&quot;#Train-LoRA&quot; class=&quot;headerlink&quot; title=&quot;Train LoRA&quot;&gt;&lt;/a&gt;Train LoRA&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;LoRA 的优势就是其模型更小，且更加模块化；也就是说其的训练成本和要求都更低，同时使用代价小，可以作为某种风格插件或者角色插件来使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://huggingface.co/blog/zh/lora&quot;&gt;使用 LoRA 进行 Stable Diffusion 的高效参数微调 (huggingface.co)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2106.09685&quot;&gt;[2106.09685] LoRA: Low-Rank Adaptation of Large Language Models (arxiv.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20230706171541.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中蓝色的是预训练好的源网络，而橙色的是新加的网络，通过控制 R 的宽度（文章主要论证了大模型的参数可能存在较低维度的秩，因此可以使用较小的 R 来对大模型的参数造成有效的影响），可以有效的减少需要训练的网络的 Size。&lt;/p&gt;
&lt;h3 id=&quot;事前准备&quot;&gt;&lt;a href=&quot;#事前准备&quot; class=&quot;headerlink&quot; title=&quot;事前准备&quot;&gt;&lt;/a&gt;事前准备&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;这里只介绍本地训练，训练也可以在 Colab Notebook 等在线训练集群中进行，这里就不进行介绍了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;WebUI + 想训练的基础 SD 模型&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.txt&lt;/code&gt; 带说明的文本文件&lt;/li&gt;
&lt;li&gt;Training Repo（&lt;a href=&quot;https://github.com/kohya-ss/sd-scripts&quot;&gt;sd-script&lt;/a&gt;、&lt;a href=&quot;https://github.com/Akegarasu/lora-scripts&quot;&gt;lora-script&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;数据集准备（准备好训练图像）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;训练包准备&quot;&gt;&lt;a href=&quot;#训练包准备&quot; class=&quot;headerlink&quot; title=&quot;训练包准备&quot;&gt;&lt;/a&gt;训练包准备&lt;/h3&gt;&lt;p&gt;这里我们使用 lora-script 来进行模型训练，lora-script 实际上是 sd-script 之外在包了一层，新增了一些可视化的功能和一些其他的脚本，让 sd-script 更加易用，它调用 sd 中的脚本来实现训练，但是封装了一些注释和整理，此外还支持的 tensorboard 可视化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sd-script 本身包含了训练 lora、dreambooth、text-embedding、UNet、Text Encoder、图像生成、模型转换等多种功能。lora-script 还是主要专注于 LoRA 训练&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看 repo 也能知道 lora-script 中包含了 sd-script，所以我们部署的时候只需&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;git &lt;span class=&quot;hljs-built_in&quot;&gt;clone&lt;/span&gt; --recurse-submodules https://github.com/Akegarasu/lora-scripts&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即可将需要的库安装下来，然后安装环境和相关以来只需要执行 &lt;code&gt;.&#92;install.ps1&lt;/code&gt; 即可（该脚本有 cn 版本，但是可能会出现问题），其会安装 sd-scripts 和 lora-scripts 需要的库。具体的可以参考相关 repo（sd-script 详细说明，lora-script 有简化版说明）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;安装的时候可能会出现虚拟环境未激活的问题，我们可以提前在改目录执行一次 python -m venv venv 一次即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Finish.&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="AIGC" scheme="http://aikenh.cn/categories/Machine-Learning/AIGC/"/>
    
    
    <category term="AI" scheme="http://aikenh.cn/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Docker-App 1 Backup Photos by Immich</title>
    <link href="http://aikenh.cn/cn/Immich_backup/"/>
    <id>http://aikenh.cn/cn/Immich_backup/</id>
    <published>2023-05-01T01:12:04.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;手机到电脑端的图像备份和预览往往是一个大问题，特别是当多个手机要备份的时候，说难不难，但说简单也确实有很多麻烦的地方，因此我推荐 Immich 的解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Immich 是一个基于个人开发者开发的开源 Github 项目，&lt;a href=&quot;https://github.com/immich-app/immich&quot;&gt;immich-app/immich&lt;/a&gt;，该解决方案有以下的一些优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移动端支持：移动端实现便于手机的随时和自动同步；&lt;/li&gt;
&lt;li&gt;多用户支持：多用户的权限管理、分割、以及用户间的相册共享；&lt;/li&gt;
&lt;li&gt;Live 格式支持：支持各种原生格式存储，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Self-hosted photo and video backup solution directly from your mobile phone. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此我本人推荐按照以下的方式来使用：针对家庭等环境，多用户部署在 NAS 或者某台 PC 上，可以长期或者定期的启动备份服务，然后就可以将手机中的照片空间释放掉。由此可以实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过共享文件夹共建家庭相册；&lt;/li&gt;
&lt;li&gt;权限分割个人相册；&lt;/li&gt;
&lt;li&gt;定期/自动备份手机中的照片，并清理对应的存储空间；&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Docker" scheme="http://aikenh.cn/categories/Docker/"/>
    
    <category term="Containers" scheme="http://aikenh.cn/categories/Docker/Containers/"/>
    
    
    <category term="Docker" scheme="http://aikenh.cn/tags/Docker/"/>
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Windows App01 Potplayer &amp; Alist</title>
    <link href="http://aikenh.cn/cn/alist_potplayer/"/>
    <id>http://aikenh.cn/cn/alist_potplayer/</id>
    <published>2023-04-30T14:42:58.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本篇主要介绍一下播放器 PotPlayer 的设置以及结合 Alist&amp;amp;小雅 alist 的使用，这样就可以直接在播放器访问本地网盘上的内容，便于使用和观看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Alist-Deploy&quot;&gt;&lt;a href=&quot;#Alist-Deploy&quot; class=&quot;headerlink&quot; title=&quot;Alist Deploy&quot;&gt;&lt;/a&gt;Alist Deploy&lt;/h2&gt;&lt;p&gt;Alist 作为一个网盘管理中心，可以将各大网盘中的资源进行统一管理，同时支持视频的 webdav 播放，这里推荐的安装方式是使用 Docker-Compose 进行安装，根据自己的情况来选择对应的挂载和安装目录。&lt;/p&gt;
&lt;p&gt;由于官方的文档已经事无巨细，这里就不在赘述如何安装和配置 alist 的各个网盘挂载，详情参见：&lt;a href=&quot;https://alist.nn.ci/&quot;&gt;Home | AList Docs (nn.ci)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装完并&lt;strong&gt;启动 Alist 服务&lt;/strong&gt;即可，记住自己的&lt;strong&gt;端口&lt;/strong&gt;和设置的&lt;strong&gt;账号密码&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Aria2离线下载支持&quot;&gt;&lt;a href=&quot;#Aria2离线下载支持&quot; class=&quot;headerlink&quot; title=&quot;Aria2离线下载支持&quot;&gt;&lt;/a&gt;Aria2离线下载支持&lt;/h3&gt;&lt;p&gt;该部分介绍如何通过 docker 为 Alist 添加 Aria2 作为离线下载服务，以及一些常见的问题解决方法。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://p3terx.com/archives/docker-aria2-pro.html&quot;&gt;aria2-pro&lt;/a&gt; |  &lt;a href=&quot;https://github.com/P3TERX/Aria2-Pro-Docker/blob/master/docker-compose.yml&quot;&gt;aira2-pro-github&lt;/a&gt; |  &lt;a href=&quot;https://yiwangmeng.com/aria2-status-page-to-prompt-the-solution-of&quot;&gt;aria2认证失败&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;这里介绍使用 docker-compose 安装 aria2的方法，并将 docker 版本的 aria2和 alist 结合起来使用，在基于 docker 安装之前，我们先准备几个文件夹：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;your-path-2-aria2&amp;gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;mkdir&lt;/span&gt; aria2-config &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;chmod&lt;/span&gt; 777 aria2-config&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;mkdir&lt;/span&gt; aria2-downloads &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;chmod&lt;/span&gt; 777 aria2-downloads&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 downloads 目录是我们用来下载文件的目录，我们也可以使用挂载的目录或者共享的目录来存储下载的文件；然后我们准备一下 alist 中用于离线下载的目录，&lt;strong&gt;该目录需要在 alist 的 docker 和 aria2的 docker 中都将该 volume 挂载到同一个地方&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本文将 aria2的队名目录挂载到 alist 的对应目录中，对应的 alist 的 compose 文件有&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230709161919.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;而 aria2的 compose 文件则有：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230709161956.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;再将该目录的权限改成777，&lt;code&gt;chmod 777 &amp;lt;this-dir&amp;gt;&lt;/code&gt; 之后即可再 alist 中离线下载成功，而且该下载文件会在指定的网盘中上传，当上传完成时会删除临时文件，不占用本地磁盘空间。&lt;/p&gt;
&lt;p&gt;完整的 Compose 文件可以参考 &lt;a href=&quot;https://github.com/P3TERX/Aria2-Pro-Docker/blob/master/docker-compose.yml&quot;&gt;Aria2-Pro-Docker/docker-compose.yml at master · P3TERX/Aria2-Pro-Docker · GitHub&lt;/a&gt; 官方的配置进行安装，我个人的 compose 文件则会上传到&lt;a href=&quot;https://github.com/AikenH/aikenh-DockerComposeYML&quot;&gt;AikenH/aikenh-DockerComposeYML (github.com)&lt;/a&gt;中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aria2Ng 界面认证失败&lt;/strong&gt;的问题，是因为我们再 compose 中设置了密码之后，要在该界面的设置中设置密码后才能正常认证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230709162444.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;密码需要到如下地方设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230709162537.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;设置完成后应该就不会有认证失败的提示了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;alist 设置 Aria2失败&lt;/strong&gt;，由于使用的 docker 部署的 aria2，这里不能使用 localhost，要使用对应的 ip 来设置该服务，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230709162724.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;完成这些设置后应该就可以正常使用了，但是由于现在都是网盘场景更多，所以离线下载的可能使用场景也有限，而且通过测试发现，如果完全装在树莓派上的话，可能会对系统的性能造成一定的负担。&lt;/p&gt;
&lt;h2 id=&quot;Xiaoya-Deploy&quot;&gt;&lt;a href=&quot;#Xiaoya-Deploy&quot; class=&quot;headerlink&quot; title=&quot;Xiaoya Deploy&quot;&gt;&lt;/a&gt;Xiaoya Deploy&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Xiaoya 是基于 Alist 做改版的个人资源站，里面涵盖了大量的影视资源，并在不断的更新，通过在本地挂载 xiaoya 我们也可以用来通过 webdav 在播放器中直接选择视频进行播放，大多数情况下都免去了找资源的痛苦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;官方网站：&lt;a href=&quot;http://alist.xiaoya.pro/&quot;&gt;主页 | 小雅的分类 Alist (xiaoya.pro)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拥有了 Docker 环境后，就可以基于 xiaoya 提供的脚本实现一键拉取镜像和启动 Docker，默认的端口是 5678，安装指令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sudo bash -c &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;&lt;span class=&quot;hljs-subst&quot;&gt;$(curl -s http://docker.xiaoya.pro/update_new.sh)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装过程中会需要填入如下内容：token、open_token、转存目录的 folder id，具体和后续更新参考&lt;a href=&quot;https://xiaoyaliu.notion.site/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f&quot;&gt;配置页&lt;/a&gt;，（跟随安装引导界面进行安装即可。）&lt;br&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    <category term="APPs" scheme="http://aikenh.cn/categories/Windows/APPs/"/>
    
    
    <category term="Docker" scheme="http://aikenh.cn/tags/Docker/"/>
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
    <category term="Iptv" scheme="http://aikenh.cn/tags/Iptv/"/>
    
  </entry>
  
  <entry>
    <title>AIGC04 Stable Diffusion Write Prompt Better</title>
    <link href="http://aikenh.cn/cn/StableDiffusionPrompt/"/>
    <id>http://aikenh.cn/cn/StableDiffusionPrompt/</id>
    <published>2023-04-26T13:22:38.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;该章节主要包括 Promot 生成和部分工作流的分析，旨在了解如何写出更好的关键词，如何生成更好的图片，当我们不知道怎么描述的时候也可以将该工作交给 ChatGPT，让其为我们攥写一般基础的提示词&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Prompt-编写范式&quot;&gt;&lt;a href=&quot;#Prompt-编写范式&quot; class=&quot;headerlink&quot; title=&quot;Prompt 编写范式&quot;&gt;&lt;/a&gt;Prompt 编写范式&lt;/h2&gt;&lt;p&gt;参考资料：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/619247417?utm_id=0&quot;&gt;【Stable Diffusion】Prompt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通常编写可以遵照以下的类别进行组织，主要有 &lt;code&gt;&amp;lt;质量控制&amp;gt; + &amp;lt;前置&amp;gt; + &amp;lt;主体&amp;gt; + &amp;lt;场景词&amp;gt;&lt;/code&gt; 几类，其中分别包括以下的几类词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;质量控制&lt;/strong&gt;：画质、镜头效果、光照效果&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前置词&lt;/strong&gt;：画风、艺术家、风格&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主体&lt;/strong&gt;：人物&amp;amp;对象、姿势、服装、道具&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;场景&lt;/strong&gt;：环境、背景、细节&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Additional Network&lt;/strong&gt;：载入额外模型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;分割符号：&lt;/strong&gt; 各个关键词之间用 &lt;code&gt;,&lt;/code&gt; 分割，且对应的权重从前到后依次递减，因此在编写关键词的时候也要注意先后顺序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;权重加权符号&lt;/strong&gt;：各种括号代表各种不同的加权系数，这里建议用 &lt;code&gt;(prompt: weight)&lt;/code&gt; 统一来编写提示词的权重规则，整体可读性会更好。&lt;/p&gt;
&lt;p&gt;这里的 weight 指的是权重变成原本的 weight 倍，就可以调整加强或减弱。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;各个括号的默认系数如下: () -&amp;gt; 1.1 ; {} -&amp;gt; 1.05 ; &lt;code&gt;[]&lt;/code&gt; -&amp;gt; 0.952&lt;br&gt;可以通过(())进行叠加即 1.1*1.1&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="AIGC" scheme="http://aikenh.cn/categories/Machine-Learning/AIGC/"/>
    
    
    <category term="AI" scheme="http://aikenh.cn/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>AIGC03 Stable Diffusion Control Net</title>
    <link href="http://aikenh.cn/cn/StableDiffusionControlNet/"/>
    <id>http://aikenh.cn/cn/StableDiffusionControlNet/</id>
    <published>2023-04-26T13:19:41.000Z</published>
    <updated>2023-10-31T00:27:54.293Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;ControlNet 是 Stable Diffusion 最强力的插件之一，它能够控制 SD 的整个扩散过程，包括让 AI 参考动作/骨架/线条/景深，从而更精准的生成图片。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ivonblog.com/posts/stable-diffusion-webui-manuals/extensions/controlnet/&quot;&gt;ControlNet 按照骨架動作繪圖 | Stable Diffusion WebUI使用手冊&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ivonblog.com/posts/stable-diffusion-webui-manuals/extensions/posex/&quot;&gt;骨架人偶 PoseX | Stable Diffusion WebUI 使用手冊&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ivonblog.com/posts/stable-diffusion-webui-manuals/extensions/latent-couple/&quot;&gt;生成多個人物 Latent Couple | Stable Diffusion WebUI使用手冊&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;拓展地址：&lt;a href=&quot;https://github.com/Mikubill/sd-webui-controlnet&quot;&gt;Mikubill/sd-webui-controlnet: WebUI extension for ControlNet (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ControlNet 地址：&lt;a href=&quot;https://github.com/lllyasviel/ControlNet&quot;&gt;lllyasviel/ControlNet: Let us control diffusion models! (github.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;模型地址：&lt;a href=&quot;https://huggingface.co/lllyasviel/ControlNet-v1-1/tree/main&quot;&gt;lllyasviel/ControlNet-v1-1 at main (huggingface.co)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="AIGC" scheme="http://aikenh.cn/categories/Machine-Learning/AIGC/"/>
    
    
    <category term="AI" scheme="http://aikenh.cn/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>AIGC02 Stable Diffusion 基础功能介绍</title>
    <link href="http://aikenh.cn/cn/Stable%20Diffusion%20%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <id>http://aikenh.cn/cn/Stable%20Diffusion%20%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</id>
    <published>2023-04-26T03:03:56.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本篇章介绍关于 Stable DIffusion 的一些基础概念和 WebUI 的基本功能元素，同时介绍一些启动项和模型加载的东西。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;启动项设置（局域网）&quot;&gt;&lt;a href=&quot;#启动项设置（局域网）&quot; class=&quot;headerlink&quot; title=&quot;启动项设置（局域网）&quot;&gt;&lt;/a&gt;启动项设置（局域网）&lt;/h2&gt;&lt;p&gt;最常用的启动项是 &lt;code&gt;--listen&lt;/code&gt;，通过该启动项允许局域网内的其他设备通过 ip 和端口访问部署好的 Stable Diffusion 服务。而设置启动项的方式有以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命令行执行启动脚本的时候携带&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs powershell&quot;&gt;./webui.bat &lt;span class=&quot;hljs-literal&quot;&gt;--listen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# ./webui.sh --listen&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;修改主入口脚本中的启动选项 &lt;code&gt;vim launch.py&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 修改下面这一行的参数, 将&amp;quot; &amp;quot;中填入需要的参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# commandline_args = os.environ.get(&amp;#x27;COMMANDLINE_ARGS&amp;#x27;, &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;commandline_args = os.environ.get(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;COMMANDLINE_ARGS&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;--listen&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;其他的启动项介绍可以参考：&lt;a href=&quot;https://ivonblog.com/posts/stable-diffusion-webui-manuals/installation/command-line-arguments-and-settings/&quot;&gt;2.3. 命令列引數 | Stable Diffusion WebUI使用手冊(正體中文)｜Ivon的部落格 (ivonblog.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="AIGC" scheme="http://aikenh.cn/categories/Machine-Learning/AIGC/"/>
    
    
    <category term="AI" scheme="http://aikenh.cn/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Windows Configuration05 CUDA &amp; Cudnn</title>
    <link href="http://aikenh.cn/cn/WindowsCudaCudnn/"/>
    <id>http://aikenh.cn/cn/WindowsCudaCudnn/</id>
    <published>2023-04-24T01:50:01.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在 Windows 和 WSL2 中安装 Cuda 和 Cudnn ，是配置 GPU 开发环境中重要的一步，其支撑了 AI 模型进行 Training 和 Interface 。本篇介绍安装 CUDA 和 Cudnn 的步骤和一些踩过的坑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考资料如下：&lt;a href=&quot;https://blog.csdn.net/halou10200912/article/details/106048719&quot;&gt;版本查看&lt;/a&gt; | &lt;a href=&quot;https://zhuanlan.zhihu.com/p/99880204&quot;&gt;Win 安装 Cuda 和cuDNN&lt;/a&gt; | &lt;a href=&quot;https://blog.csdn.net/Apple_Coco/article/details/129293019&quot;&gt;WSL 2 安装 CUDA 和cuDNN&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Win-11-安装-CUDA-和-cuDNN&quot;&gt;&lt;a href=&quot;#Win-11-安装-CUDA-和-cuDNN&quot; class=&quot;headerlink&quot; title=&quot;Win 11 安装 CUDA 和 cuDNN&quot;&gt;&lt;/a&gt;Win 11 安装 CUDA 和 cuDNN&lt;/h2&gt;&lt;h3 id=&quot;CUDA&quot;&gt;&lt;a href=&quot;#CUDA&quot; class=&quot;headerlink&quot; title=&quot;CUDA&quot;&gt;&lt;/a&gt;CUDA&lt;/h3&gt;&lt;p&gt;首先在 Nvidia 的控制面板：&lt;strong&gt;帮助-系统信息&lt;/strong&gt;的如下位置，查看 GPU 最大支持的 CUDA 版本：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230424130608.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;也可以使用 Nvidia-smi 命令在 Powershell 或者 CMD 中查看:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230424130700.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;确定了版本之后到 &lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;Nvidia CUDA下载页面&lt;/a&gt; 下载指定版本的 CUDA 进行安装（根据安装指引进行）即可，安装位置等默认即可，其中有一些安装选项即是 Nvidia GeForce Experience 安装的内容。&lt;/p&gt;
&lt;p&gt;安装完成后在 CMD 或者 PowerShell 确认是否安装完成（需要重启终端）：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs powershell&quot;&gt;nvcc &lt;span class=&quot;hljs-literal&quot;&gt;-V&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230424131341.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
    <category term="WSL2" scheme="http://aikenh.cn/tags/WSL2/"/>
    
  </entry>
  
  <entry>
    <title>AIGC01 Stable Diffusion and midjourney Setup</title>
    <link href="http://aikenh.cn/cn/Stable%20Diffusion/"/>
    <id>http://aikenh.cn/cn/Stable%20Diffusion/</id>
    <published>2023-04-19T08:00:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This Chapter introduce how to set up stable diffusion and mid-journey, and record some problem I meet when I deploy it. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Deprecated-midjourney&quot;&gt;&lt;a href=&quot;#Deprecated-midjourney&quot; class=&quot;headerlink&quot; title=&quot;(Deprecated) midjourney&quot;&gt;&lt;/a&gt;(Deprecated) midjourney&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;由于 midjourney 现需要付费使用，同时没有开源，因此我们讲一笔带过该部分内容，该部分内容大多转载于  &lt;a href=&quot;https://www.uisdc.com/midjourney&quot;&gt;超详细！AI 绘画神器 Midjourney 基础使用手册&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://midjourney.com/home/?callbackUrl=%2Fapp%2F&quot;&gt;midjourney&lt;/a&gt; 的安装步骤主要分成以下的几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击 Join the Beta 注册账号，注册完会跳转到；&lt;/li&gt;
&lt;li&gt;Discord 首页，亲自创建自己的服务器，仅供我和我的朋友使用；&lt;/li&gt;
&lt;li&gt;下载客户端，在默认对话界面讯在或开始新的对话，输入 Midjourney Bot，添加到服务器&lt;/li&gt;
&lt;li&gt;付费开启体验。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Deprecated-DreamStudio&quot;&gt;&lt;a href=&quot;#Deprecated-DreamStudio&quot; class=&quot;headerlink&quot; title=&quot;(Deprecated) DreamStudio&quot;&gt;&lt;/a&gt;(Deprecated) DreamStudio&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;说是可以本地部署，但是实际体验非常不好，应该只是部署了 Webui，然后调用官方提供的免费 API；所以有时候生成不出来，但是又不报错，不知道是不是使用姿势有问题，反正很屎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Stability-AI/StableStudio&quot;&gt;https://github.com/Stability-AI/StableStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;装好 npm 和 yarn&lt;/li&gt;
&lt;li&gt;参考 quick start，git clone -&amp;gt; (cd) yarn 安装 -&amp;gt; yarn dev 部署在本地端口上。&lt;/li&gt;
&lt;li&gt;官网注册账号-&amp;gt; 获取 API -&amp;gt; 填入并在最上方转到 Generate 页面即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Stable-Diffusion-部署专题&quot;&gt;&lt;a href=&quot;#Stable-Diffusion-部署专题&quot; class=&quot;headerlink&quot; title=&quot;Stable Diffusion 部署专题&quot;&gt;&lt;/a&gt;Stable Diffusion 部署专题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;该部分作为 Intro，仅介绍 Stable Diffusion 的安装和部署，以及一些启用参数等，具体的使用在后面的文章进行进一步的讲解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;基于官方 REPO&lt;/strong&gt;： &lt;a href=&quot;https://github.com/AUTOMATIC1111/stable-diffusion-webui&quot;&gt;AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI (github.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里介绍基于 windows 的安装和 WSL2 的安装部署过程。整体的安装可能会分成以下的几个步骤进行：（推荐在安装和部署之前，参考 [[WindowsCudaCudnn]] 一文，首先配置 CUDA，也可以遇到问题再部署）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基础依赖和环境安装（python、CUDA）&lt;/li&gt;
&lt;li&gt;Stable DIffusion 的 UI 界面和部分插件安装&lt;/li&gt;
&lt;li&gt;模型下载和加载&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="AIGC" scheme="http://aikenh.cn/categories/Machine-Learning/AIGC/"/>
    
    
    <category term="AI" scheme="http://aikenh.cn/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Grep、Sed、Awk 03 Awk</title>
    <link href="http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8BAwk/"/>
    <id>http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8BAwk/</id>
    <published>2023-04-18T08:00:07.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Linux 三剑客之 Awk (由三个创始人的姓氏首字母组成)，相比于 Grep 和 Sed 而言更为特殊一些，它是一种模式匹配的编程语言，其主要的作用匹配文本进行处理，其擅长实现对文本的格式化输出，而作为一门编程语言：支持函数，变量，循环，运算，但相对简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AWK 的执行逻辑是：搜索文件的每一行，如果&lt;strong&gt;发现匹配内容，就执行下一个编程步骤，如果没发现，就继续处理下一行&lt;/strong&gt;的内容。&lt;/p&gt;
&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt; 由于 AWK 实际上是一个编程语言，本篇主要只介绍其命令行用法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先介绍 AWK 命令，其主要用于匹配文本并格式化输出，适用于对&lt;strong&gt;表格&lt;/strong&gt;化的数据机型处理。其使用模板大致如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;awk [options] &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;program&amp;#x27;&lt;/span&gt; var=value file...&lt;br&gt;awk [options] &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;pattern &amp;#123;action1; action2; ...&amp;#125;&amp;#x27;&lt;/span&gt; file ...&lt;br&gt;awk [options] -f programfile var=value file...&lt;br&gt;awk [options] &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;BEGIN&amp;#123; action;... &amp;#125; pattern&amp;#123; action;... &amp;#125; END &amp;#123; action;... &amp;#125;&amp;#x27;&lt;/span&gt; file ...&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-f&lt;/strong&gt; scriptfile: 从脚本文件中读取 awk 命令&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-v&lt;/strong&gt; var=value: 赋值一个用户定义变量，也可用这种方式修改内置变量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-F&lt;/strong&gt; fs: fs 可为任意字符串或者正则表达式，用于指定分隔符（也可以通过-v 的方式修改内置的分隔符变量来实现）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每个 action 或者说 statement 之间用 &lt;code&gt;；&lt;/code&gt; 分割&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://zh.wikipedia.org/wiki/AWK&quot;&gt;AWK wikipedia&lt;/a&gt; | &lt;a href=&quot;https://github.com/EZLippi/practical-programming-books/blob/master/src/awk.md&quot;&gt;practical-programming-books/awk.md &lt;/a&gt; | &lt;a href=&quot;https://awk.readthedocs.io/en/latest/chapter-one.html&quot;&gt;一. AWK入门指南 — AWK程序设计语言&lt;/a&gt; | &lt;a href=&quot;https://www.cnblogs.com/along21/p/10366886.html&quot;&gt;Linux文本三剑客超详细教程—-grep、sed、awk - alonghub&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="Bash" scheme="http://aikenh.cn/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>Grep、Sed、Awk 02 Sed</title>
    <link href="http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8BSed/"/>
    <id>http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8BSed/</id>
    <published>2023-04-15T15:22:56.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Linux 三剑客之 Sed，相比于擅长数据查找定位的 Grep，Sed（Stream Editor）擅长做的是数据修改，做的主要是做一些增删改的功能。&lt;a href=&quot;https://www.zhihu.com/question/297858714&quot;&gt; sed 和 awk 的区别是什么？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;首先介绍 Sed 命令，Stream Editor 流编辑器，针对字符流来进行文件编辑，同样，其核心也在于正则匹配式，其用法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sed [option] &amp;#123;script&amp;#125; [input-file]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中{script}可以理解为三者的组合：&lt;strong&gt;sed 动作指令+Reg 用正则&amp;amp;行号确定修改位置+修改的内容&lt;/strong&gt;：Script 是 Sed 的核心，分别对应着：操作的行为，操作的位置和操作的内容。&lt;/p&gt;
&lt;p&gt;Sed 的用法也可以按照这个来记：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sed [-hnV] [-e &amp;lt;script&amp;gt;] [-f &amp;lt;script文件&amp;gt;] [文本文件]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt; h 显示 helo ；-n 表示静默输出，-V 显示版本；参考第一种用法，-e 可以指定多个 script 对输入的文件进行处理，-f 则可以将多个 script 写在文件中，通过读取文件中的 scripts 来对文本文件进行处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为文本&lt;strong&gt;流&lt;/strong&gt;编辑器，Sed 是一行一行的处理文件内容，将正在处理的每一行内容放在缓冲区中按照约定进行修改，处理后按照约定修改文件或输出，接着在处理下一行，直到整个文件处理内容。&lt;/p&gt;
&lt;p&gt;其主要用来编辑和处理一个或者多个文件，简化对于文件的重复操作。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.zhihu.com/question/297858714&quot;&gt;sed 和 awk 的区别-知乎&lt;/a&gt; | Man | &lt;a href=&quot;https://coolshell.cn/articles/9104.html&quot;&gt;sed 简明教程 | CoolShell&lt;/a&gt; | &lt;a href=&quot;https://www.runoob.com/linux/linux-comm-sed.html&quot;&gt;Linux sed 命令 | 菜鸟教程 &lt;/a&gt; |  &lt;a href=&quot;https://www.cnblogs.com/along21/p/10366886.html&quot;&gt;Linux文本三剑客超详细教程—-grep、sed、awk &lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="Bash" scheme="http://aikenh.cn/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>Grep、Sed、Awk 01-Grep</title>
    <link href="http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8BGrep/"/>
    <id>http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8BGrep/</id>
    <published>2023-04-12T05:22:58.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Linux 三剑客之 Grep。Grep 估计会是大部分 Linux 用户最常用的文本搜索命令了，在三剑客中的使用场景也是最广泛的。在对正则有了基本了解之后，就可以更好的使用 Grep，同时也可以通过 Grep 的使用来更好的掌握常用的正则表达式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;首先介绍 Grep 命令，&lt;strong&gt;Global Regular Expression Print&lt;/strong&gt; 全局正则表达式输出，使用正则表达式搜索文本内容输出。其使用模板如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;grep [option] pattern file&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;option 指定 grep 的搜索模式&lt;/li&gt;
&lt;li&gt;pattern 需要搜索的内容，可以用&lt;strong&gt;正则表达式&lt;/strong&gt;指定一个模式来做匹配&lt;/li&gt;
&lt;li&gt;file 可以是文件夹等路径，用来确定搜索的范围（仅支持&lt;strong&gt;通配符&lt;/strong&gt;）[[Linux三剑客之正则]]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来分别对两个部分进行简单的说明，file 的范围指定参考正则文章中对通配符的介绍即可。&lt;br&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="Bash" scheme="http://aikenh.cn/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>Grep、Sed、Awk 00 RegExp</title>
    <link href="http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8B%E6%AD%A3%E5%88%99/"/>
    <id>http://aikenh.cn/cn/Linux%E4%B8%89%E5%89%91%E5%AE%A2%E4%B9%8B%E6%AD%A3%E5%88%99/</id>
    <published>2023-04-11T14:57:40.000Z</published>
    <updated>2023-10-31T00:11:27.327Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;“awk、grep、sed 是 linux 操作文本的三大利器，合称文本三剑客，也是必须掌握的 linux 命令之一。三者的功能都是处理文本，但侧重点各不相同，其中属 awk 功能最强大，但也最复杂。grep 更适合单纯的查找或匹配文本，sed 更适合编辑匹配到的文本，awk 更适合格式化文本，对文本进行较复杂格式处理。“&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/along21/p/10366886.html&quot;&gt;Linux文本三剑客超详细教程—-grep、sed、awk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在介绍这三个命令之前，需要对正则表达式有所了解，结合正则表达式来使用，才能发挥这 linux 三剑客的的全部能力。&lt;/p&gt;
&lt;h2 id=&quot;正则表达式-RegExp&quot;&gt;&lt;a href=&quot;#正则表达式-RegExp&quot; class=&quot;headerlink&quot; title=&quot;正则表达式 RegExp&quot;&gt;&lt;/a&gt;正则表达式 RegExp&lt;/h2&gt;&lt;p&gt;正则表达式： Regual Expression 为一类特殊字符和文本符号共通约定的一种 pattern，其中的一些字符并不表示其本身的含义，而是用来做通配符号。&lt;/p&gt;
&lt;p&gt;其中基本正则表达式 BRE 是普遍支持的，而拓展正则表达式 ERE 通常则是需要特殊的参数来启用的。通过正则表达式中特殊符号的辅助，能够更快的过滤，查找，替换，处理字符流等。&lt;/p&gt;
&lt;p&gt;除了在 grep、sed、awk 的 linux 三剑客中，在各个语言和各种搜索函数的地方，正则表达式都被普遍支持，应用相当广泛。&lt;/p&gt;
&lt;p&gt;基础正则表达式对应的元字符主要有以下几个：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;^ $ . [ ] *&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而拓展正则表达式在上述元字符的基础上增加了：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;( ) &amp;#123; &amp;#125; ? + | &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;等字符，接下来我们将逐一展开各个元字符的作用。&lt;br&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="Bash" scheme="http://aikenh.cn/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透（NAT穿透）</title>
    <link href="http://aikenh.cn/cn/NAT%E7%A9%BF%E9%80%8F/"/>
    <id>http://aikenh.cn/cn/NAT%E7%A9%BF%E9%80%8F/</id>
    <published>2023-04-04T06:40:12.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文简要介绍对内网穿透技术、对内网穿透技术的需求以及介绍一些用于”个人”进行内网穿透的工具和使用。&lt;/p&gt;
&lt;h2 id=&quot;1-什么是内网穿透-NAT-traversal）&quot;&gt;&lt;a href=&quot;#1-什么是内网穿透-NAT-traversal）&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是内网穿透(NAT traversal）&quot;&gt;&lt;/a&gt;1. 什么是内网穿透(NAT traversal）&lt;/h2&gt;&lt;p&gt;在计算机科学中，&lt;strong&gt;NAT穿越&lt;/strong&gt;（NAT traversal）涉及TCP/IP中的一个常见问题，即在处于使用了NAT设备的私有TCP/IP网络中的主机之间创建连接的问题。&lt;/p&gt;
&lt;p&gt;其中 NAT 即&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2&quot;&gt;网络地址转换&lt;/a&gt;（Network Address Translation）在计算机网络中是一种在 IP 数据包通过路由器或防火墙时重写来源 IP 地址或目的 IP 地址的技术。&lt;strong&gt;这种技术被普遍使用在有多台主机但只通过一个公有 IP 地址访问互联网的私有网络中&lt;/strong&gt;。它是一个方便且得到了广泛应用的技术。当然，NAT 也让主机之间的通信变得复杂，导致了通信效率的降低。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NAT 是作为一种解决&lt;a href=&quot;https://zh.wikipedia.org/wiki/IPv4%E4%BD%8D%E5%9D%80%E6%9E%AF%E7%AB%AD&quot; title=&quot;IPv4位址枯竭&quot;&gt;IPv4地址短缺&lt;/a&gt;以避免保留 IP 地址困难的方案而流行起来的。NAT 成了家庭和小型办公室网络连接上的路由器的一个标准特征。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中最为常见的 NAT 设备就是家家户户都有的路由器，将所有的设备在&lt;strong&gt;局域网&lt;/strong&gt;中统一管理，并基于唯一的公网 ip 对互联网（私有网络）进行访问。&lt;/p&gt;
&lt;p&gt;而 NAT 会带来以下的问题，因此会需要内网穿透的技术：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外网主动发起的服务无法准确的定位到内网的指定机器，会被 NAT 设备丢弃，因此链接会变成单项的，无法双向交互。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此无法在外网访问内网机器提供给局域网的服务，因此我们的机器，我们部署于 NAS、docker 的服务就只能在局域网中访问，在一定程度上就造成不便。&lt;/p&gt;</summary>
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    <category term="NAT" scheme="http://aikenh.cn/categories/NAS/NAT/"/>
    
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
    <category term="NAT" scheme="http://aikenh.cn/tags/NAT/"/>
    
  </entry>
  
  <entry>
    <title>Macos Configuration01 MacOS terminal 设置</title>
    <link href="http://aikenh.cn/cn/macos_bash_config/"/>
    <id>http://aikenh.cn/cn/macos_bash_config/</id>
    <published>2023-04-02T11:28:48.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Mac 的 Terminal 和 Ubuntu 的操作上较为相似，都是 Unix 的吧，但是要注意一下安全和软件管理库。&lt;/p&gt;
&lt;p&gt;其他的参考资料： &lt;a href=&quot;https://www.youtube.com/watch?v=RNqDkF17ogY&amp;amp;t=787s&quot;&gt;https://www.youtube.com/watch?v=RNqDkF17ogY&amp;amp;t=787s&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Temrinal-终端&quot;&gt;&lt;a href=&quot;#Temrinal-终端&quot; class=&quot;headerlink&quot; title=&quot;Temrinal 终端&quot;&gt;&lt;/a&gt;Temrinal 终端&lt;/h2&gt;&lt;p&gt;The default terminal is zsh, so we do not need to install zsh from scratch.&lt;/p&gt;
&lt;h3 id=&quot;Brew&quot;&gt;&lt;a href=&quot;#Brew&quot; class=&quot;headerlink&quot; title=&quot;Brew&quot;&gt;&lt;/a&gt;Brew&lt;/h3&gt;&lt;p&gt;we install brew follow the &lt;a href=&quot;https://brew.sh&quot;&gt;official website&lt;/a&gt; settings :&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;/bin/bash -c &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;&lt;span class=&quot;hljs-subst&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Iterm-2&quot;&gt;&lt;a href=&quot;#Iterm-2&quot; class=&quot;headerlink&quot; title=&quot;Iterm 2&quot;&gt;&lt;/a&gt;Iterm 2&lt;/h3&gt;&lt;p&gt;After install brew we can install iterm 2 like this :&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;brew install iterm2 --cask&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Then we download and config its’ setting in the preference menu. Or export the profile.&lt;/p&gt;
&lt;p&gt;Those following settings are what i’m most concerned about, and because of the simple UI, we will not introduce too much.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transparent&lt;/li&gt;
&lt;li&gt;Snippets&lt;/li&gt;
&lt;li&gt;Status line&lt;/li&gt;
&lt;li&gt;Split windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这将会是我们的主终端应用，后续会结合 fig 一起使用，这给我们提供了媲美，甚至超越 windows terminal 的使用体验。&lt;/p&gt;
&lt;p&gt;Seems like 可以取代 tmux 来进行分屏&lt;/p&gt;</summary>
    
    
    
    <category term="MacOS" scheme="http://aikenh.cn/categories/MacOS/"/>
    
    
    <category term="MacOS" scheme="http://aikenh.cn/tags/MacOS/"/>
    
    <category term="Configuration" scheme="http://aikenh.cn/tags/Configuration/"/>
    
  </entry>
  
  <entry>
    <title>Whats DevOps?</title>
    <link href="http://aikenh.cn/cn/devops/"/>
    <id>http://aikenh.cn/cn/devops/</id>
    <published>2023-03-25T01:55:32.000Z</published>
    <updated>2023-10-31T00:05:06.430Z</updated>
    
    
    <summary type="html">&lt;p&gt;在一个庞大的组织架构中，CI/CD 和 Devops 的概念是避不开的，了解它的工作原理和概念能帮助我们更好的与他人进行协作。&lt;/p&gt;
&lt;h2 id=&quot;CI-CD-介绍&quot;&gt;&lt;a href=&quot;#CI-CD-介绍&quot; class=&quot;headerlink&quot; title=&quot;CI/CD 介绍&quot;&gt;&lt;/a&gt;CI/CD 介绍&lt;/h2&gt;&lt;div style=&quot;text-align:center&quot;&gt;
    &lt;img src= https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20230403173436.png title=&quot;devops&quot;&gt;
&lt;/div&gt;

&lt;p&gt;这是一个用来描绘 CI/CD 的示意图，其描绘了 CI/CD 的工作流和各自的一些职责，接下来本文分别对两者进行介绍。&lt;/p&gt;
&lt;h3 id=&quot;CI-Continuous-integration-持续集成&quot;&gt;&lt;a href=&quot;#CI-Continuous-integration-持续集成&quot; class=&quot;headerlink&quot; title=&quot;CI (Continuous integration) 持续集成&quot;&gt;&lt;/a&gt;CI (Continuous integration) 持续集成&lt;/h3&gt;&lt;p&gt;持续集成是面向开发者（Developer）的环节。从上述的图也可以看出，整体的流程如下：&lt;/p&gt;
&lt;p&gt;Developer 基于给出的需求进行&lt;strong&gt;编码（code）&lt;/strong&gt;，完成 Feature 或者 Bug 修复后，&lt;strong&gt;提交（Commit）代码&lt;/strong&gt;，然后平台会对这些需要（Merge Request）代码进行&lt;strong&gt;编译（Build）&lt;/strong&gt;，编译通过后，执行自动化的&lt;strong&gt;持续测试（Continuous Test）&lt;/strong&gt;，待测试通过后才会正式合并入主干。&lt;/p&gt;
&lt;p&gt;也就是说，CI 工具在检测到代码变更后，自动对其执行编译和单元测试，验证其代码的正确性和可用性，以及是否适合与源代码进行集成，然后进行自动集成。&lt;/p&gt;
&lt;p&gt;该流程有以下的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能够避免不同开发环境带来的不一致问题&lt;/li&gt;
&lt;li&gt;减少手动操作&lt;/li&gt;
&lt;li&gt;清晰的版本管理和控制&lt;/li&gt;
&lt;li&gt;降低人为操作的风险&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="Devops" scheme="http://aikenh.cn/categories/Dev/Devops/"/>
    
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Icarus 配置</title>
    <link href="http://aikenh.cn/cn/Custom_Icarus/"/>
    <id>http://aikenh.cn/cn/Custom_Icarus/</id>
    <published>2023-03-11T15:46:37.000Z</published>
    <updated>2023-10-31T00:04:15.107Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文的博客页面基于 &lt;a href=&quot;[Hexo](https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt;)+&lt;a href=&quot;https://ppoffice.github.io/&quot;&gt;Icarus&lt;/a&gt; 主题搭建，在使用过程中对该主题做了一些简单的配置，以适应自己的需求。这里介绍一下自己粗浅的方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;十分推荐 Icarus 这个主题，功能支持十分全面而且作者的文档也较为详实，推荐大家去了解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;拓宽显示页面区域&quot;&gt;&lt;a href=&quot;#拓宽显示页面区域&quot; class=&quot;headerlink&quot; title=&quot;拓宽显示页面区域&quot;&gt;&lt;/a&gt;拓宽显示页面区域&lt;/h2&gt;&lt;p&gt;&lt;code&gt;include/style/base.styl&lt;/code&gt;  中定义了各种基本页面尺寸：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs js&quot;&gt;$gap ?= 64px&lt;br&gt;$tablet ?= 769px&lt;br&gt;$desktop ?= 1088px&lt;br&gt;$widescreen ?= 1280px&lt;br&gt;$fullhd ?= 1472px&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以在 &lt;code&gt;include/style/responsive.styl&lt;/code&gt;  中定义 2 栏 3 栏情况下所使用的宽度：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs js&quot;&gt;+&lt;span class=&quot;hljs-title function_&quot;&gt;widescreen&lt;/span&gt;()&lt;br&gt;    .&lt;span class=&quot;hljs-property&quot;&gt;is&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;-column .&lt;span class=&quot;hljs-property&quot;&gt;container&lt;/span&gt;&lt;br&gt;        max-&lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;: $fullhd- $gap&lt;br&gt;        &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;: $fullhd - $gap&lt;br&gt;&lt;br&gt;    .&lt;span class=&quot;hljs-property&quot;&gt;is&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;-column .&lt;span class=&quot;hljs-property&quot;&gt;container&lt;/span&gt;, .&lt;span class=&quot;hljs-property&quot;&gt;is&lt;/span&gt;-&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;-column .&lt;span class=&quot;hljs-property&quot;&gt;container&lt;/span&gt;&lt;br&gt;        max-&lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;: $widescreen - &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * $gap&lt;br&gt;        &lt;span class=&quot;hljs-attr&quot;&gt;width&lt;/span&gt;: $widescreen- &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; * $gap&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://aikenh.cn/categories/Blog/"/>
    
    <category term="Hexo" scheme="http://aikenh.cn/categories/Blog/Hexo/"/>
    
    
    <category term="Blog" scheme="http://aikenh.cn/tags/Blog/"/>
    
    <category term="Hexo" scheme="http://aikenh.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Count_Min Sketch算法</title>
    <link href="http://aikenh.cn/cn/CountMinSketch/"/>
    <id>http://aikenh.cn/cn/CountMinSketch/</id>
    <published>2023-03-10T05:12:20.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文介绍计算大规模数据流中的元素出现频次的方法 CMS，以及其简单改进Count-Mean-Min-Sketch&lt;/p&gt;
&lt;h2 id=&quot;Intro-amp-Scene&quot;&gt;&lt;a href=&quot;#Intro-amp-Scene&quot; class=&quot;headerlink&quot; title=&quot;Intro &amp;amp; Scene&quot;&gt;&lt;/a&gt;Intro &amp;amp; Scene&lt;/h2&gt;&lt;p&gt;在大数据场景下，比如网页的 TopK 问题，爬虫的是否访问过的问题，都是一种出现频次相关的问题，那么在系统设计的时候，如何选择策略和数据结构去存储相关的数据是最高效合适的呢？&lt;br&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Hash" scheme="http://aikenh.cn/tags/Hash/"/>
    
    <category term="Frequency" scheme="http://aikenh.cn/tags/Frequency/"/>
    
  </entry>
  
  <entry>
    <title>Python00 Conda 与 Pip</title>
    <link href="http://aikenh.cn/cn/python_pack_manager/"/>
    <id>http://aikenh.cn/cn/python_pack_manager/</id>
    <published>2023-03-06T03:27:52.000Z</published>
    <updated>2023-10-31T00:19:29.301Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aikenhong 的旧笔记翻新完善 1.0&lt;/p&gt;
&lt;p&gt;Python 的灵活和广泛应用场景来自于众多的第三方库，由于强大的可拓展性和众多的库，使得 Python 的使用简单灵活，且应用面极广。&lt;/p&gt;
&lt;p&gt;但是不同库之间的相互依赖关系，对版本的不同要求等等因素，使得”环境配置”成为了开发者闻之变色的一词，对一个新的库和项目环境的配置尝尝会花去大量的时间，这可能也是 Docker、Venv（虚拟环境）必须存在的原因之一。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里不对 Docker 及其相关技术，进行说明，会另开章节进行学习。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;才疏学浅的本菜鸡希望从 python 开发者避不开的 conda 和 pip 出发介绍一下关于库安装的一些事情，以及这两个 CLI 的关系。&lt;br&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Conda" scheme="http://aikenh.cn/tags/Conda/"/>
    
    <category term="Pip" scheme="http://aikenh.cn/tags/Pip/"/>
    
    <category term="Env" scheme="http://aikenh.cn/tags/Env/"/>
    
  </entry>
  
  <entry>
    <title>Windows Powershell 00</title>
    <link href="http://aikenh.cn/cn/powershell/"/>
    <id>http://aikenh.cn/cn/powershell/</id>
    <published>2023-03-05T01:59:40.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Update:@20230214&lt;/p&gt;
&lt;p&gt;shift+右键: 在此处打开 powershell.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases&quot;&gt;PowerShell &lt;/a&gt;，这里的 PowerShell 和 windows 的已经不是同一个东西了，可能要更先进一些，通过 &lt;code&gt;msi&lt;/code&gt; 进行安装，安装完后重启 terminal 就会自动的添加配置，后续的配置在这个 new shell 中进行会更好一些&lt;/p&gt;
&lt;h2 id=&quot;Basic-Setting&quot;&gt;&lt;a href=&quot;#Basic-Setting&quot; class=&quot;headerlink&quot; title=&quot;Basic Setting&quot;&gt;&lt;/a&gt;Basic Setting&lt;/h2&gt;&lt;h3 id=&quot;Setting-amp-Cancel-Proxy&quot;&gt;&lt;a href=&quot;#Setting-amp-Cancel-Proxy&quot; class=&quot;headerlink&quot; title=&quot;Setting &amp;amp; Cancel Proxy&quot;&gt;&lt;/a&gt;Setting &amp;amp; Cancel Proxy&lt;/h3&gt;&lt;p&gt;设置代理如下：&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs powershell&quot;&gt;netsh winhttp &lt;span class=&quot;hljs-built_in&quot;&gt;set&lt;/span&gt; proxy &lt;span class=&quot;hljs-number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;hljs-number&quot;&gt;0.1&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot;&gt;8890&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 查看代理设置情况&lt;/span&gt;&lt;br&gt;netsh winhttp show proxy&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;取消代理设置使用：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;netsh winhttp reset proxy&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    <category term="Powershell" scheme="http://aikenh.cn/categories/Windows/Powershell/"/>
    
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
    <category term="Powershell" scheme="http://aikenh.cn/tags/Powershell/"/>
    
  </entry>
  
  <entry>
    <title>Bash Notebook 01</title>
    <link href="http://aikenh.cn/cn/Shell/"/>
    <id>http://aikenh.cn/cn/Shell/</id>
    <published>2023-01-25T14:04:15.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;整理脚本编写的一些最基本语法，包括参数传递，赋值，循环等基本语句，方便后续的脚本编写和改动。&lt;/p&gt;
&lt;h2 id=&quot;语句注释&quot;&gt;&lt;a href=&quot;#语句注释&quot; class=&quot;headerlink&quot; title=&quot;语句注释&quot;&gt;&lt;/a&gt;语句注释&lt;/h2&gt;&lt;p&gt;单行注释：&lt;code&gt;#&lt;/code&gt; ，多行注释：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;:&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;多行注释用冒号加单引号即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;legal&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;命令行参数传递&quot;&gt;&lt;a href=&quot;#命令行参数传递&quot; class=&quot;headerlink&quot; title=&quot;命令行参数传递&quot;&gt;&lt;/a&gt;命令行参数传递&lt;/h2&gt;&lt;p&gt;命令行传递参数的方式极其简单，&lt;code&gt;$1&lt;/code&gt; … &lt;code&gt;$9&lt;/code&gt; 可分别代表输入的 9 个参数，第 10 个参数则使用 &lt;code&gt;$&amp;#123;10&amp;#125;&lt;/code&gt; 表示，可以将其赋予变量后便于使用。&lt;/p&gt;
&lt;p&gt;一些特殊参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$0&lt;/code&gt; 脚本本身的名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$#&lt;/code&gt; 输入参数的数量&lt;/li&gt;
&lt;li&gt;$$$$ 进程 ID&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$*&lt;/code&gt; | &lt;code&gt;$@&lt;/code&gt; 所有参数（从第一个开始&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$(PWD)&lt;/code&gt; | `pwd` 都能输出当前的工作路径&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;举个脚本例子如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# we accept args from commandline and print it to the screen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# define&lt;/span&gt;&lt;br&gt;args1=&lt;span class=&quot;hljs-variable&quot;&gt;$1&lt;/span&gt;&lt;br&gt;args2=&lt;span class=&quot;hljs-variable&quot;&gt;$2&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# print&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;using $ &amp;#123; &amp;#125; to get the value of val, what we receive is : &lt;span class=&quot;hljs-variable&quot;&gt;$&amp;#123;args1&amp;#125;&lt;/span&gt; and &lt;span class=&quot;hljs-variable&quot;&gt;$&amp;#123;args2&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;$ can also show : &lt;span class=&quot;hljs-variable&quot;&gt;$args1&lt;/span&gt; and &lt;span class=&quot;hljs-variable&quot;&gt;$args2&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# we can make those statement in a string, which may transfer to its value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;using $ / &amp;#123;&amp;#125; in a string can also get the value like &lt;span class=&quot;hljs-variable&quot;&gt;$args1&lt;/span&gt; and &lt;span class=&quot;hljs-variable&quot;&gt;$args2&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;using $ / &amp;#123;&amp;#125; in a string single quotes cannot get the value like $args1 and $args2&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Bash" scheme="http://aikenh.cn/categories/Langs/Bash/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="Bash" scheme="http://aikenh.cn/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>Windows Configuration04 Dual-System-Ubuntu</title>
    <link href="http://aikenh.cn/cn/DualSystemUbuntu/"/>
    <id>http://aikenh.cn/cn/DualSystemUbuntu/</id>
    <published>2023-01-22T08:25:27.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;该文介绍基于 Windows11 系统的双系统安装和删除，安装的双系统选择 Ubuntu（开发还是比较推荐使用 WSL2 即可）&lt;/p&gt;
&lt;h2 id=&quot;Install-Dual-System&quot;&gt;&lt;a href=&quot;#Install-Dual-System&quot; class=&quot;headerlink&quot; title=&quot;Install Dual System&quot;&gt;&lt;/a&gt;Install Dual System&lt;/h2&gt;&lt;p&gt;参考资料：&lt;a href=&quot;https://blog.csdn.net/NeoZng/article/details/122779035&quot;&gt;全面解决各种问题&lt;/a&gt; &lt;a href=&quot;https://www.cnblogs.com/masbay/p/10745170.html&quot;&gt;双系统安装&lt;/a&gt; &lt;a href=&quot;https://zhuanlan.zhihu.com/p/363640824&quot;&gt;Windows+Ubuntu20.04双系统安装教程&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-安装-u-盘制作&quot;&gt;&lt;a href=&quot;#1-安装-u-盘制作&quot; class=&quot;headerlink&quot; title=&quot;1. 安装 u 盘制作&quot;&gt;&lt;/a&gt;1. 安装 u 盘制作&lt;/h3&gt;&lt;p&gt;这里推荐 &lt;a href=&quot;https://github.com/ventoy/Ventoy&quot;&gt;ventoy&lt;/a&gt; 来做启动盘，ventoy 可以同时将很多系统的镜像放到一个 u 盘中，最最重要的是：干净简洁，可以参考其&lt;a href=&quot;https://www.ventoy.net/cn/doc_start.html&quot;&gt;官方文档&lt;/a&gt;来制作盘，制作后将镜像文件放到指定目录即可。&lt;/p&gt;
&lt;h3 id=&quot;2-硬盘分区&quot;&gt;&lt;a href=&quot;#2-硬盘分区&quot; class=&quot;headerlink&quot; title=&quot;2. 硬盘分区&quot;&gt;&lt;/a&gt;2. 硬盘分区&lt;/h3&gt;&lt;p&gt;win+s 搜索创建并格式化分区，找一块空闲空间较大的硬盘，右键压缩卷，设定好预留给 Linux 的空间即可（记住该大小，方便后续辨认，可以将各个盘的大小拍照记录下来，安装的时候别把 windows 覆盖了）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230323085002.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230323085239.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;该预留的&lt;strong&gt;未分配&lt;/strong&gt;空间，建议至少 30G 以上，如果需要开发和机器学习啥的话可以 50G、100G 以上。&lt;br&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    <category term="Dual System" scheme="http://aikenh.cn/categories/Windows/Dual-System/"/>
    
    
    <category term="DualSystem" scheme="http://aikenh.cn/tags/DualSystem/"/>
    
    <category term="Ubuntu" scheme="http://aikenh.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Github Profile 个人主页</title>
    <link href="http://aikenh.cn/cn/GithubProfile/"/>
    <id>http://aikenh.cn/cn/GithubProfile/</id>
    <published>2023-01-21T13:25:24.000Z</published>
    <updated>2023-10-31T00:07:26.396Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本文介绍如何配置自己的 Github 的个人资料界面，同时会介绍相关美化个人资料的一些资源网站和项目，并简单介绍其用法。最终结果如下（还有许多优化的空间）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20230122113307.png&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Github" scheme="http://aikenh.cn/categories/Github/"/>
    
    
    <category term="Github" scheme="http://aikenh.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs、yarn、npm关系辨析</title>
    <link href="http://aikenh.cn/cn/Nodes/"/>
    <id>http://aikenh.cn/cn/Nodes/</id>
    <published>2022-10-09T05:33:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenH 2022 Node-JS-Chapter1 &lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://blog.csdn.net/Newbie___/article/details/104759861&quot;&gt;包管理工具npm、yarn以及nvm简介及简单使用&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Concept-概念&quot;&gt;&lt;a href=&quot;#Concept-概念&quot; class=&quot;headerlink&quot; title=&quot;Concept 概念&quot;&gt;&lt;/a&gt;Concept 概念&lt;/h2&gt;&lt;p&gt;对 Node，NPM，JS，Yarn，NVM 的概念和作用进行一个辨析和介绍，了解各自的含义和职责，进而理解我们使用的到底是什么，环境怎么管理，怎么自定义和进行改动等。&lt;/p&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Nodejs" scheme="http://aikenh.cn/categories/Langs/Nodejs/"/>
    
    
    <category term="JS" scheme="http://aikenh.cn/tags/JS/"/>
    
    <category term="Node" scheme="http://aikenh.cn/tags/Node/"/>
    
  </entry>
  
  <entry>
    <title>基于Vue和Django的前后端开发实践</title>
    <link href="http://aikenh.cn/cn/custom_web/"/>
    <id>http://aikenh.cn/cn/custom_web/</id>
    <published>2022-10-02T10:00:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Frontend" scheme="http://aikenh.cn/categories/Frontend/"/>
    
    
    <category term="Vue" scheme="http://aikenh.cn/tags/Vue/"/>
    
    <category term="Django" scheme="http://aikenh.cn/tags/Django/"/>
    
    <category term="Mysql" scheme="http://aikenh.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Vue Chapter1 基础语法</title>
    <link href="http://aikenh.cn/cn/Vue%20Chapter1/"/>
    <id>http://aikenh.cn/cn/Vue%20Chapter1/</id>
    <published>2022-09-14T02:34:08.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;基本Vue语法规则学习笔记，方便我们去自定义和看懂别人的网页代码。&lt;/p&gt;
&lt;p&gt;概念补充：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;DOM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;超文本标记语言HTML&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p&quot;&gt;查表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Attribute和&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;协同使用，在其中定义括起来的“文本”的属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Template-Syntax&quot;&gt;&lt;a href=&quot;#Template-Syntax&quot; class=&quot;headerlink&quot; title=&quot;Template Syntax&quot;&gt;&lt;/a&gt;Template Syntax&lt;/h2&gt;&lt;p&gt;vue的模版语法是基于HTML的，但是在底层机制中，会将模版编译成高度优化的JS代码，因此可以通过：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML style 默认&lt;/li&gt;
&lt;li&gt;JSX, 编写渲染函数而不使用模版，但是这样不会享受 VUE 自带的优化。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Frontend" scheme="http://aikenh.cn/categories/Frontend/"/>
    
    <category term="Vue" scheme="http://aikenh.cn/categories/Frontend/Vue/"/>
    
    
    <category term="Vue" scheme="http://aikenh.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Macos Configuration00 软件安装和基础配置</title>
    <link href="http://aikenh.cn/cn/MacOs/"/>
    <id>http://aikenh.cn/cn/MacOs/</id>
    <published>2022-09-09T16:00:00.000Z</published>
    <updated>2023-10-31T00:12:04.629Z</updated>
    
    
    <summary type="html">&lt;p&gt;配置一台全新的 MacOs（M1）用于日常使用和编程开发，这里总结一下自己体验比较好的 APP 和开发工具。Let‘s Go&lt;/p&gt;
&lt;h2 id=&quot;系统基础设置&quot;&gt;&lt;a href=&quot;#系统基础设置&quot; class=&quot;headerlink&quot; title=&quot;系统基础设置&quot;&gt;&lt;/a&gt;系统基础设置&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;调转 F 区功能&lt;/strong&gt;：在涉及到开发的时候，F 区很多情况下就会派上用场，因此这里简单介绍一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统设置里搜索”功能键”&lt;/li&gt;
&lt;li&gt;在弹出页面中选择将 F 1 作为标准功能键勾选即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;触控板功能&lt;/strong&gt;：特别是三指拖动功能一定要开启，用来拖放窗口和文件方便太多。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统偏好设置 -&amp;gt; 触控板 -&amp;gt; 三指点按查询&lt;/li&gt;
&lt;li&gt;系统偏好设置 -&amp;gt; 辅助功能 -&amp;gt; 指针控制-&amp;gt; 触控板选项 -&amp;gt; 三指拖动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;访达设置：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先在偏好设置中有以下的几个可以调整：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通用 -&amp;gt; 开启新访达窗口时打开&lt;/li&gt;
&lt;li&gt;高级 -&amp;gt; 显示文件拓展名&lt;/li&gt;
&lt;li&gt;边栏 -&amp;gt; 选择自己想要的边栏&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接着是在显示选线卡中，可以勾选：“显示路径栏”、“‘显示状态栏’”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/mac/20230402164844.png&quot; alt=&quot;image.png&quot;&gt;&lt;br&gt;</summary>
    
    
    
    <category term="MacOS" scheme="http://aikenh.cn/categories/MacOS/"/>
    
    
    <category term="MacOS" scheme="http://aikenh.cn/tags/MacOS/"/>
    
    <category term="Configuration" scheme="http://aikenh.cn/tags/Configuration/"/>
    
  </entry>
  
  <entry>
    <title>Linux02 基础指令</title>
    <link href="http://aikenh.cn/cn/linux2/"/>
    <id>http://aikenh.cn/cn/linux2/</id>
    <published>2022-09-04T13:30:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2022 &lt;/p&gt;
&lt;p&gt;If u want get detail params info go to: &lt;a href=&quot;http://www.explainshell.com&quot;&gt;http://www.explainshell.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;tar-压缩命令&quot;&gt;&lt;a href=&quot;#tar-压缩命令&quot; class=&quot;headerlink&quot; title=&quot;tar 压缩命令&quot;&gt;&lt;/a&gt;tar 压缩命令&lt;/h2&gt;&lt;p&gt;linux中主要使用tar来进行文件的打包和解压，如果需要处理zip文件需要额外的支持，在上一章节中已经提到了，该章节压缩文件部分主要介绍tar命令&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;压缩文件（夹）&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;tar -zcvf &amp;#123;final_name&amp;#125;.tgz &amp;#123;dir&amp;#125; --exclude=&amp;#123;dir/sub_dire1&amp;#125;&lt;br&gt;tar -cvf ...&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;解压文件（夹）&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;tar -zxvf &amp;#123;tarfile&amp;#125;.tgz -C &amp;#123;指定目录&amp;#125;&lt;br&gt;tar -xvf ...&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;批量解压tar&quot;&gt;&lt;a href=&quot;#批量解压tar&quot; class=&quot;headerlink&quot; title=&quot;批量解压tar&quot;&gt;&lt;/a&gt;批量解压tar&lt;/h3&gt;&lt;p&gt;编写脚本批量解压tar文件到对应的文件夹中，这里主要的核心在于脚本的编写，而非tar的package&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;version 1 ez2understrand&lt;/span&gt;&lt;br&gt;for i in `ls *.tar.gz`&lt;br&gt;do&lt;br&gt;    mkdir /dir/$&amp;#123;i/.tar.gz//&amp;#125;&lt;br&gt;    tar zxvf $i -C /dir/$&amp;#123;i/.tar.gz//&amp;#125;&lt;br&gt;done&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以使用第二种方法：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;version 2 try to use assignment method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;可以发现基本的操作是一样的，就是对应的定义的地方&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;可以考虑一下是如何使用&lt;span class=&quot;hljs-built_in&quot;&gt;echo&lt;/span&gt;和&lt;span class=&quot;hljs-built_in&quot;&gt;cut&lt;/span&gt;以及对应的-d 和 -f1是什么意思&lt;/span&gt;&lt;br&gt;for file in `ls *.tar`&lt;br&gt;do&lt;br&gt;    todir=`echo $file | cut -d&amp;quot;.&amp;quot; -f1`&lt;br&gt;    mkdir $todir &amp;amp;&amp;amp; tar -xvf $file -C $todir&lt;br&gt;done&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://www.cnblogs.com/hhandbibi/p/7283862.html&quot;&gt;tar压缩解压缩命令详解&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="manual" scheme="http://aikenh.cn/tags/manual/"/>
    
  </entry>
  
  <entry>
    <title>转）vimscript in 5 minus</title>
    <link href="http://aikenh.cn/cn/vimscript_5minus/"/>
    <id>http://aikenh.cn/cn/vimscript_5minus/</id>
    <published>2022-08-30T16:00:00.000Z</published>
    <updated>2023-10-31T00:29:04.045Z</updated>
    
    
    <summary type="html">&lt;p&gt;学习 vimscript 理解原生 vim 的配置方法，Reference：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://andrewscala.com/vimscript/&quot;&gt;“Five Minus Vimscript”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/37352209&quot;&gt;Vimscript 五分钟入门&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/categories/Editor/Vim/"/>
    
    
    <category term="Vimscript" scheme="http://aikenh.cn/tags/Vimscript/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Python Unittest 单元测试的编写与执行</title>
    <link href="http://aikenh.cn/cn/Unittest/"/>
    <id>http://aikenh.cn/cn/Unittest/</id>
    <published>2022-08-12T12:37:00.000Z</published>
    <updated>2023-10-31T00:28:34.831Z</updated>
    
    
    <summary type="html">&lt;p&gt;该文章将介绍 Python 中的单元测试之 Unittest 模块，及其在 VsCode 中的集成和使用，主要参考的链接有以下的三个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/sinat_38682860/article/details/102838668&quot;&gt;Unittest的基本用法&lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/zh-cn/3/library/unittest.html&quot;&gt;Python官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/CloserSide/article/details/109175775&quot;&gt;VsCode运行Unittest&lt;/a&gt;，其对应 VsCode 侧边栏中的“测试”模块，该部分就由本文来自行补充&lt;/li&gt;
&lt;li&gt;使用Unittest&lt;a href=&quot;https://blog.csdn.net/weixin_44520259/article/details/107840219&quot;&gt;模拟input的输入&lt;/a&gt;，便于测试基于命令行输入的代码&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="VsCode" scheme="http://aikenh.cn/tags/VsCode/"/>
    
  </entry>
  
  <entry>
    <title>SQL Chapter5 mysql与事务</title>
    <link href="http://aikenh.cn/cn/SQL5/"/>
    <id>http://aikenh.cn/cn/SQL5/</id>
    <published>2022-08-05T09:30:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;廖雪峰的SQL教程的学习笔记&lt;/p&gt;
&lt;h2 id=&quot;mySQL&quot;&gt;&lt;a href=&quot;#mySQL&quot; class=&quot;headerlink&quot; title=&quot;mySQL&quot;&gt;&lt;/a&gt;mySQL&lt;/h2&gt;&lt;p&gt;how to connect mysql? Using CMD(or MySQL Client) to carry out &lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;local&lt;/span&gt;, default port is 3306&lt;/span&gt;&lt;br&gt;mysql -u root -p&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;remote&lt;/span&gt;&lt;br&gt;mysql -h &amp;lt;ip&amp;gt; -u root -p&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;root here is the &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt;, we may using other name in specific situation.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mysql&lt;/code&gt;实际上时MySQL的客户端，真正的MySQL服务器程序时&lt;code&gt;mysqld&lt;/code&gt;在后台运行。&lt;/p&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/categories/Langs/SQL/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/tags/SQL/"/>
    
    <category term="Database" scheme="http://aikenh.cn/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>SQL Chapter4  增删改相关操作</title>
    <link href="http://aikenh.cn/cn/SQL4/"/>
    <id>http://aikenh.cn/cn/SQL4/</id>
    <published>2022-08-05T07:20:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;基本操作无非就是增删改查，查询在上一章Select已经学习完毕，而剩下的增、删、改对应的关键词分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;INSERT：插入新纪录&lt;/li&gt;
&lt;li&gt;UPDATE：更新现有记录&lt;/li&gt;
&lt;li&gt;DELETE：删除已有记录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来具体讨论各种用法：&lt;/p&gt;
&lt;h2 id=&quot;插入&quot;&gt;&lt;a href=&quot;#插入&quot; class=&quot;headerlink&quot; title=&quot;插入&quot;&gt;&lt;/a&gt;插入&lt;/h2&gt;&lt;p&gt;使用关键字&lt;code&gt;INSERT&lt;/code&gt;进行数据和记录的插入，其基本语法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs SQL&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;表名&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;(字段&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,字段&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,...) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;(值&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;，值&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,...)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如向&lt;code&gt;students&lt;/code&gt;表中插入一条新数据，先列出需要添加数据的字段，然后按照字段的次序添加值&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- 添加记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; students (class_id, name, gender, score) &lt;span class=&quot;hljs-keyword&quot;&gt;value&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;大牛&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;M&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;80&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自增字段（id）或者其他有默认值的字段可以省略。其中需要注意的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字段顺序不必和数据库表的字段顺序一致&lt;/li&gt;
&lt;li&gt;但是值的顺序必须和字段顺序一致&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时&lt;strong&gt;插入多条记录&lt;/strong&gt;的写法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;INTO&lt;/span&gt; students (class_id, name, gender, score) &lt;span class=&quot;hljs-keyword&quot;&gt;VALUES&lt;/span&gt;&lt;br&gt;  (&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;大宝&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;M&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;87&lt;/span&gt;),&lt;br&gt;  (&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;二宝&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;M&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;81&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/categories/Langs/SQL/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/tags/SQL/"/>
    
    <category term="Database" scheme="http://aikenh.cn/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>SQL Chapter3 查询命令</title>
    <link href="http://aikenh.cn/cn/SQL3/"/>
    <id>http://aikenh.cn/cn/SQL3/</id>
    <published>2022-08-04T06:40:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;该章节介绍SQL中的查询命令，根据&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1177760294764384/1179610888796448&quot;&gt;廖雪峰网站&lt;/a&gt;进行一步步的测试和学习即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其中&lt;code&gt;–&lt;/code&gt;为sql语言中的注释符号。&lt;/li&gt;
&lt;li&gt;关键词不区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基本查询&quot;&gt;&lt;a href=&quot;#基本查询&quot; class=&quot;headerlink&quot; title=&quot;基本查询&quot;&gt;&lt;/a&gt;基本查询&lt;/h2&gt;&lt;p&gt;查询表中的所有数据主要使用关键词&lt;code&gt;SELECT&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;表名&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT&lt;/code&gt;表明要执行查询&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt;代表“所有列”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FROM&lt;/code&gt;表明要从哪个表查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当指定特定列名的时候（也就是所谓的&lt;strong&gt;投影查询&lt;/strong&gt;）格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;KEY1&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;,&lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;KEY2&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;hljs-operator&quot;&gt;&amp;lt;&lt;/span&gt;表名&lt;span class=&quot;hljs-operator&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;-- 注释&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此外，许多工具会使用&lt;code&gt;SELECT 1;&lt;/code&gt;来测试数据库链接的有效性；&lt;code&gt;SELECT 100+200&lt;/code&gt;也可以用来做简单的计算。&lt;/p&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/categories/Langs/SQL/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/tags/SQL/"/>
    
    <category term="Database" scheme="http://aikenh.cn/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>SQL Chapter2 安装和基本概念</title>
    <link href="http://aikenh.cn/cn/SQL2/"/>
    <id>http://aikenh.cn/cn/SQL2/</id>
    <published>2022-08-03T02:17:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本章节从MySQL的安装到基础使用，&lt;strong&gt;MySQL&lt;/strong&gt;本身只是一个SQL接口，它内部还包含多种数据引擎，常用的包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;InnoDB：支持事务的数据库引擎（不知道选啥的时候选他就好）&lt;/li&gt;
&lt;li&gt;MyISAM：早期默认，不支持事务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接口和引擎的关系好比浏览器和浏览器引擎，切换MySQL引擎不影响自己写的应用程序使用MySQL的接口，由于其开源，也衍生出了各种开源版本（包括针对各种云存储中托管数据库的版本等）&lt;/p&gt;
&lt;h2 id=&quot;安装MySQL&quot;&gt;&lt;a href=&quot;#安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;安装MySQL&quot;&gt;&lt;/a&gt;安装MySQL&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;直接官网下载对应的版本就好了，&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/&quot;&gt;Community Version&lt;/a&gt;在该超链接进行下载，其他版本就按需下载，按需付费就行。&lt;/p&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/categories/Langs/SQL/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/tags/SQL/"/>
    
    <category term="Database" scheme="http://aikenh.cn/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>SQL Chapter1 Introduce</title>
    <link href="http://aikenh.cn/cn/SQL1/"/>
    <id>http://aikenh.cn/cn/SQL1/</id>
    <published>2022-08-02T03:17:04.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;SQL相关参考资料：尊重一下&lt;a href=&quot;https://www.runoob.com/sql/sql-tutorial.html&quot;&gt;菜鸟教程&lt;/a&gt; ，该教程中的文档相对简练和入门，&lt;a href=&quot;https://www.w3school.com.cn/sql/sql_intro.asp&quot;&gt;W3School&lt;/a&gt;的资料好像就是菜鸟教程的；其次，&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/1177760294764384&quot;&gt;廖雪峰&lt;/a&gt;的SQL教程网站，也应该比较适合入门，对比后选择一个进行学习。&lt;/p&gt;
&lt;p&gt;围绕SQL是什么、有什么用、和怎么用来学习。&lt;/p&gt;
&lt;p&gt;利用廖雪峰的教程来进行学习，因为其具备在线运行和测试的功能。&lt;/p&gt;
&lt;h2 id=&quot;SQL是什么&quot;&gt;&lt;a href=&quot;#SQL是什么&quot; class=&quot;headerlink&quot; title=&quot;SQL是什么&quot;&gt;&lt;/a&gt;SQL是什么&lt;/h2&gt;&lt;p&gt;SQL：Structured Query Language（结构化查询语言）用于访问和操作数据库系统：查询、添加、更新、删除、管理、维护。不同的数据库，都支持SQL。&lt;/p&gt;
&lt;p&gt;“SQL就是访问和处理关系数据库的计算机标准语言“，无论使用什么编程语言编写程序，当我们涉及到&lt;strong&gt;操作关系数据库&lt;/strong&gt;之时，就需要使用SQL，其中，最流行的开源数据库为MySQL。&lt;/p&gt;
&lt;p&gt;同时，现今还存在非SQL的数据库，也就是NoSQL数据库，例如：MongoDB、Cassandra、Dynamo都属于非关系数据库。&lt;/p&gt;
&lt;p&gt;而SQL在当今仍然承担各种应用程序的核心数据存储，与NoSQL（作为SQL数据库的补充）相辅相成。&lt;/p&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/categories/Langs/SQL/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="SQL" scheme="http://aikenh.cn/tags/SQL/"/>
    
    <category term="Database" scheme="http://aikenh.cn/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Windows Configuration03 LAN sharing</title>
    <link href="http://aikenh.cn/cn/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/"/>
    <id>http://aikenh.cn/cn/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%AB/</id>
    <published>2022-07-31T15:43:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在同一个局域网（像是链接同一个wifi的环境）中，设置共享的文件夹或者磁盘，可提升文件分享的效率和速度，特别适用于与女朋友合租、与兄弟合租的情景。&lt;/p&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
    <category term="Tool" scheme="http://aikenh.cn/tags/Tool/"/>
    
    <category term="Tobefinnish" scheme="http://aikenh.cn/tags/Tobefinnish/"/>
    
  </entry>
  
  <entry>
    <title>Windows Configuration02 Terminal</title>
    <link href="http://aikenh.cn/cn/WindowsTerminal/"/>
    <id>http://aikenh.cn/cn/WindowsTerminal/</id>
    <published>2022-07-30T02:03:26.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Config-Windows-Terminal-in-Win11&quot;&gt;&lt;a href=&quot;#Config-Windows-Terminal-in-Win11&quot; class=&quot;headerlink&quot; title=&quot;Config Windows Terminal in Win11&quot;&gt;&lt;/a&gt;Config Windows Terminal in Win11&lt;/h2&gt;&lt;h3 id=&quot;Install-安装&quot;&gt;&lt;a href=&quot;#Install-安装&quot; class=&quot;headerlink&quot; title=&quot;Install 安装&quot;&gt;&lt;/a&gt;Install 安装&lt;/h3&gt;&lt;p&gt;windows terminal 在 win11 已经自带，无需安装，如果需要安装的话在 Microsoft Store 下载即可，默认的 terminal 在中文环境中可能要搜索 windows 终端。&lt;/p&gt;
&lt;h3 id=&quot;Baisc-基础设置&quot;&gt;&lt;a href=&quot;#Baisc-基础设置&quot; class=&quot;headerlink&quot; title=&quot;Baisc 基础设置&quot;&gt;&lt;/a&gt;Baisc 基础设置&lt;/h3&gt;&lt;p&gt;新版的 Windows Terminal 有了图形化配置界面，因此配置简单和直观了不少，该部分就简要的介绍一下基础的设置。通过 Ctrl+,  或者下拉菜单可以打开设置页面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;完成每一部分的修改后记得保存&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>NAS</title>
    <link href="http://aikenh.cn/cn/NAS/"/>
    <id>http://aikenh.cn/cn/NAS/</id>
    <published>2022-07-27T15:30:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;“NAS本质上就是一个可以开启文件共享的具有大存储的系统：无论是Windows，Linux或其他一切可基于诸如SMB、Internet提供文件共享或访问功能的系统都可以作为NAS的系统使用。”&lt;/p&gt;
&lt;p&gt;不出意外，针对该应用场景，也有针对性的一些简化OS，故而在构建NAS之前，首先分析对NAS存储的需求，进而选择一个合适的系统去构建。&lt;/p&gt;
&lt;h2 id=&quot;个人NAS需求分析&quot;&gt;&lt;a href=&quot;#个人NAS需求分析&quot; class=&quot;headerlink&quot; title=&quot;个人NAS需求分析&quot;&gt;&lt;/a&gt;个人NAS需求分析&lt;/h2&gt;&lt;p&gt;就像NAS：Network Attached Storage所说，NAS最基本的需求是“存储”与“共享”（随时存取），实际也是一个私有网盘（支持更多功能？），本文便基于该脉络分析需求。&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;存储/功能类型&lt;/th&gt;
&lt;th&gt;使用场景说明&lt;/th&gt;
&lt;th&gt;需求程度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;图片、文件归档&lt;/td&gt;
&lt;td&gt;存储，预览（基于AI识别分类，时间线，照片墙）&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大文件&lt;/td&gt;
&lt;td&gt;内网快速传输&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电影&lt;/td&gt;
&lt;td&gt;流媒体服务器：多设备在线观看、封面集归纳和整理（PLEX）&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;工作文档&lt;/td&gt;
&lt;td&gt;历史版本，协作编辑&lt;/td&gt;
&lt;td&gt;Option&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;下载功能&lt;/td&gt;
&lt;td&gt;看到想看的电影的时候可以直接让他开始下载&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;支持docker扩充功能&lt;/td&gt;
&lt;td&gt;可以使用Docker下载并部署一些其他的乱七八糟的功能&lt;/td&gt;
&lt;td&gt;Core&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;在支持基本功能的基础之上，通过配置的选择来，尽量减少功耗，从而减少长时间启动带来的电费消耗，如果可以的话使用软件或者硬件来记录NAS每个月的耗电量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;此外，还需要考虑数据的稳定性，好像叫做《阵列》？（&lt;strong&gt;后续进行补充了解&lt;/strong&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;断电自动重启&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;文件共享服务：SMB、FTP‘&lt;/li&gt;
&lt;li&gt;加密和数据安全性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不需要显示器，只需要网络和SSH进行远程登陆和控制之类的。&lt;/p&gt;</summary>
    
    
    
    <category term="NAS" scheme="http://aikenh.cn/categories/NAS/"/>
    
    
    <category term="NAS" scheme="http://aikenh.cn/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>Markov Junior</title>
    <link href="http://aikenh.cn/cn/MarkovJunior/"/>
    <id>http://aikenh.cn/cn/MarkovJunior/</id>
    <published>2022-07-10T03:26:00.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Reference: &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIxODg1OTk1MA==&amp;amp;mid=2247513354&amp;amp;idx=1&amp;amp;sn=28b5492cc0a86b04f0a0b975bf42568c&amp;amp;ascene=56&amp;amp;devicetype=iOS15.5&amp;amp;version=1800172f&amp;amp;nettype=WIFI&amp;amp;abtest_cookie=AAACAA%3D%3D&amp;amp;lang=zh_CN&amp;amp;fontScale=100&amp;amp;exportkey=ARSr9kinLTM%2B6fr7WYBKF%2FM%3D&amp;amp;pass_ticket=gK4kcTE5wfRRXzd0FMTJlg9zBNGh%2BZ5VoWQkUbqSJXykXGIdMXasyLJgUxII1IDt&amp;amp;wx_header=3&quot;&gt;Jack Cui&lt;/a&gt; | &lt;a href=&quot;https://github.com/mxgmn/MarkovJunior&quot;&gt;Github-Markov Junior&lt;/a&gt; | &lt;a href=&quot;https://github.com/mxgmn/MarkovJunior&quot;&gt;Wiki Markov algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一篇文章简要介绍了一下该编程语言能实现什么效果；第二个是官方repo，其文档和代码都有很强的借鉴意义；第三个是wikipedia对马尔可夫算法的解释，在该编程语言的实现中有重要的意义。&lt;/p&gt;
&lt;h2 id=&quot;markov-algorithm&quot;&gt;&lt;a href=&quot;#markov-algorithm&quot; class=&quot;headerlink&quot; title=&quot;markov algorithm&quot;&gt;&lt;/a&gt;markov algorithm&lt;/h2&gt;&lt;p&gt;马尔可夫算法指的是字符串重写算法，其基本逻辑如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自顶向下依次检查规则，看是否能在符号串中找到任何在箭头左边的字符串。&lt;/li&gt;
&lt;li&gt;如果没有找到，停止执行算法。&lt;/li&gt;
&lt;li&gt;如果找到一个或多个，把符号串中的最左匹配的文字替换为在第一个相应规则的箭头右边的字符串。&lt;/li&gt;
&lt;li&gt;返回步骤1并继续。（如果应用的规则是终止规则，则停止执行算法。） [1] &lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    <category term="Game Generate" scheme="http://aikenh.cn/categories/Algorithm/Game-Generate/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Game" scheme="http://aikenh.cn/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>Wave Function Collapse</title>
    <link href="http://aikenh.cn/cn/WFC%E7%AE%97%E6%B3%95/"/>
    <id>http://aikenh.cn/cn/WFC%E7%AE%97%E6%B3%95/</id>
    <published>2022-07-10T01:42:50.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Reference: &lt;a href=&quot;https://github.com/mxgmn/WaveFunctionCollapse&quot;&gt;Github-Mxgmn&lt;/a&gt; | &lt;a href=&quot;https://zhuanlan.zhihu.com/p/66416593&quot;&gt;zhihu&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;概念简介和复习&quot;&gt;&lt;a href=&quot;#概念简介和复习&quot; class=&quot;headerlink&quot; title=&quot;概念简介和复习&quot;&gt;&lt;/a&gt;概念简介和复习&lt;/h2&gt;&lt;p&gt;本质上该方法的底层思想就是条件概率的启发式随机生成算法。&lt;/p&gt;
&lt;h3 id=&quot;波函数坍塌&quot;&gt;&lt;a href=&quot;#波函数坍塌&quot; class=&quot;headerlink&quot; title=&quot;波函数坍塌&quot;&gt;&lt;/a&gt;波函数坍塌&lt;/h3&gt;&lt;p&gt;在介绍算法之前首先需要明确几个概念，第一个就是&lt;strong&gt;“波函数坍塌”&lt;/strong&gt;（名字的来源是量子力学中的概念），参考&lt;strong&gt;“薛定谔的猫”&lt;/strong&gt;，可以理解成：在一系列的不确定像素（存在多种可能）的基础之上，通过&lt;strong&gt;确定的规则&lt;/strong&gt;、&lt;strong&gt;相关关系&lt;/strong&gt;，随机的将所有的像素变成确定的状态。（可以通过给定种子来启动，也可以通过随机规则来启动），实现在一定规则或者模式下的随机生成。&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    <category term="Game Generate" scheme="http://aikenh.cn/categories/Algorithm/Game-Generate/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Game" scheme="http://aikenh.cn/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>Z Jumper for Linux</title>
    <link href="http://aikenh.cn/cn/Z_Jumper/"/>
    <id>http://aikenh.cn/cn/Z_Jumper/</id>
    <published>2022-05-20T13:22:53.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Star this &lt;a href=&quot;https://github.com/rupa/z&quot;&gt;Project&lt;/a&gt; in Github after u decide to use it.&lt;/p&gt;
&lt;h2 id=&quot;Download-amp-Install&quot;&gt;&lt;a href=&quot;#Download-amp-Install&quot; class=&quot;headerlink&quot; title=&quot;Download &amp;amp; Install&quot;&gt;&lt;/a&gt;Download &amp;amp; Install&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Firstly&lt;/strong&gt;, Cpy &lt;code&gt;z.sh&lt;/code&gt; to the path u want make this script can be &lt;strong&gt;recognizabled by your shell&lt;/strong&gt; like zsh, bash.&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;cd ~&lt;br&gt;wget https://raw.githubusercontent.com/rupa/z/master/z.sh&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Secondly&lt;/strong&gt;, add &lt;code&gt;. ~/z.sh&lt;/code&gt;  to the end of your &lt;code&gt;.zshrc&lt;/code&gt; ，u can use following cmd also&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;echo &amp;quot;. ~/z.sh&amp;quot; &amp;gt;&amp;gt; ~/.zshrc&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;then&lt;/span&gt; using this to check&lt;/span&gt; &lt;br&gt;tail -n 5 ~/.zshrc&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Fi&lt;/strong&gt;, activate it.&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;source ~/.zshrc&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Usage-and-Description&quot;&gt;&lt;a href=&quot;#Usage-and-Description&quot; class=&quot;headerlink&quot; title=&quot;Usage and Description&quot;&gt;&lt;/a&gt;Usage and Description&lt;/h2&gt;&lt;p&gt;以以下的目录为例：&lt;code&gt;the/path/to/UniFramwork&lt;/code&gt;，演示该jumper的使用方式。我们首先需要进入（&lt;code&gt;cd&lt;/code&gt;）过对应的目录，&lt;code&gt;z&lt;/code&gt;将会记录看，并计算相应的权重，通过其维护的List来进行快速跳转，在完成记录后，我们即可用下面跳转到项目文件夹：&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="Tool" scheme="http://aikenh.cn/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Write</title>
    <link href="http://aikenh.cn/cn/Hexo_Write/"/>
    <id>http://aikenh.cn/cn/Hexo_Write/</id>
    <published>2022-04-13T15:29:10.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Hexo和Gitee一致，都是由Markdown文件为基础，构建的博客，编写Markdown本身无需多言，由于Hexo并非笔者的首选笔记管理方式，故而再其他地方构建和编写文件是常态，该Blog主要是利用其他工具来方便Hexo博文的编写（Header）&lt;/p&gt;
&lt;p&gt;默认的是 &lt;code&gt;hexo new [layout] title&lt;/code&gt; 可简写为 &lt;code&gt;hexo n [layout] title&lt;/code&gt;，其中布局应该是在博客目录中定义，该命令也局限于博客的对应目录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;post(默认)、draft、page&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;除了默认的方法，本篇将介绍Obsidian、VsCode-like、Vim自动添加Header的方式，用以方便随时随地的编写博文。&lt;/p&gt;
&lt;p&gt;同时为了方便已有笔记迁移，本文也编写了Python脚本，CPY后为Target Dir的版本自动添加Header，但是其中对应的Catagories最好还是手动修改一下。&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://aikenh.cn/categories/Blog/"/>
    
    <category term="Hexo" scheme="http://aikenh.cn/categories/Blog/Hexo/"/>
    
    
    <category term="Blog" scheme="http://aikenh.cn/tags/Blog/"/>
    
    <category term="Hexo" scheme="http://aikenh.cn/tags/Hexo/"/>
    
    <category term="Obsidian" scheme="http://aikenh.cn/tags/Obsidian/"/>
    
    <category term="Markdown" scheme="http://aikenh.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Latex tesing</title>
    <link href="http://aikenh.cn/cn/Latex_testing/"/>
    <id>http://aikenh.cn/cn/Latex_testing/</id>
    <published>2022-04-13T08:50:53.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;该文档主要目的是用于测试Latex语法对应前端的渲染能力，主要用于测试Hexo站点是否能正常渲染Latex。&lt;/p&gt;
&lt;p&gt;Example1: 2 inline in one sentence.&lt;/p&gt;
&lt;p&gt;When $a &#92;ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are &lt;script type=&quot;math/tex&quot;&gt;x = {-b &#92;pm &#92;sqrt{b^2-4ac} &#92;over 2a}.&lt;/script&gt;&lt;br&gt;Example2: Matrix Example&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
&#92;begin{bmatrix} 1&amp;x&amp;x^2&#92;&#92; 1&amp;y&amp;y^2&#92;&#92; 1&amp;z&amp;z^2 &#92;end{bmatrix}
&#92;&#92;
&#92;begin{bmatrix} 1&amp;x&amp;x^2&#92;&#92;&#92;&#92; 1&amp;y&amp;y^2&#92;&#92;&#92;&#92; 1&amp;z&amp;z^2 &#92;end{bmatrix}
&#92;&#92;
vmatrix ||、Bmatrix{}、pmatrix()&lt;/script&gt;&lt;p&gt;Example3: the Conditional Formula&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
f(x)=
&#92;begin{cases}
0&amp; &#92;text{x=0}&#92;&#92;&#92;&#92;
1&amp; &#92;text{x!=0}
&#92;end{cases}&lt;/script&gt;&lt;p&gt;Example4: Sprcial Symboy&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://aikenh.cn/categories/Blog/"/>
    
    
    <category term="Blog" scheme="http://aikenh.cn/tags/Blog/"/>
    
    <category term="Latex" scheme="http://aikenh.cn/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Build</title>
    <link href="http://aikenh.cn/cn/Hexo_Build/"/>
    <id>http://aikenh.cn/cn/Hexo_Build/</id>
    <published>2022-04-12T03:16:30.000Z</published>
    <updated>2023-10-31T00:08:00.185Z</updated>
    
    
    <summary type="html">&lt;p&gt;该文档用以，记录自己（外行）利用Hexo建立Blog的过程，将原本用Gitbook构建的笔记转移到Hexo中，同时购买域名并部署其上。网页部署于&lt;a href=&quot;AikenH.cn&quot;&gt;Github Page&lt;/a&gt;。以Live my Live主题为例。&lt;/p&gt;
&lt;p&gt;腾讯云和Github Page的操作和理解在现有的一些博客中过时了，或者说存在一些问题，后续会对此进行简单的讲解。同时大部分博客都是使用NexT主题进行配置，这里采用的是Live My Life主题，该博文介绍自己的粗浅理解，也为自己后续的工作进行一定的参考。&lt;/p&gt;
&lt;p&gt;还存在一些&lt;strong&gt;没有解决&lt;/strong&gt;的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对主题切换和主题配置和全局配置的的深入理解（Live my Life主题覆盖了很多默认配置）&lt;/li&gt;
&lt;li&gt;前端代码的理解，&lt;strong&gt;自定义Layout&lt;/strong&gt;，超链接，图标等&lt;/li&gt;
&lt;li&gt;深入理解插件的应用和自定义&lt;/li&gt;
&lt;li&gt;推送网站到baidu和google（Option）（没有计划）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后有时间的话可以去研究一下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键词&lt;/strong&gt;：Hexo_Livemylive、Github Page、腾讯云（Domain、DNS、SSL）&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://aikenh.cn/categories/Blog/"/>
    
    <category term="Hexo" scheme="http://aikenh.cn/categories/Blog/Hexo/"/>
    
    
    <category term="Blog" scheme="http://aikenh.cn/tags/Blog/"/>
    
    <category term="Hexo" scheme="http://aikenh.cn/tags/Hexo/"/>
    
    <category term="Cloud" scheme="http://aikenh.cn/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Vim 01 Recorder</title>
    <link href="http://aikenh.cn/cn/VimOperation/"/>
    <id>http://aikenh.cn/cn/VimOperation/</id>
    <published>2022-04-07T06:15:25.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Chose Your Dotfile to start the vim&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;vim -u &amp;#123;path to your .vimrc&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Recorder-of-Vim&quot;&gt;&lt;a href=&quot;#Recorder-of-Vim&quot; class=&quot;headerlink&quot; title=&quot;Recorder of Vim&quot;&gt;&lt;/a&gt;Recorder of Vim&lt;/h2&gt;&lt;p&gt;This Chapter mainly introduces the &lt;strong&gt;Recorder&lt;/strong&gt; in vim,Which is used to do some &lt;strong&gt;repeated&lt;/strong&gt; operations.This function is also called a &lt;strong&gt;macro&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;for more information try &lt;code&gt;:help recording&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Registers-related-with-recording&quot;&gt;&lt;a href=&quot;#Registers-related-with-recording&quot; class=&quot;headerlink&quot; title=&quot;Registers(related with recording)&quot;&gt;&lt;/a&gt;Registers(related with recording)&lt;/h3&gt;&lt;p&gt;This section will introduce related &lt;strong&gt;concept/function&lt;/strong&gt; of recording function. Which help us to understand how this works, and what we should pay attention to it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;register of vim&lt;/strong&gt;: register is a superset of macro, it contains more function. In this part we should know, register can &lt;strong&gt;store&lt;/strong&gt; some string or operations to help subsequent use. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Status&lt;/strong&gt;:&lt;br&gt;Using &lt;code&gt;:registers&lt;/code&gt; or &lt;code&gt;:reg&lt;/code&gt; to check those &lt;strong&gt;we have registered&lt;/strong&gt;, or add the registers’s name behind to show those u’re interested in.&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs vim&quot;&gt;:&lt;span class=&quot;hljs-keyword&quot;&gt;reg&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;c&lt;/span&gt; &lt;br&gt;--- Registers ---&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot;a register a content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot;b register b content&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot;c register c content&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Lifecycle&lt;/strong&gt;&lt;br&gt;The information in registers will &lt;strong&gt;not disappear&lt;/strong&gt; with the window closed. But maybe with the system-level’s open-close. we should &lt;strong&gt;test this&lt;/strong&gt;!!! So we can store some &lt;strong&gt;snippet&lt;/strong&gt;,&lt;strong&gt;pwd&lt;/strong&gt;,etc. &lt;/p&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/categories/Editor/Vim/"/>
    
    
    <category term="Neovim" scheme="http://aikenh.cn/tags/Neovim/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>PicBed Setting for note and blog</title>
    <link href="http://aikenh.cn/cn/PicBed/"/>
    <id>http://aikenh.cn/cn/PicBed/</id>
    <published>2022-03-27T01:19:23.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2020 first write，2021 modify&lt;/p&gt;
&lt;p&gt;Mainly using picgo-core(command line) to setting picbed，and we can update the setting method&lt;/p&gt;
&lt;h2 id=&quot;Github&quot;&gt;&lt;a href=&quot;#Github&quot; class=&quot;headerlink&quot; title=&quot;Github&quot;&gt;&lt;/a&gt;Github&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Pic-Bed&quot;&gt;使用PicGo-Core（command line）设置github图床，自动转义url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Git&quot;&gt;插入自动复制图片，使用git上传github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;基本部署&quot;&gt;&lt;a href=&quot;#基本部署&quot; class=&quot;headerlink&quot; title=&quot;基本部署&quot;&gt;&lt;/a&gt;基本部署&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在偏好设置中的图像，进行如下设置👇： 下载或更新PicGo-Cord(command line)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20200512160643588.png&quot; alt=&quot;image-20200512160643588&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;接着去Github中建立一个Repo：UserName/RepoName，用以存放图片（Public），简单的用readme初始建立即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Github的setting - developer setting-personal access tokens中新建token，指定简单的repo权限，并记录个人的token（只显示一次）&lt;br&gt;&lt;strong&gt;Attention：&lt;/strong&gt; 忘记记录的话，在token中也是通过update token（好像是这个名，获取新的值的）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用Typora打开配置文件设置，或者使用命令行进行配置&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;picBed&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;repo&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;UserName/RepoName&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;token&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;your github token here&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;img/&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;customUrl&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;https://raw.githubusercontent.com/UserName/RepoName/master&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;          &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;branch&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;current&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;        &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;uploader&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;picgoPlugins&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://aikenh.cn/categories/Blog/"/>
    
    
    <category term="Blog" scheme="http://aikenh.cn/tags/Blog/"/>
    
    <category term="Cloud" scheme="http://aikenh.cn/tags/Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Fine Tuning</title>
    <link href="http://aikenh.cn/cn/FineTune/"/>
    <id>http://aikenh.cn/cn/FineTune/</id>
    <published>2022-02-08T06:31:37.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Langs: python, torch&lt;br&gt;@reference: d2l-pytorch，&lt;a href=&quot;https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html&quot;&gt;transfer_torch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This Note focus on the code part.&lt;br&gt;模型微调和模型预训练，在Pytorch中的使用方式对比汇总。&lt;/p&gt;
&lt;h2 id=&quot;How-to-Design-the-Fine-Tune&quot;&gt;&lt;a href=&quot;#How-to-Design-the-Fine-Tune&quot; class=&quot;headerlink&quot; title=&quot;How to Design the Fine Tune&quot;&gt;&lt;/a&gt;How to Design the Fine Tune&lt;/h2&gt;&lt;p&gt;这一部分主要集中于我们对于微调任务的拆解，有几种不同的预训练和微调的方式，在不同的情景下，对应的参数应该怎么设置和调整是问题的重点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20211205143153.png&quot; alt=&quot;WorkFlow&quot;&gt;&lt;/p&gt;
&lt;p&gt;基于这种Transfer的策略，我们能够学习到一个更通用，泛化能力更强，有助于识别边缘，色彩，等等有助于下游任务的通用特征提取。&lt;/p&gt;
&lt;p&gt;在Transfer任务中，有几种不同的调整方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;固定Bakcbone，只训练Classifier&lt;/li&gt;
&lt;li&gt;同步微调网络&lt;/li&gt;
&lt;li&gt;区分学习率，微调Backbone，训练Classifirer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了实现这几种不同的Transfer方式，需要用到以下的几种方式：梯度截断，lr区分设置等。&lt;/p&gt;
&lt;h2 id=&quot;Code-Part&quot;&gt;&lt;a href=&quot;#Code-Part&quot; class=&quot;headerlink&quot; title=&quot;Code Part&quot;&gt;&lt;/a&gt;Code Part&lt;/h2&gt;&lt;h3 id=&quot;不同lr设置&quot;&gt;&lt;a href=&quot;#不同lr设置&quot; class=&quot;headerlink&quot; title=&quot;不同lr设置&quot;&gt;&lt;/a&gt;不同lr设置&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;微调Backbone，训练Classifier&lt;/strong&gt;作为最经典的Transfer设定，在Code上也较为复杂，所以我们首先举个这种例子。&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Pytorch" scheme="http://aikenh.cn/tags/Pytorch/"/>
    
    <category term="Fine-Tune" scheme="http://aikenh.cn/tags/Fine-Tune/"/>
    
  </entry>
  
  <entry>
    <title>Git 01 入门与常用操作</title>
    <link href="http://aikenh.cn/cn/Git_Manual1/"/>
    <id>http://aikenh.cn/cn/Git_Manual1/</id>
    <published>2022-02-01T04:19:34.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;参考文献：&lt;a href=&quot;https://juejin.cn/post/7131713973572861966&quot;&gt;稀土掘金&lt;/a&gt; | ProGit2&lt;/p&gt;
&lt;h2 id=&quot;与SVN的区别&quot;&gt;&lt;a href=&quot;#与SVN的区别&quot; class=&quot;headerlink&quot; title=&quot;与SVN的区别&quot;&gt;&lt;/a&gt;与SVN的区别&lt;/h2&gt;&lt;p&gt;SVN是集中式版本控制系统，其所有的版本管理都是集中在某个中央服务器，因此，在干活的时候，首先都需要从中央服务器中获取最新的版本，修改后将版本推送到中央服务器，因此大多数场景下需要进行联网使用。可能会更依托于相应的图形化客户端来进行同步和版本管理，便于管理美术资源等等。&lt;/p&gt;
&lt;p&gt;GIT是分布式版本管理系统，每个人的电脑就是一个完整的版本库，可以进行独立的版本管理，多人协作可能依托于github之类的中继节点，将修改同步给对方，解决冲突。&lt;/p&gt;
&lt;h2 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h2&gt;&lt;p&gt;包含ssh的详细指令在ssh的文档中，这边只介绍设置完这一系列操作之后的git初始化，主要是初始化ssh，并将私钥放到github或者gitee的账户中。&lt;br&gt;建议用Pc的名字来做标识&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;git config --global user.name &amp;quot;YourName&amp;quot;&lt;br&gt;git config --global user.email &amp;quot;YourEmailAdress&amp;quot;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;查看相关的配置信息&lt;/span&gt;&lt;br&gt;git config --list&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Github-设置&quot;&gt;&lt;a href=&quot;#Github-设置&quot; class=&quot;headerlink&quot; title=&quot;Github 设置&quot;&gt;&lt;/a&gt;Github 设置&lt;/h3&gt;&lt;p&gt;官方文档介绍的一些权限错误的地址：&lt;a href=&quot;https://docs.github.com/en/github/authenticating-to-github/error-permission-denied-publickey&quot;&gt;https://docs.github.com/en/github/authenticating-to-github/error-permission-denied-publickey&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将本机的ssh公钥(public)放到GITHUB账户下的ssh管理地址，执行测试&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;ssh -T git@github.com&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;没有问题的话就可以直接进行clone，之类的git操作了&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;小trick，不拉取历史的commit&lt;/span&gt;&lt;br&gt;git clone --depth=1 REPO_ADRESS&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="Git" scheme="http://aikenh.cn/categories/Dev/Git/"/>
    
    
    <category term="Git" scheme="http://aikenh.cn/tags/Git/"/>
    
    <category term="Github" scheme="http://aikenh.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Linux 文件传输和同步</title>
    <link href="http://aikenh.cn/cn/Transfer-Sync-Files/"/>
    <id>http://aikenh.cn/cn/Transfer-Sync-Files/</id>
    <published>2022-01-16T19:11:41.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@aikenhong 2022&lt;/p&gt;
&lt;p&gt;当我们需要在Server之间进行，或者Server和WSL之间进行文件的传输，以及文件夹的同步的时候，如果要打开Xftp之类的软件进行，有繁琐的操作中转，或者说目录较为庞杂的时候，也显得有些麻烦。&lt;/p&gt;
&lt;p&gt;于是我们可能希望使用脚本，来实现更便捷，同时也能设置定时功能，使得操作简单便捷，经过简单的调研，我们目前尝试使用以下几种方法，并取得了成功。&lt;/p&gt;
&lt;h2 id=&quot;Rsync-同步目录&quot;&gt;&lt;a href=&quot;#Rsync-同步目录&quot; class=&quot;headerlink&quot; title=&quot;Rsync 同步目录&quot;&gt;&lt;/a&gt;Rsync 同步目录&lt;/h2&gt;&lt;p&gt;rsync是借助ssh服务进行的文件传输，为了使用起来方便，我们首先需要配置免密登录，在服务器之间传输SSH密钥，参考[[Envs/SSH]]&lt;/p&gt;
&lt;p&gt;此后我们便可以编写同步脚本来同步远程的目录和本地目录，当然也可以执行反向的命令，&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;rsync -azP --delete -e &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;ssh -p port&amp;#x27;&lt;/span&gt; --progress --stats --exclude &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;big Files or sth&amp;quot;&lt;/span&gt; user@ip:source_path target_path &amp;gt;transfer.log&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据progress和stats我们记录传输过程中的日志，并输出到transfer.log，同时使用exclude排除大文件，避免传输过慢。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a: 归档文件模式（保留文件的时间戳等），保括了r的递归&lt;br&gt;z: 使用压缩文件传输&lt;br&gt;P: 支持断点续传&lt;br&gt;delete: 会删除目标文件中多出来的东西，保持同步，使得成为远程的镜像，但是有时候我们可能不需要这点，避免同步损毁&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1490094?from=article.detail.1813628&quot;&gt;Ubuntu使用Rsync远程备份&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ruanyifeng.com/blog/2020/08/rsync.html&quot;&gt;阮一峰的rsync详细讲解&lt;/a&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="manual" scheme="http://aikenh.cn/tags/manual/"/>
    
    <category term="SSH" scheme="http://aikenh.cn/tags/SSH/"/>
    
    <category term="Sync Files" scheme="http://aikenh.cn/tags/Sync-Files/"/>
    
  </entry>
  
  <entry>
    <title>IL Collection</title>
    <link href="http://aikenh.cn/cn/IL-Collection/"/>
    <id>http://aikenh.cn/cn/IL-Collection/</id>
    <published>2022-01-03T17:38:04.000Z</published>
    <updated>2023-10-31T00:08:31.637Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong 2022&lt;/p&gt;
&lt;p&gt;[[Draft/IL 总结]]: Thx 2 wyz to provide some clus for learnning Incremental Learning.&lt;/p&gt;
&lt;p&gt;In this Doc, we may add some related knowledge distill works which is used to design our Incremental Structure.&lt;br&gt;在这个文档中，我们可能还会添加一些知识蒸馏的相关工作的文献，这些实际上对于我的增量学习架构有一个比较大的启发&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_36474809/article/details/116176371&quot;&gt;DER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SPPR 没有 get 到方法到底是怎么做的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Introduction-👿&quot;&gt;&lt;a href=&quot;#Introduction-👿&quot; class=&quot;headerlink&quot; title=&quot;Introduction 👿&quot;&gt;&lt;/a&gt;Introduction 👿&lt;/h2&gt;&lt;p&gt;在很多视觉应用中，需要在保留旧知识的基础上学习新知识，==举个例子==，理想的情况是，我们可以保留之前学习的参数，而不发生==灾难性遗忘==，或者我们基于之前的数据进行协同训练，灾难性遗忘是 IL 中最核心的问题。&lt;/p&gt;
&lt;p&gt;Incremental 的基本过程可以表示如下&lt;sub&gt;[4]&lt;/sub&gt;：&lt;br&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/20220106101003.png&quot; alt=&quot;dsa&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们将模型可以划分为以下的两个部分&lt;sub&gt;[1]&lt;/sub&gt;：backbone 和 classifier&lt;br&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20220105213925.png&quot; alt=&quot;split&quot;&gt;&lt;/p&gt;
&lt;p&gt;从 LWF 中我们可以知道经典的 Paradigm，主要有下面的三种来对$&#92;theta _S$ 和$&#92;theta_o$来进行更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅重新训练分类器：仅更新$&#92;theta_o$&lt;/li&gt;
&lt;li&gt;微调特征提取器，重新训练分类器&lt;/li&gt;
&lt;li&gt;联合训练&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20220106111235.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;基于蒸馏架构的方法&quot;&gt;&lt;a href=&quot;#基于蒸馏架构的方法&quot; class=&quot;headerlink&quot; title=&quot;基于蒸馏架构的方法&quot;&gt;&lt;/a&gt;基于蒸馏架构的方法&lt;/h2&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="Incremental Learning" scheme="http://aikenh.cn/tags/Incremental-Learning/"/>
    
  </entry>
  
  <entry>
    <title>WYZ-IL-Collection</title>
    <link href="http://aikenh.cn/cn/IL-WYZ/"/>
    <id>http://aikenh.cn/cn/IL-WYZ/</id>
    <published>2022-01-03T02:41:56.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;: hammer: 王耀智&lt;/p&gt;
&lt;h2 id=&quot;Regularization-系列方法&quot;&gt;&lt;a href=&quot;#Regularization-系列方法&quot; class=&quot;headerlink&quot; title=&quot;Regularization 系列方法&quot;&gt;&lt;/a&gt;Regularization 系列方法&lt;/h2&gt;&lt;p&gt;这类方法旨在添加一些正则化损失来解决 &lt;code&gt;catastrophic forgetting&lt;/code&gt; 的问题。&lt;/p&gt;
&lt;h3 id=&quot;Weight-Regularization&quot;&gt;&lt;a href=&quot;#Weight-Regularization&quot; class=&quot;headerlink&quot; title=&quot;Weight Regularization&quot;&gt;&lt;/a&gt;Weight Regularization&lt;/h3&gt;&lt;p&gt;这类方法一般是对网络中每个参数的重要性进行评估，根据每个参数的重要性和梯度信息更新参数。&lt;/p&gt;
&lt;p&gt;典型的文章为 &lt;a href=&quot;https://www.pnas.org/content/pnas/114/13/3521.full.pdf&quot;&gt;EWC&lt;/a&gt; .&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 这类文章我也没有读过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Data-Regularization&quot;&gt;&lt;a href=&quot;#Data-Regularization&quot; class=&quot;headerlink&quot; title=&quot;Data Regularization&quot;&gt;&lt;/a&gt;Data Regularization&lt;/h3&gt;&lt;p&gt;这类方法专注于记住特征表示，通常是结合 Hinton 的知识蒸馏损失函数使得模型记住旧类别的知识，解决 catastrophic forgetting。&lt;/p&gt;
&lt;p&gt;推荐以下几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LwF&lt;/code&gt;(Learning without forgetting)，这篇文章在我看来是增量学习的开山之作，第一次给增量学习找到了一个比较好的方向，也是第一次将知识蒸馏应用到增量学习上；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2004.13513&quot;&gt;PODNet CVPR2020&lt;/a&gt; ，这篇文章最大的贡献在我看来是设计了一个全新的蒸馏损失函数，最终结果也是达到了当时的sota，甚至目前也是几个榜单的sota。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Rehearsal-系列方法&quot;&gt;&lt;a href=&quot;#Rehearsal-系列方法&quot; class=&quot;headerlink&quot; title=&quot;Rehearsal 系列方法&quot;&gt;&lt;/a&gt;Rehearsal 系列方法&lt;/h2&gt;&lt;p&gt;这类方法主要的想法是使用一些旧类别的数据，在新类别到来时使用新旧数据一起训练模型，根据旧类别数据的真假分为以下两种方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="Incremental Learning" scheme="http://aikenh.cn/tags/Incremental-Learning/"/>
    
  </entry>
  
  <entry>
    <title>LT Collection</title>
    <link href="http://aikenh.cn/cn/LT-Collection/"/>
    <id>http://aikenh.cn/cn/LT-Collection/</id>
    <published>2021-12-22T06:36:16.000Z</published>
    <updated>2023-10-31T00:11:54.338Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;LT-Collections&quot;&gt;&lt;a href=&quot;#LT-Collections&quot; class=&quot;headerlink&quot; title=&quot;LT-Collections&quot;&gt;&lt;/a&gt;LT-Collections&lt;/h1&gt;&lt;p&gt;@AikenHong 2021&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mitming/OpenLT&quot;&gt;Code of must of those methods&lt;/a&gt;&lt;br&gt;We will analysis those tricks on LT situation, and Analysis why it works.&lt;br&gt;在进行LT矫正的任务中，有几种常见的trick在各种模型中被使用，我们会对这几种不同的trick进行介绍和分析。&lt;/p&gt;
&lt;p&gt;其实在数据量少这一方面LT和Few-Shot是有一定的OverLap的,可以参考以下那边的思路perhaps&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/labimg/20211217165531.png&quot; alt=&quot;LT&quot;&gt;&lt;br&gt;通常情况下这种严重的类别不平衡问题会使得模型严重过拟合于头部，而在尾部欠拟合&lt;/p&gt;
&lt;p&gt;首先介绍 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/416315017&quot;&gt;bag of tricks&lt;/a&gt; 这篇论文中总结了一些常用的Trick，并组合出了最佳的一套trick&lt;/p&gt;
&lt;p&gt;经过该文实验总结，Trick组合应该是&lt;sub&gt;[1]`&lt;/sub&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在前几个epoch应用input mixup数据增强，然后后面fine-tuning;&lt;/li&gt;
&lt;li&gt;(基于CAM的)重采样来重新训练分类器;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上就是MixUp + Two-Stage的策略，后续对&lt;strong&gt;Mix-up&lt;/strong&gt;这个策略带来的作用要进行补充了解一下&lt;/p&gt;
&lt;h2 id=&quot;Rebalance&quot;&gt;&lt;a href=&quot;#Rebalance&quot; class=&quot;headerlink&quot; title=&quot;Rebalance&quot;&gt;&lt;/a&gt;Rebalance&lt;/h2&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="Long-Tailed Learning" scheme="http://aikenh.cn/tags/Long-Tailed-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Loss-NCE</title>
    <link href="http://aikenh.cn/cn/Loss-NCE/"/>
    <id>http://aikenh.cn/cn/Loss-NCE/</id>
    <published>2021-12-22T05:39:55.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong 2021&lt;/p&gt;
&lt;p&gt;Noise Contrastive Estimation Loss = NCE Loss 噪声对比估计损失，这里的Noise实际上就是Negative Samples.&lt;br&gt;该损失被广泛的用于对比学习的任务，而对比学习广泛的作为自监督学习的无监督子任务用来训练一个良好的特征提取器，于是对于对比学习的目标和效用的理解十分关键。&lt;/p&gt;
&lt;h2 id=&quot;What’s-NCE-Loss&quot;&gt;&lt;a href=&quot;#What’s-NCE-Loss&quot; class=&quot;headerlink&quot; title=&quot;What’s NCE Loss&quot;&gt;&lt;/a&gt;What’s NCE Loss&lt;/h2&gt;&lt;p&gt;在介绍NCE之前我们可以将其和CE进行一个简单的对比，虽然名称上不是同一个CE，但是在数学表达上却有很相近的地方（softmax-kind of loss）&lt;/p&gt;
&lt;p&gt;首先softmax，他保证所有的值加起来为一，结合onehot的ce，实际上&lt;code&gt;j==gt&lt;/code&gt;的情况下外层+log也就是ceLoss，也就是 $logSoftmax$&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
S_j = &#92;frac{e^{a_j}}{&#92;sum_{k=1}^N e^{a_k}}&lt;/script&gt;&lt;p&gt;然后看infoNCE，基础的对比学习损失可以写成：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
L_{contrast} = &#92;mathbb{E}[-&#92;log&#92;frac{e^{f_x^T f_y/T}}{e^{f_x^T f_y/T} + &#92;sum_i e^{f_x^T f_{y_-^i}/T}}]&lt;/script&gt;&lt;p&gt;其中 $f_x^T f_y^T$ 为 $sim(x,y)$ 时即转化为带$T$的NCE，即InforNCE.&lt;/p&gt;
&lt;p&gt;分子是正例对的相似度，分母是正例对+所有负例对的相似度，最小化infoNCE loss，就是去最大化分子的同时最小化分母，也就是最大化正例对的相似度，最小化负例对的相似度。&lt;/p&gt;
&lt;p&gt;从该形式上看，和soft的CE形式上是统一的，当我们把分母看作概率和自身以及和其他的相似性，这样和NCE在形式上和简化后的CE实现了统一。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是我不认为这和label smooth 后的CE有相关性，而是和原始的CE经由One-hot简化后结构上有相似性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;How-it-Works&quot;&gt;&lt;a href=&quot;#How-it-Works&quot; class=&quot;headerlink&quot; title=&quot;How it Works&quot;&gt;&lt;/a&gt;How it Works&lt;/h2&gt;&lt;p&gt;NCE的思想是&lt;strong&gt;拉近相似的样本，推开不相近的样本&lt;/strong&gt;，从而学习到一个好的&lt;strong&gt;语义表示空间&lt;/strong&gt;，这一点上实际上和度量学习的思想是一样的，只是对比学习通常作用在无监督或者自监督的语境中，度量学习这是有监督的。&lt;/p&gt;
&lt;p&gt;考虑之前人脸匹配的研究，使用 “Alignment and Uniformity on the Hypersphere”中的Alignment and Uniformity，就是一个更好理解他的角度&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Loss" scheme="http://aikenh.cn/tags/Loss/"/>
    
  </entry>
  
  <entry>
    <title>Loss-Smooth(Sharpen)</title>
    <link href="http://aikenh.cn/cn/Loss-SmoothSharpen/"/>
    <id>http://aikenh.cn/cn/Loss-SmoothSharpen/</id>
    <published>2021-12-16T19:35:27.000Z</published>
    <updated>2023-10-31T00:11:42.791Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong 2021&lt;br&gt;@topic&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;smooth label (inception v2)&lt;/li&gt;
&lt;li&gt;when does label smoothing help (nips 2019) &lt;/li&gt;
&lt;li&gt;sharpen in semi-supervised in the future &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/seominseok0429/label-smoothing-visualization-pytorch?utm_source=catalyzex.com&quot;&gt;offical code github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不是一个通用的方法，在很多的任务上反而会导致掉点的现象，可以简单分析一下，汲取一下思想和Sharpen做对比，在这篇文章中，我们可以结合之前的人脸对比损失来进行分析。&lt;/p&gt;
&lt;h2 id=&quot;What’s-the-smooth-label&quot;&gt;&lt;a href=&quot;#What’s-the-smooth-label&quot; class=&quot;headerlink&quot; title=&quot;What’s the smooth label&quot;&gt;&lt;/a&gt;What’s the smooth label&lt;/h2&gt;&lt;p&gt;首先介绍在图像分类任务中对logits和Hard label做ce得到我们的损失，可以表现为如下的形式：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
Loss = -&#92;sum^{K}_{i=1}p_i &#92;log(q_i)&lt;/script&gt;&lt;p&gt;由于我们的标签是一个hard label，实际上可以转化成一个one-hot，即&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
&#92;begin{equation}
p_i = &#92;left&#92;{
&#92;begin{array}{c1}
1 &amp; i==gt &#92;&#92;
0 &amp; i!=gt &#92;&#92;
&#92;end{array} &#92;right.
&#92;end{equation}&lt;/script&gt;&lt;p&gt;而soft label实际上做的是将 1的位置变为$1-&#92;alpha$，其他位置设置为$&#92;alpha/(K-1)$，然后再去求CE，&lt;/p&gt;
&lt;p&gt;Hinton论文中给出该损失对特征分布的作用测试图：&lt;br&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/labimg/20211216194040.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Loss" scheme="http://aikenh.cn/tags/Loss/"/>
    
  </entry>
  
  <entry>
    <title>Training Strategy</title>
    <link href="http://aikenh.cn/cn/NerualNetworkTraining/"/>
    <id>http://aikenh.cn/cn/NerualNetworkTraining/</id>
    <published>2021-12-16T00:34:44.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2020，&lt;/p&gt;
&lt;p&gt;主要针对神经网络的训练过程中的一些基础策略的调整，比如当训练的曲线出现一定的问题的时候，我们应该怎么去调整我们训练过程中的策略。&lt;/p&gt;
&lt;p&gt;参数调整过程中最重要的就是优化器（优化或者说是下降算法）和学习率（优化算法的核心参数），此外像是数据增强策略还是Normalization策略，都能极大的影响一个模型的好坏。&lt;/p&gt;
&lt;h2 id=&quot;优化器&quot;&gt;&lt;a href=&quot;#优化器&quot; class=&quot;headerlink&quot; title=&quot;优化器&quot;&gt;&lt;/a&gt;优化器&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://wizardforcel.gitbooks.io/learn-dl-with-pytorch-liaoxingyu/content/&quot;&gt;Some Material&lt;/a&gt;&lt;br&gt;实际上虽然有很多的优化算法，但是到最后最常用的还是 SGD+Mon 和 Adam两种：&lt;/p&gt;
&lt;p&gt;Adam主要的有事在于自适应学习率，他对我们设计的学习率实际上没有那么敏感，但是在具体实验中往往不会有调的好的SGD那么好，只是在SGD的参数调整中会比较费劲。&lt;/p&gt;
&lt;p&gt;但是有了根据patient调整lr的scheduler后，我们基本上可以使用SGD做一个较为简单的调整，只要设计好初始的lr的实验以及用来调整学习率的参数值。&lt;/p&gt;
&lt;h2 id=&quot;学习率&quot;&gt;&lt;a href=&quot;#学习率&quot; class=&quot;headerlink&quot; title=&quot;学习率&quot;&gt;&lt;/a&gt;学习率&lt;/h2&gt;&lt;p&gt;$&#92;omega^{n} &#92;leftarrow &#92;omega^{n}-&#92;eta &#92;frac{&#92;partial L}{&#92;partial &#92;omega^{n}}$ 其中的权重就是学习率lr，&lt;/p&gt;
&lt;p&gt;==Basic==&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;学习率大&lt;/th&gt;
&lt;th&gt;学习率小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;学习速度&lt;/td&gt;
&lt;td&gt;快&lt;/td&gt;
&lt;td&gt;慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用情景&lt;/td&gt;
&lt;td&gt;刚开始训练时&lt;/td&gt;
&lt;td&gt;一定的次数过后&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;副作用&lt;/td&gt;
&lt;td&gt;1. Loss爆炸 2.振荡&lt;/td&gt;
&lt;td&gt;1.过拟合 2.收敛速度慢&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&quot;学习率的基本设置&quot;&gt;&lt;a href=&quot;#学习率的基本设置&quot; class=&quot;headerlink&quot; title=&quot;学习率的基本设置&quot;&gt;&lt;/a&gt;学习率的基本设置&lt;/h3&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Pytorch" scheme="http://aikenh.cn/tags/Pytorch/"/>
    
    <category term="Acceleration" scheme="http://aikenh.cn/tags/Acceleration/"/>
    
  </entry>
  
  <entry>
    <title>PyTorch Handbook 00 （Archive）</title>
    <link href="http://aikenh.cn/cn/PyTorch/"/>
    <id>http://aikenh.cn/cn/PyTorch/</id>
    <published>2021-12-15T00:00:57.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Basic-Part基础设定部分&quot;&gt;&lt;a href=&quot;#Basic-Part基础设定部分&quot; class=&quot;headerlink&quot; title=&quot;Basic Part基础设定部分&quot;&gt;&lt;/a&gt;Basic Part基础设定部分&lt;/h1&gt;&lt;p&gt;@AikenH 2020 + 2021&lt;/p&gt;
&lt;p&gt;this part is about pytorch basic unit, help me to code deep learning better.&lt;/p&gt;
&lt;h2 id=&quot;Tensor张量计算&quot;&gt;&lt;a href=&quot;#Tensor张量计算&quot; class=&quot;headerlink&quot; title=&quot;Tensor张量计算&quot;&gt;&lt;/a&gt;Tensor张量计算&lt;/h2&gt;&lt;h3 id=&quot;两个tensor的数乘&quot;&gt;&lt;a href=&quot;#两个tensor的数乘&quot; class=&quot;headerlink&quot; title=&quot;两个tensor的数乘&quot;&gt;&lt;/a&gt;两个tensor的数乘&lt;/h3&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Pytorch" scheme="http://aikenh.cn/categories/Langs/Pytorch/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Pytorch" scheme="http://aikenh.cn/tags/Pytorch/"/>
    
  </entry>
  
  <entry>
    <title>Loss-WhyZero</title>
    <link href="http://aikenh.cn/cn/Loss-WhyZero/"/>
    <id>http://aikenh.cn/cn/Loss-WhyZero/</id>
    <published>2021-12-10T00:24:46.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Loss-Why-Zero-Loss？&quot;&gt;&lt;a href=&quot;#Loss-Why-Zero-Loss？&quot; class=&quot;headerlink&quot; title=&quot;Loss :Why Zero Loss？&quot;&gt;&lt;/a&gt;Loss :Why Zero Loss？&lt;/h1&gt;&lt;p&gt;@Comments: ICML2020 《Do We Need Zero Training Loss After Achieving Zero Training Error》&lt;/p&gt;
&lt;p&gt;@Noteby：AikenHong2021&lt;/p&gt;
&lt;p&gt;如何解决训练损失下降，但是验证损失上升的问题（过拟合like）的问题，该文章实际上可以作为我们损失设计中的一个trick，只需要简单的一行代码，来提升代码的泛化能力；&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211026211602.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;这张图体现了本文的灵魂（思路），主要体现在我们在算法趋于稳定后继续训练可能验证损失会反而上升；&lt;/p&gt;
&lt;p&gt;所以本文提出了一种flooding方法，当我们training loss 大于阈值的时候我们使其正常下降，当低于阈值的时候，flooding的设计会反过来使得梯度上升，让训练损失保持在flooding附近，让模型持续进行random walk，希望模型最终能优化到一个平坦的损失区域，这样发现test loss进一步的进行下降。&lt;/p&gt;
&lt;p&gt;理解：&lt;/p&gt;
&lt;p&gt;当我们的训练损失低到一定的程度，然后随着lr的下降，模型会很难跳出当前的极小值，这种情况下我们的泛化能力也会被限制住，采用这种方法在牺牲测试精度的同时能提升算法的泛化能力。&lt;/p&gt;
&lt;p&gt;损失公式表示如下&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
&#92;widetilde{J}(&#92;theta) = |J(&#92;theta) - b| +b&lt;/script&gt;&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211027104636.jpg&quot; alt=&quot;v2-084a8f00d7349a94540fc7ad3a9433b0_r&quot;&gt;&lt;/p&gt;
&lt;p&gt;具体的代码表示只需要添加一层：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;b = the flood num &lt;br&gt;new_loss = (loss - b).&lt;span class=&quot;hljs-built_in&quot;&gt;abs&lt;/span&gt;() + b&lt;br&gt;optimizer.zero_grad()&lt;br&gt;new_loss.backward()&lt;br&gt;optimizer.step()&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Loss" scheme="http://aikenh.cn/tags/Loss/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm Sort</title>
    <link href="http://aikenh.cn/cn/SortTrick/"/>
    <id>http://aikenh.cn/cn/SortTrick/</id>
    <published>2021-12-06T09:05:03.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;记录各种排序操作，暂时不补充最基础的排序方式和理论，只记录排序算法的拓展应用。&lt;/p&gt;
&lt;p&gt;在理论分析的部分主要使用cpp进行撰写，而在具体使用的时候，目前会主要按照python来进行编写，这主要是面向的场景不同决定的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基础的排序理论，包括快排等等算法的分析在另一篇文章中记录（当初实习准备的时候有整理过，后续重新整理出来）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;排序算法和理论&quot;&gt;&lt;a href=&quot;#排序算法和理论&quot; class=&quot;headerlink&quot; title=&quot;排序算法和理论&quot;&gt;&lt;/a&gt;排序算法和理论&lt;/h2&gt;&lt;p&gt;placeholder&lt;/p&gt;
&lt;h2 id=&quot;排序算法应用&quot;&gt;&lt;a href=&quot;#排序算法应用&quot; class=&quot;headerlink&quot; title=&quot;排序算法应用&quot;&gt;&lt;/a&gt;排序算法应用&lt;/h2&gt;&lt;p&gt;placeholder&lt;/p&gt;
&lt;h3 id=&quot;同步排序&quot;&gt;&lt;a href=&quot;#同步排序&quot; class=&quot;headerlink&quot; title=&quot;同步排序&quot;&gt;&lt;/a&gt;同步排序&lt;/h3&gt;&lt;p&gt;常用于Machine Learning中，将数据集中的数据和标签进行同步排序，避免打乱其中的对应关系。&lt;/p&gt;
&lt;p&gt;使用numpy的 &lt;code&gt;argsort&lt;/code&gt;功能来进行排序：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;idx = np.argsort(labels)&lt;br&gt;labels = labels[idx]&lt;br&gt;datas = datas[idx,...]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Sort" scheme="http://aikenh.cn/tags/Sort/"/>
    
  </entry>
  
  <entry>
    <title>UniFramework 01</title>
    <link href="http://aikenh.cn/cn/UniFramework/"/>
    <id>http://aikenh.cn/cn/UniFramework/</id>
    <published>2021-12-03T17:43:30.000Z</published>
    <updated>2023-10-31T00:28:20.614Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>Hungarian</title>
    <link href="http://aikenh.cn/cn/Hungarian/"/>
    <id>http://aikenh.cn/cn/Hungarian/</id>
    <published>2021-12-02T16:29:37.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong 2021&lt;br&gt;@Code: &lt;strong&gt;Scipy&lt;/strong&gt;（repo）&lt;br&gt;@Reference:  &lt;a href=&quot;https://zhuanlan.zhihu.com/p/62981901&quot;&gt;匈牙利算法&amp;amp;KM算法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该篇笔记用来介绍匈牙利算法和KM算法(Kuhn-Munkres Algorithm)，这两个算法通常用来做目标之间的匹配问题。&lt;br&gt;常用于：多目标跟踪，和深度聚类中的标签匹配问题。&lt;/p&gt;
&lt;h2 id=&quot;Method&quot;&gt;&lt;a href=&quot;#Method&quot; class=&quot;headerlink&quot; title=&quot;Method&quot;&gt;&lt;/a&gt;Method&lt;/h2&gt;&lt;p&gt;这两种方法实际上解决的问题都是： 二分图的最大匹配问题；&lt;br&gt;首先需要对二分图有个基本的了解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/labimg/20211202164156.png&quot; alt=&quot;二分图&quot;&gt;&lt;/p&gt;
&lt;p&gt;实际上就是将数据分为两组，各组的每一个点都去另一个组找对应的匹配，我们希望将两组中，相关的数据尽可能的准确的匹配起来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以想象成，是同一个数据在不同的映射下的不同表征需要做这样的匹配关系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决这种问题的方式就是使用匈牙利算法或者KM算法&lt;/p&gt;
&lt;h3 id=&quot;匈牙利算法&quot;&gt;&lt;a href=&quot;#匈牙利算法&quot; class=&quot;headerlink&quot; title=&quot;匈牙利算法&quot;&gt;&lt;/a&gt;匈牙利算法&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;匈牙利算法是一种在多项式时间内求解任务分配问题的组合优化算法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;匈牙利算法可以将二分图中的连线，看成是我们认为可能是相同的目标（不带权值），实际上就是从上到下假想成立，然后进行唯一匹配的搜索，有点像BackTrack的过程。&lt;/p&gt;
&lt;p&gt;整体算法的成功率或者准确率实际上十分依赖与连线的准确率，对算法输出预测的准确度要求更高。&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Matching" scheme="http://aikenh.cn/tags/Matching/"/>
    
  </entry>
  
  <entry>
    <title>Cherno的cpp教程笔记</title>
    <link href="http://aikenh.cn/cn/Cpp/"/>
    <id>http://aikenh.cn/cn/Cpp/</id>
    <published>2021-11-29T05:12:17.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;this notebook is based on Cherno‘s Video Class in &lt;a href=&quot;https://www.youtube.com/watch?v=wXBcwHwIt_I&amp;amp;list=PLlrATfBNZ98dudnM48yfGUldqGD0S4FFb&amp;amp;index=62&amp;amp;ab_channel=TheCherno&quot;&gt;YouTube&lt;/a&gt;；if there is sth get confused，I can &lt;strong&gt;recheck&lt;/strong&gt; the video which talk about it, or &lt;strong&gt;just google it&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this is not totally for newbie, so some basic information we should search it&lt;/li&gt;
&lt;li&gt;And this is a important &lt;a href=&quot;https://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5&quot;&gt;websize&lt;/a&gt; to tell us basic info about C++.&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Cpp" scheme="http://aikenh.cn/categories/Langs/Cpp/"/>
    
    
    <category term="Cpp" scheme="http://aikenh.cn/tags/Cpp/"/>
    
  </entry>
  
  <entry>
    <title>Survey for Few-Shot Learning</title>
    <link href="http://aikenh.cn/cn/FSL-Collection/"/>
    <id>http://aikenh.cn/cn/FSL-Collection/</id>
    <published>2021-11-29T05:12:05.000Z</published>
    <updated>2023-10-31T00:06:15.654Z</updated>
    
    
    <summary type="html">&lt;p&gt;@aikenhong 2020&lt;br&gt;@h.aiken.970@gmail.com&lt;/p&gt;
&lt;p&gt;另一个综述文章：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/61215293&quot;&gt;https://zhuanlan.zhihu.com/p/61215293&lt;/a&gt;&lt;br&gt;对该文中一些内容有一些补充，可以看看&lt;/p&gt;
&lt;p&gt;FSL简介：&lt;a href=&quot;https://blog.csdn.net/xhw205/article/details/79491649&quot;&gt;https://blog.csdn.net/xhw205/article/details/79491649&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GCN用于FSL：&lt;a href=&quot;https://blog.csdn.net/qq_36022260/article/details/93753532&quot;&gt;https://blog.csdn.net/qq_36022260/article/details/93753532&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract&quot;&gt;&lt;/a&gt;Abstract&lt;/h2&gt;&lt;p&gt;FSL的根本目的就是弥合人工智能和人类之间的鸿沟，从少量带有监督信息的示例中学习。像人类一样有很高的泛化能力。这也能解决在实际应用场景中，数据难以收集或者大型数据难以建立的情景。&lt;/p&gt;
&lt;p&gt;FSL的&lt;strong&gt;核心问题&lt;/strong&gt;是：经验风险最小化器不可靠；那么如何&lt;strong&gt;使用先验知识&lt;/strong&gt;去解决这个问题？&lt;/p&gt;
&lt;p&gt;三个主要的角度：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据：使用先验知识增强数据的监督经验&lt;/li&gt;
&lt;li&gt;模型：使用先验知识来降低假设空间&lt;/li&gt;
&lt;li&gt;算法：使用先验知识来改变搜索最佳假设（来进行搜索？)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现阶段针对FSL提出的一些相关的机器学习方法：&lt;br&gt;&lt;code&gt;meta-learning;&lt;/code&gt; &lt;code&gt;embedding learning;&lt;/code&gt;  &lt;code&gt;generative modeling etc.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文的主要工作：&lt;/strong&gt;&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="FSL" scheme="http://aikenh.cn/tags/FSL/"/>
    
  </entry>
  
  <entry>
    <title>FSL前期调研</title>
    <link href="http://aikenh.cn/cn/FSL%E5%89%8D%E6%9C%9F%E8%B0%83%E7%A0%94/"/>
    <id>http://aikenh.cn/cn/FSL%E5%89%8D%E6%9C%9F%E8%B0%83%E7%A0%94/</id>
    <published>2021-11-29T05:12:05.000Z</published>
    <updated>2023-10-31T00:06:43.838Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="FSL" scheme="http://aikenh.cn/tags/FSL/"/>
    
  </entry>
  
  <entry>
    <title>IL-MgSvF</title>
    <link href="http://aikenh.cn/cn/IL-MgSvF/"/>
    <id>http://aikenh.cn/cn/IL-MgSvF/</id>
    <published>2021-11-29T05:12:05.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Author &amp;amp; Paper：&lt;a href=&quot;https://arxiv.org/pdf/2006.15524.pdf&quot;&gt;Arxiv&lt;/a&gt;&lt;br&gt;@Note：Aikenhong 2021/11/12&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/cp_oldy/article/details/111714896&quot;&gt;Other’s Note 1 &lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;旧知识的缓慢忘记和新知识的快速适应的困境&lt;/strong&gt;：主要探讨Incremental中的Old和New的相互牵制和适应的问题，&lt;/p&gt;
&lt;p&gt;旧知识的缓慢遗忘会导致对新任务的欠拟合，而快速适应会导致灾难性的遗忘，如何对这两种策略之间进行权衡，是一个重要的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20211112114701.png&quot; alt=&quot;image-20211112110043089&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多尺度混合&lt;/strong&gt;的解决这个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intra-space： 新类别的特征在同一个特征空间中&lt;/li&gt;
&lt;li&gt;inter-saoce：新旧类别的特征在不同的特征空间中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文提出的&lt;strong&gt;多粒度策略&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提出了一种频率感知的正则化操作，加速空间内的增量学习能力&lt;/li&gt;
&lt;li&gt;新的特征空间组合操作，提升空间间的学习性能</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Incremental Learning" scheme="http://aikenh.cn/tags/Incremental-Learning/"/>
    
  </entry>
  
  <entry>
    <title>SSL-MoCov3</title>
    <link href="http://aikenh.cn/cn/SSL-MoCov3/"/>
    <id>http://aikenh.cn/cn/SSL-MoCov3/</id>
    <published>2021-11-29T05:12:05.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;@Aiken 2021 &lt;/p&gt;
&lt;p&gt;恺明大神对自监督学习+transformer的实证研究，针对Transformer再自监督学习学习框架中的训练不稳定问题提出了&lt;strong&gt;Random Patch</summary>
        
      
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>python 与标记语言的交互</title>
    <link href="http://aikenh.cn/cn/Markup_Langs/"/>
    <id>http://aikenh.cn/cn/Markup_Langs/</id>
    <published>2021-11-28T03:16:10.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;对于各种形式的标记文档（markup）和数据集的处理进行一个整合，还有一些python中的相关模块（比比如glob，后续可能会迁移到别的文档中），主要包括：yaml，json，csv，xml，这些可拓展的标记语言.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TODO：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] csv,xml：这一部分可以看一下吉仲师兄那边是怎么存和取文件的，继承一下代码减少我这一部分的工作量&lt;/li&gt;
&lt;li&gt;[ ] 按照csv文件对数据集进行本地的文件夹切分。实际上很多数据集，像mini-imageNet这类的是需要我们下载下来之后按照csv文件对训练集和测试集进行切分的&lt;/li&gt;
&lt;li&gt;[ ] 使用sklearn对完整的未切分数据进行切分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Python-Glob&quot;&gt;&lt;a href=&quot;#Python-Glob&quot; class=&quot;headerlink&quot; title=&quot;Python: Glob&quot;&gt;&lt;/a&gt;Python: Glob&lt;/h2&gt;&lt;p&gt;文件操作相关模块，用于简单的路径匹配的模块，用来查找路径中的相关文件，基本的正则匹配规则如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“*”: 匹配0哥或多个字符&lt;/p&gt;
&lt;p&gt;“?” : 匹配单个字符&lt;/p&gt;
&lt;p&gt;“[ ]”: 匹配指定范围内的字符,如[0-9]匹配所有的数字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;glob-glob&quot;&gt;&lt;a href=&quot;#glob-glob&quot; class=&quot;headerlink&quot; title=&quot;glob.glob:&quot;&gt;&lt;/a&gt;glob.glob:&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;返回所有匹配的路径列表&lt;/strong&gt;,只有一个参数pathname,定一乐文件路径的匹配规则,可以是绝对路径或者是相对路径,具体的使用可以参考如下的方式:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; xmlpath &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; glob.glob(&lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;media/all/DATAPART/&amp;#x27;&lt;/span&gt; + &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# xmlpath 遍历文件夹下的所有文件和文件夹&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; xmlpath &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; glob.glob(xmlpath + &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;/*/*&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# xmlpath 遍历文件夹下所有文件夹中的文件夹中的文件:按照层数自由设定&lt;/span&gt;&lt;br&gt;&lt;br&gt;img_path = &lt;span class=&quot;hljs-built_in&quot;&gt;sorted&lt;/span&gt;(glob.glob(os.path.join(images, &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;*.npy&amp;#x27;&lt;/span&gt;)))&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 遍历文件夹下的所有npy文件,说实话感觉这个怪离谱的,晚点试一下&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; glob &lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;print&lt;/span&gt;(glob.glob(&lt;span class=&quot;hljs-string&quot;&gt;r&amp;quot;E:/imgdir/*/*.jpg&amp;quot;&lt;/span&gt;))&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
  </entry>
  
  <entry>
    <title>C++的常见数据类型和操作</title>
    <link href="http://aikenh.cn/cn/CPP%E8%A6%81%E7%82%B9%E8%BE%A8%E6%9E%90%E4%B8%8E%E8%A1%A5%E5%85%85/"/>
    <id>http://aikenh.cn/cn/CPP%E8%A6%81%E7%82%B9%E8%BE%A8%E6%9E%90%E4%B8%8E%E8%A1%A5%E5%85%85/</id>
    <published>2021-11-27T22:24:23.000Z</published>
    <updated>2023-10-31T00:03:52.543Z</updated>
    
    
    <summary type="html">&lt;p&gt;主要介绍一些常用数据类型的一些method，区别还有一些特殊的定义；&lt;/p&gt;
&lt;p&gt;priority_queue 默认是大顶堆，great的话是小顶堆，less的话是大顶堆，自定义的话不知道是不是一致的&lt;/p&gt;
&lt;p&gt;set默认top是小顶，这个大小我就不知道了，自定义的话，好像和我想得是一致的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所有的动态容器都是存放在heap上的，像是什么Vector，String，unordered_map之类的&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;指定精度的输出和计算&quot;&gt;&lt;a href=&quot;#指定精度的输出和计算&quot; class=&quot;headerlink&quot; title=&quot;指定精度的输出和计算&quot;&gt;&lt;/a&gt;指定精度的输出和计算&lt;/h2&gt;&lt;p&gt;在腾讯的笔试中出现的需要指定精度和指定的计算精度的分析，在使用常数的时候一定要使用.0去修正一个方法。&lt;/p&gt;
&lt;h2 id=&quot;Vector-动态数组&quot;&gt;&lt;a href=&quot;#Vector-动态数组&quot; class=&quot;headerlink&quot; title=&quot;Vector 动态数组&quot;&gt;&lt;/a&gt;Vector 动态数组&lt;/h2&gt;&lt;p&gt;Vector中的一些常用的函数，方法，以及一些属性介绍和辨析&lt;/p&gt;
&lt;h3 id=&quot;emplace-back-amp-push-back（在末尾添加元素）&quot;&gt;&lt;a href=&quot;#emplace-back-amp-push-back（在末尾添加元素）&quot; class=&quot;headerlink&quot; title=&quot;emplace_back &amp;amp; push_back（在末尾添加元素）&quot;&gt;&lt;/a&gt;emplace_back &amp;amp; push_back（在末尾添加元素）&lt;/h3&gt;&lt;p&gt;&lt;code&gt;empalce_back&lt;/code&gt;直接在数组的末尾进行构造，而&lt;code&gt;push_back&lt;/code&gt;借助于构造的临时变量再将其加入数组末尾，所以在一些操作中&lt;code&gt;empalce_back&lt;/code&gt;对于空间时间的效率是会更高的，但是如果我们有重复构筑的数据的话，可能就需要使用&lt;code&gt;push_back&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;要注意实际上vector中并&lt;strong&gt;没有&lt;/strong&gt;append的方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Cpp" scheme="http://aikenh.cn/categories/Langs/Cpp/"/>
    
    
    <category term="Cpp" scheme="http://aikenh.cn/tags/Cpp/"/>
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
  </entry>
  
  <entry>
    <title>（转）What the Fuck Python！ 一些python特性</title>
    <link href="http://aikenh.cn/cn/PythonTips/"/>
    <id>http://aikenh.cn/cn/PythonTips/</id>
    <published>2021-11-27T22:24:23.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p align=&quot;center&quot;&gt;&lt;img src=&quot;/images/logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 align=&quot;center&quot;&gt;What the f*ck Python! 🐍&lt;/h1&gt;
&lt;p align=&quot;center&quot;&gt;一些有趣且鲜为人知的 Python 特性.&lt;/p&gt;

&lt;p&gt;&lt;p align=&quot;center&quot;&gt;
&lt;a href=&quot;https://github.com/satwikkansal/wtfpython&quot;&gt;English&lt;/a&gt;
| &lt;a href=&quot;#&quot;&gt;中文&lt;/a&gt;
&lt;/p&gt;&lt;br&gt;&lt;a href=&quot;http://www.wtfpl.net&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square&quot; alt=&quot;WTFPL 2.0&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://github.com/satwikkansal/wtfpython/commit/30e05a5973930c38cdb59f1c02b85b19b22ac531&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/Commit-30e05a-yellow.svg&quot; alt=&quot;Commit id&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://996.icu&quot;&gt;&lt;img src=&quot;https://img.shields.io/badge/link-996.icu-red.svg&quot; alt=&quot;996.icu&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, 是一个设计优美的解释型高级语言, 它提供了很多能让程序员感到舒适的功能特性. 但有的时候, Python 的一些输出结果对于初学者来说似乎并不是那么一目了然.&lt;/p&gt;
&lt;p&gt;这个有趣的项目意在收集 Python 中那些难以理解和反人类直觉的例子以及鲜为人知的功能特性, 并尝试讨论这些现象背后真正的原理!&lt;/p&gt;
&lt;p&gt;虽然下面的有些例子并不一定会让你觉得 WTFs, 但它们依然有可能会告诉你一些你所不知道的 Python 有趣特性.  我觉得这是一种学习编程语言内部原理的好办法, 而且我相信你也会从中获得乐趣!&lt;/p&gt;
&lt;p&gt;如果您是一位经验比较丰富的 Python 程序员, 你可以尝试挑战看是否能一次就找到例子的正确答案. 你可能对其中的一些例子已经比较熟悉了, 那这也许能唤起你当年踩这些坑时的甜蜜回忆 :sweat_smile:&lt;/p&gt;
&lt;p&gt;PS: 如果你不是第一次读了, 你可以在&lt;a href=&quot;https://github.com/satwikkansal/wtfpython/releases/&quot;&gt;这里&lt;/a&gt;获取变动内容.&lt;/p&gt;
&lt;p&gt;那么, 让我们开始吧…&lt;br&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
  </entry>
  
  <entry>
    <title>Linux 基础操作 01</title>
    <link href="http://aikenh.cn/cn/Linux/"/>
    <id>http://aikenh.cn/cn/Linux/</id>
    <published>2021-11-27T22:24:21.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;学习资源汇总&quot;&gt;&lt;a href=&quot;#学习资源汇总&quot; class=&quot;headerlink&quot; title=&quot;学习资源汇总&quot;&gt;&lt;/a&gt;学习资源汇总&lt;/h2&gt;&lt;p&gt;manual：&lt;a href=&quot;https://www.runoob.com/w3cnote/linux-common-command-2.html&quot;&gt;菜鸟Shell&lt;/a&gt; | &lt;a href=&quot;https://www.explainshell.com/explain/1/ps&quot;&gt;ExplainShell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;收录一些Linux的工具书以及相关的OnLine-Doc，方便后续进行学习和查阅：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://cn.linux.vbird.org/linux_basic/linux_basic.php&quot;&gt;鸟哥的Linux私房菜&lt;/a&gt;：相对全面一点但是内容有点太多了&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linuxprobe.com/chapter-00.html&quot;&gt;Linux就该这么学&lt;/a&gt;：从开始到结束的流程挺完善的，但是这个网站做的是纯傻逼&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html#&quot;&gt;Linux Tools Quick Tutorial&lt;/a&gt;：简单入门教程好像是&lt;/li&gt;
&lt;li&gt;Linux命令行于Shell脚本编程大全：本地PDF，在当前文件夹下面进行查看&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;文件架构-amp-系统信息&quot;&gt;&lt;a href=&quot;#文件架构-amp-系统信息&quot; class=&quot;headerlink&quot; title=&quot;文件架构&amp;amp;系统信息&quot;&gt;&lt;/a&gt;文件架构&amp;amp;系统信息&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/sijizhen/p/10576049.html&quot;&gt;Linux各文件夹的含义&lt;/a&gt;分析LInux下的文件架构体系，包括最外层的一些系统文件夹的基础作用以及对应的特殊功能等等，帮助我们能够更清楚我们文件的存储体系以及系统文件的存储地址。&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="http://aikenh.cn/categories/Linux/"/>
    
    
    <category term="Linux" scheme="http://aikenh.cn/tags/Linux/"/>
    
    <category term="manual" scheme="http://aikenh.cn/tags/manual/"/>
    
  </entry>
  
  <entry>
    <title>Data Augmentation</title>
    <link href="http://aikenh.cn/cn/DataAugmentation/"/>
    <id>http://aikenh.cn/cn/DataAugmentation/</id>
    <published>2021-11-27T22:24:20.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;intergrate with those augmentation method.&lt;/p&gt;
&lt;p&gt;this doc will&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Record those theory and the effect after transformation&lt;/li&gt;
&lt;li&gt;Show the codes for ez use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the complete &lt;code&gt;.py&lt;/code&gt; will be intergrate in my classification pipeline&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;reference&lt;/strong&gt; below:arrow_down_small:, if use them,start it for respect for his work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aleju/imgaug#documentation&quot;&gt;aleju/imgaug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;:star:&lt;a href=&quot;https://github.com/albumentations-team/albumentations&quot;&gt;albumentations-team/albumentations: &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pytorch.org/vision/stable/transforms.html#transforms-on-pil-image-and-torch-tensor&quot;&gt;torchvision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pillow.readthedocs.io/en/stable/reference/ImageEnhance.html&quot;&gt;PIL/ImageEnhance CCBS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;opencv&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Principle&quot;&gt;&lt;a href=&quot;#Principle&quot; class=&quot;headerlink&quot; title=&quot;Principle&quot;&gt;&lt;/a&gt;Principle&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Principle 1&lt;/strong&gt; of coding: Don’t reinvent the wheel unless it’s needed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具体而言，仅在函数的拓展性较差，无法对其定制化，满足我们的日常需求的时候，我们会自行编写函数从而满足我们的需求，否则我们直接引用已知的库，提升我们的实现效率。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Augmentation" scheme="http://aikenh.cn/tags/Augmentation/"/>
    
    <category term="Pytorch" scheme="http://aikenh.cn/tags/Pytorch/"/>
    
  </entry>
  
  <entry>
    <title>MLFlow</title>
    <link href="http://aikenh.cn/cn/MLFlow/"/>
    <id>http://aikenh.cn/cn/MLFlow/</id>
    <published>2021-11-27T22:24:19.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;MLFlow-机器学习系统的使用&quot;&gt;&lt;a href=&quot;#MLFlow-机器学习系统的使用&quot; class=&quot;headerlink&quot; title=&quot;MLFlow 机器学习系统的使用&quot;&gt;&lt;/a&gt;MLFlow 机器学习系统的使用&lt;/h1&gt;&lt;p&gt;@Aiken 2020&lt;/p&gt;
&lt;p&gt;&lt;em&gt;基于Python开发的DAG数据工作流系统，面向机器学习，支持Spark并行环境和K8S容器集群；&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;MLFlow主要解决了三个问题，也就是三个我们可能会需要使用的功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Tracking&lt;/strong&gt;：跟踪实验训练结果，记录算法参数，模型结果和运行效果等等；&lt;/li&gt;
&lt;li&gt;Projects：对所有的算法项目有一套标准的projects概念，记录下代码版本，参数和运行环境这些东西，并且projects是可以拟合所有的算法框架的；&lt;/li&gt;
&lt;li&gt;Models：解决的是打包和部署模型的这样一个行为，提供json接口给后续的flsk框架等等进行使用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;基本部署&quot;&gt;&lt;a href=&quot;#基本部署&quot; class=&quot;headerlink&quot; title=&quot;基本部署&quot;&gt;&lt;/a&gt;基本部署&lt;/h2&gt;&lt;p&gt;INSTALL：&lt;/p&gt;
&lt;p&gt;DEPLOY：&lt;/p&gt;
&lt;h2 id=&quot;Tracking-实验版本跟踪&quot;&gt;&lt;a href=&quot;#Tracking-实验版本跟踪&quot; class=&quot;headerlink&quot; title=&quot;Tracking 实验版本跟踪&quot;&gt;&lt;/a&gt;Tracking 实验版本跟踪&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Tracking&lt;/strong&gt;为本次描述的重点，来做一个训练过程中的版本管理，记录每一次训练的参数和变量信息等等，这样便于后续的恢复和实验信息的整理。便于统计和管理。使用的时候好像也是需要代码嵌入的部分，就是需要在代码中调用MLFlow的API。&lt;/p&gt;
&lt;p&gt;但是在Tracking的时候有一个比较重要的点在于，这个方法和&lt;code&gt;Tensorboard&lt;/code&gt;对原模型的参数的嵌入和Logging记录中&lt;u&gt;会不会产生冲突&lt;/u&gt;，同时两个方法之间是不是有什么overlap；关键的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这两个API能不能进行混合使用&lt;/li&gt;
&lt;li&gt;怎么统一和区分两个方法的应用情景&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="MLFlow" scheme="http://aikenh.cn/tags/MLFlow/"/>
    
  </entry>
  
  <entry>
    <title>Hard Task Sampling</title>
    <link href="http://aikenh.cn/cn/HardTask/"/>
    <id>http://aikenh.cn/cn/HardTask/</id>
    <published>2021-11-27T22:24:17.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Trick：Hard-Task&quot;&gt;&lt;a href=&quot;#Trick：Hard-Task&quot; class=&quot;headerlink&quot; title=&quot;Trick：Hard Task&quot;&gt;&lt;/a&gt;Trick：Hard Task&lt;/h1&gt;&lt;p&gt;思路来源于Meta-Tranfer-Learning，基本思路是在Meta-Learning的每一次Meta-Test的时候，会从预训练错误率比较高的Task中再次采样，增加那些task的训练次数。也就是难题多做的策略。&lt;/p&gt;
&lt;h2 id=&quot;基本思路&quot;&gt;&lt;a href=&quot;#基本思路&quot; class=&quot;headerlink&quot; title=&quot;基本思路&quot;&gt;&lt;/a&gt;基本思路&lt;/h2&gt;&lt;h3 id=&quot;对比Adaboost&quot;&gt;&lt;a href=&quot;#对比Adaboost&quot; class=&quot;headerlink&quot; title=&quot;对比Adaboost&quot;&gt;&lt;/a&gt;对比Adaboost&lt;/h3&gt;&lt;p&gt;这样的思路其实和AdaBoost的想法是有一定的异曲同工之妙的，或者说其实就是AdaBoost的思路：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adaboost&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/39972832&quot;&gt;参考笔记&lt;/a&gt;，从该笔记中我们可以看到，AdaBoost的基本思路如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Boosting算法的工作机制是首先从训练集用初始权重训练出一个弱学习器1，根据弱学习的学习误差率表现来&lt;strong&gt;更新训练样本的权重&lt;/strong&gt;，使得之前弱学习器1学习误差率高的训练样本点的权重变高，使得这些&lt;strong&gt;误差率高的点&lt;/strong&gt;在后面的弱学习器2中&lt;strong&gt;得到更多的重视&lt;/strong&gt;。然后基于调整权重后的训练集来训练弱学习器2.，如此重复进行，直到弱学习器数达到事先指定的数目T，最终将这T个弱学习器通过集合策略进行整合，得到最终的强学习器.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;和Meta-Transfer-Learning对比一下，我们可以发现，这个方法实际上就是讲Transfer Learning的与训练网络当成弱学习器1，然后通过弱学习器1的训练样本权重，来增大Hard-Task的配比（也就是增加任务的权重）完全一致。&lt;/p&gt;
&lt;h3 id=&quot;具体实现&quot;&gt;&lt;a href=&quot;#具体实现&quot; class=&quot;headerlink&quot; title=&quot;具体实现&quot;&gt;&lt;/a&gt;具体实现&lt;/h3&gt;&lt;p&gt;实现上主要是，样本sample的过程，就是如何在进行参数选择后和原本的Dataloader，结合起来。在这里我们主要参考MTL中的方法，进行网络的构建处理。&lt;/p&gt;
&lt;p&gt;第一部分：&lt;strong&gt;sampler构建&lt;/strong&gt;，为了后续Dataloader中进行数据的采样，需要构建一个这样的sampler，关键在于index的对应关系，以及最后输出的是index的集合。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Sampling" scheme="http://aikenh.cn/tags/Sampling/"/>
    
  </entry>
  
  <entry>
    <title>并行训练</title>
    <link href="http://aikenh.cn/cn/%E5%B9%B6%E8%A1%8C%E8%AE%AD%E7%BB%83%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://aikenh.cn/cn/%E5%B9%B6%E8%A1%8C%E8%AE%AD%E7%BB%83%E7%9A%84%E7%90%86%E8%A7%A3/</id>
    <published>2021-11-27T18:20:31.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://lilianweng.github.io/lil-log/2021/09/24/train-large-neural-networks.html&quot;&gt;How to Train Really Large Models on Many GPUs? (lilianweng.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于浮点运算，模型参数的存储和中间计算输出（梯度和优化器状态）的存储的在 GPU 内存上的大量需求使得我们需要并行化，下面我们参考一些常用的并行化范式：&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Pytorch" scheme="http://aikenh.cn/tags/Pytorch/"/>
    
  </entry>
  
  <entry>
    <title>MIM-V-simMIM</title>
    <link href="http://aikenh.cn/cn/MIM-V-simMIM/"/>
    <id>http://aikenh.cn/cn/MIM-V-simMIM/</id>
    <published>2021-11-22T22:38:19.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Author： MSRA Zhenda Xie&lt;br&gt;@Source：&lt;a href=&quot;arxiv.org/abs/2111.09886&quot;&gt;Arxiv&lt;/a&gt;， &lt;a href=&quot;https://github.com/microsoft/SimMIM&quot;&gt;Code TBP&lt;/a&gt;，&lt;a href=&quot;https://mp.weixin.qq.com/s/4YVYM9lPYghtZFhyOGnERw&quot;&gt;Blog_CVer&lt;/a&gt;&lt;br&gt;@Read：AikenHong 2021.11.22&lt;/p&gt;
&lt;p&gt;“What I cannot create, I do not understand.” — Richard Feynman&lt;/p&gt;
&lt;h2 id=&quot;Intro-amp-Simple-Conclusion&quot;&gt;&lt;a href=&quot;#Intro-amp-Simple-Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Intro &amp;amp; Simple Conclusion&quot;&gt;&lt;/a&gt;Intro &amp;amp; Simple Conclusion&lt;/h2&gt;&lt;h3 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;&lt;p&gt;继MAE和iBoT之后，MSRA也提出了一个图像掩码建模的新框架，SimMIM，该方法简化了最近这些提出的方法，不需要特殊设计，作者也验证了不需要那些特殊设计就已经能让模型展现出优秀的学习能力&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用中等大小的掩码块（32），对输入图像进行随机掩码，能使其成为强大的代理任务（pretext task）&lt;/li&gt;
&lt;li&gt;直接回归预测原始像素的RGB值的效果并不比复杂设计的Patch分类方法差&lt;/li&gt;
&lt;li&gt;Projector Head可以是轻量的Linear Layer，效果并不一定比MLP（多层）的差&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Motivation&quot;&gt;&lt;a href=&quot;#Motivation&quot; class=&quot;headerlink&quot; title=&quot;Motivation&quot;&gt;&lt;/a&gt;Motivation&lt;/h3&gt;&lt;p&gt;通过这种MIM方法可以实现在大量无标注的数据上得到一个表征能力up的通用特征模型，这种方式的backbone可以广泛的应用到图像上的各种子任务中（按照NLP）的经验来说，而为了类似的方式在图像上的大放异彩，我们首先需要分析Vision和Language的不同&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;图像有更强的局部关系&lt;/strong&gt;：相互靠近的像素是高度相关和近似的，我们可以通过简单的copy padding复制一部分缺失&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;视觉信号是原始，低层次的，而文本分词是高级概念&lt;/strong&gt;：对低层次信号的预测是否对高层次的视觉识别任务有用呢？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;视觉信号是连续的，而文本的分词是离散的&lt;/strong&gt;： 如何基于分类的掩码语言建模方法来处理连续的视觉信号&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Theoretical-Design&quot;&gt;&lt;a href=&quot;#Theoretical-Design&quot; class=&quot;headerlink&quot; title=&quot;Theoretical Design&quot;&gt;&lt;/a&gt;Theoretical Design&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;掩码选择&lt;/strong&gt;：同样的掩码的策略还是基于Patch进行的，对于掩码的设计来说，太大的掩码快或者太密集的掩码快，可能会导致找不到附近的像素来预测，实验证明32是一个具有竞争力的size，和文本任务的信息冗余程度不同也带来了覆盖比的选择，NLP通常是0.15，而在V中，32size可以支持0.1-0.7的覆盖率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;任务选择&lt;/strong&gt;：使用原始像素的回归任务，因为回归任务和具有有序性的视觉信号的连续性很好的吻合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预测头选择&lt;/strong&gt;：使用轻量的预测头如（linear），迁移性能与繁琐的预测头相似或者略好，同时训练上更加的块。虽&lt;strong&gt;然较大的头或更高的分辨率通常会导致更强的生成能力，但这种更强的能力不一定有利于下游的微调任务&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>Transformer</title>
    <link href="http://aikenh.cn/cn/Transformer/"/>
    <id>http://aikenh.cn/cn/Transformer/</id>
    <published>2021-11-22T22:38:19.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@aikenhong 2021   &lt;/p&gt;
&lt;p&gt;References For Transformer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;NLP &lt;a href=&quot;https://lilianweng.github.io/lil-log/2020/04/07/the-transformer-family.html&quot;&gt;The Transformer Family (lilianweng.github.io)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VIT &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5ODExNDA2MA==&amp;amp;mid=2449941486&amp;amp;idx=1&amp;amp;sn=336a47a31f4b4ff0f6cd8e2fc3cb184a&amp;amp;chksm=b13c258d864bac9b32d10ec36a058d77cc7cf90e066e76ae476fd2fde1b54256cd608a559bb6&amp;amp;mpshare=1&amp;amp;scene=23&amp;amp;srcid=1101rcBaNzO4pu00PCPsJOAl&amp;amp;sharer_sharetime=1635744838591&amp;amp;sharer_shareid=ec299f1c891fc72cd699f8eaeb8a0cd5#rd&quot;&gt;Transformer眼中世界 VS CNN眼中世界&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;李沐 NLP &lt;a href=&quot;https://www.bilibili.com/video/BV1pu411o7BE?spm_id_from=333.999.0.0&quot;&gt;Transformer论文精读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Suveys &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUxNjcxMjQxNg==&amp;amp;mid=2247514162&amp;amp;idx=2&amp;amp;sn=d094eecbfd91ca1e478c41e29f2b98d5&amp;amp;scene=21#wechat_redirect&quot;&gt;cver1&lt;/a&gt;， &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUxNjcxMjQxNg==&amp;amp;mid=2247514982&amp;amp;idx=2&amp;amp;sn=7e38021234b7ab5455429e4485128efd&amp;amp;chksm=f9a1c9e9ced640ff045d1c4fe9d4e98a785602d980b25df4fa18477dd2b4b829ed4fc3fd028f&amp;amp;scene=21#wechat_redirect&quot;&gt;cver2&lt;/a&gt;，&lt;a href=&quot;https://mp.weixin.qq.com/s/_th7rXfZDuSu2xo7gdPp0w&quot;&gt;cver3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This blog will divided into several part : lil’s blog, the survey for ViT, we using those article to help us understand the transformer.&lt;/p&gt;
&lt;p&gt;综述我们以最新的一篇为准进行阅读，其他的可能后续进行查缺补漏把，如无必要，勿增烦恼。&lt;/p&gt;
&lt;h2 id=&quot;Intro导言&quot;&gt;&lt;a href=&quot;#Intro导言&quot; class=&quot;headerlink&quot; title=&quot;Intro导言&quot;&gt;&lt;/a&gt;Intro导言&lt;/h2&gt;&lt;p&gt;主要参考文章2来进行我们简单的导入&lt;/p&gt;
&lt;h3 id=&quot;基本问题&quot;&gt;&lt;a href=&quot;#基本问题&quot; class=&quot;headerlink&quot; title=&quot;基本问题&quot;&gt;&lt;/a&gt;基本问题&lt;/h3&gt;&lt;p&gt;Transformer原本是NLP中的重要模型, 作为LSTM的后继者, 用于处理Seq2Seq的数据类型和情景, 若是要将Transformer运用到Vision的领域中, 首要的问题就是如何:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将Image作为序列化的Token输入Transform中&lt;/strong&gt; , 而达成这个目的主要有三种典型的方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;像素点作为token,&lt;/li&gt;
&lt;li&gt;使用VAE离散化图片作为token再输入&lt;/li&gt;
&lt;li&gt;ViT: 将图片切为一个个&lt;code&gt;Patch&lt;/code&gt;在经过线性的&lt;code&gt;projector&lt;/code&gt;之后组成一个&lt;code&gt;embedding&lt;/code&gt;表示进行交互&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20211120010516&quot; alt=&quot;图片&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;CNN的异同分析&quot;&gt;&lt;a href=&quot;#CNN的异同分析&quot; class=&quot;headerlink&quot; title=&quot;CNN的异同分析&quot;&gt;&lt;/a&gt;CNN的异同分析&lt;/h3&gt;&lt;p&gt;差异分析和计算主要靠CKA向量相似度计算来计算模型和表征之间的差异，这里的理论分析暂且不赘述，后续有需求的话可参考论文Similarity of neural network representations revisited或当前文章.&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>MIM-V-iBOT</title>
    <link href="http://aikenh.cn/cn/MIM-V-iBOT/"/>
    <id>http://aikenh.cn/cn/MIM-V-iBOT/</id>
    <published>2021-11-17T22:35:52.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Read: AikenHong 2021&lt;/p&gt;
&lt;p&gt;@Author: &lt;a href=&quot;https://arxiv.org/abs/2111.07832&quot;&gt;https://arxiv.org/abs/2111.07832&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;@解读：&lt;a href=&quot;https://mp.weixin.qq.com/s/x4yEfg9eqW6x3Ehxm1HkRA&quot;&gt;Machine Heart&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本思想&quot;&gt;&lt;a href=&quot;#基本思想&quot; class=&quot;headerlink&quot; title=&quot;基本思想&quot;&gt;&lt;/a&gt;基本思想&lt;/h2&gt;&lt;p&gt;基于NLP中的MLM(Masked Language Model)的核心训练目标: 也就是遮住文本的一部分, 然后通过模型去预测和补全, 这一过程是模型学到泛化的特征, 使用这种方法来进行大规模的与训练范式.&lt;/p&gt;
&lt;p&gt;在基本的思想上和MAE采用的是一样的设计, 但是本文中坐着认为visual tokenizer的设计才是其中的关键.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不同于 NLP 中 tokenization 通过离线的词频分析即可将语料编码为含高语义的分词，图像 patch 是连续分布的且存在大量冗余的底层细节信息。而作者认为一个能够提取图像 patch 中高层语义的 tokenizer 可帮助模型避免学习到冗余的这些细节信息。作者认为视觉的 tokenizer 应该具备两个属性：（a）具备完整表征连续图像内容的能力；(b) 像 NLP 中的 tokenizer 一样具备高层语义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文中对tokenizer的设计为一个知识蒸馏的过程:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/3070imgs/20211118151616.png&quot; alt=&quot;image-20211118151613545&quot;&gt;&lt;/p&gt;
&lt;p&gt;文中使用这种在线tokenizer同时来监督这样的MIM过程, 也就是两部分协同学习, 能够较好的保证语义的同时并将图像内容转化为连续的特征分布, 具体的, tokenizer和目标网络狗狗想网络结构, 有移动平均来得到实际的tokenizer.&lt;/p&gt;
&lt;p&gt;该形式近期在 DINO [3]中以自蒸馏被提出，并被用以针对同一张图片的两个不同视野在 [CLS] 标签上的优化：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
L_{CLS} = - P_{&#92;theta^`}^{[CLS]}(v)^T logP_{&#92;theta}^{[CLS]}(&#92;mu)&lt;/script&gt;&lt;p&gt;在该损失函数的基础上, MIM同样也是用这种自蒸馏的方式去优化, 其中在线tokenizer的参数为目标网络历史参数的平均.&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
L_{MIM} = - &#92;sum_{i=1}^Nm_i *P_{&#92;theta^`}^{patch}(&#92;mu_i)^TlogP_{&#92;theta}^{patch}(&#92;hat{&#92;mu}_i)&lt;/script&gt;&lt;p&gt;基于上述的这些训练目标，提出了一种自监督预训练框架iBOT， 同时优化两种损失函数。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>MIM-V-MAE</title>
    <link href="http://aikenh.cn/cn/MIM-V-MAE/"/>
    <id>http://aikenh.cn/cn/MIM-V-MAE/</id>
    <published>2021-11-15T04:25:45.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;@Author：Facebook AI Research-Kaiming He&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/432663453&quot;&gt;Kaiming-MAE&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>OWL-survey</title>
    <link href="http://aikenh.cn/cn/OWL-survey/"/>
    <id>http://aikenh.cn/cn/OWL-survey/</id>
    <published>2021-11-12T01:40:46.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong2021 OWL&lt;/p&gt;
&lt;p&gt;分析现有的OWL特点，和当前自己的研究做一个区分，也汲取一下别人的研究的要点，&lt;/p&gt;
&lt;h2 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;arxiv @ &lt;a href=&quot;https://arxiv.org/pdf/2102.07848.pdf&quot;&gt;self-supervised feature improve open-world learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/374268236&quot;&gt;arxiv&lt;/a&gt; @ &lt;a href=&quot;https://arxiv.org/pdf/2102.03526.pdf&quot;&gt;open-world semi-supervised learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;arxiv @ &lt;a href=&quot;https://arxiv.org/pdf/2011.12906.pdf&quot;&gt;open-world learning without labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;arxiv @ &lt;a href=&quot;https://arxiv.org/pdf/1801.05609.pdf&quot;&gt;unseen class discovery in open-world classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;arxiv @ &lt;a href=&quot;https://arxiv.org/pdf/2109.06628.pdf&quot;&gt;Open-World Active Learning with Stacking Ensemble for Self-Driving Cars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dl.acm.org/doi/pdf/10.1145/3308558.3313644&quot;&gt;www&lt;/a&gt; @ &lt;a href=&quot;https://blog.csdn.net/u011150266/article/details/118242627&quot;&gt;open-world learning and application to product classification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;cvpr @ &lt;a href=&quot;https://openaccess.thecvf.com/content/CVPR2021/papers/Mancini_Open_World_Compositional_Zero-Shot_Learning_CVPR_2021_paper.pdf&quot;&gt;open world composition zero-shot learning&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://arxiv.org/pdf/2103.02603.pdf&quot;&gt;cvpr&lt;/a&gt; @ &lt;a href=&quot;https://zhuanlan.zhihu.com/p/356272271&quot;&gt;Towards Open World Object Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;[Large-Scale Long-Tailed Recognition in an Open World (thecvf.com&quot;&gt;cvpr&lt;/a&gt;](&lt;a href=&quot;https://openaccess.thecvf.com/content_CVPR_2019/papers/Liu_Large-Scale_Long-Tailed_Recognition_in_an_Open_World_CVPR_2019_paper.pdf&quot;&gt;https://openaccess.thecvf.com/content_CVPR_2019/papers/Liu_Large-Scale_Long-Tailed_Recognition_in_an_Open_World_CVPR_2019_paper.pdf&lt;/a&gt;)) @ &lt;a href=&quot;https://github.com/zhmiao/OpenLongTailRecognition-OLTR&quot;&gt;Large-Scale Long-Tailed Recognition in an Open World&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;h2 id=&quot;Papers&quot;&gt;&lt;a href=&quot;#Papers&quot; class=&quot;headerlink&quot; title=&quot;Papers&quot;&gt;&lt;/a&gt;Papers&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Mulit Open world Learning Definition&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拒绝未见过的类的实例，逐步学习新的类扩展现有模型&lt;/p&gt;
&lt;h3 id=&quot;zap-Large-Scale-Long-Tailed-Recognition-in-an-Open-World&quot;&gt;&lt;a href=&quot;#zap-Large-Scale-Long-Tailed-Recognition-in-an-Open-World&quot; class=&quot;headerlink&quot; title=&quot;:zap: Large-Scale Long-Tailed Recognition in an Open World&quot;&gt;&lt;/a&gt;:zap: Large-Scale Long-Tailed Recognition in an Open World&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://liuziwei7.github.io/projects/LongTail.html&quot;&gt;Large-Scale Long-Tailed Recognition in an Open World (liuziwei7.github.io)&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="Open World Learning" scheme="http://aikenh.cn/tags/Open-World-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Fluent Python 01 数据模型与结构</title>
    <link href="http://aikenh.cn/cn/fluent_python/"/>
    <id>http://aikenh.cn/cn/fluent_python/</id>
    <published>2021-11-06T04:53:47.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Chapter-1-数据模型&quot;&gt;&lt;a href=&quot;#Chapter-1-数据模型&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1 数据模型&quot;&gt;&lt;/a&gt;Chapter 1 数据模型&lt;/h2&gt;&lt;h3 id=&quot;Se1-magic-method&quot;&gt;&lt;a href=&quot;#Se1-magic-method&quot; class=&quot;headerlink&quot; title=&quot;Se1 magic method&quot;&gt;&lt;/a&gt;Se1 magic method&lt;/h3&gt;&lt;p&gt;数据模型在这里的定义是对python框架的描述,他规范了python构建模块的接口；这些接口对应解释器中对一些特殊句法(常用句法)的激活和使用.本章节的核心就在于对这些特殊句法的理解和使用.&lt;br&gt;特殊方法带来的一些主要交互场景:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;迭代&lt;/li&gt;
&lt;li&gt;属性访问&lt;/li&gt;
&lt;li&gt;集合类&lt;/li&gt;
&lt;li&gt;函数和方法的调用&lt;/li&gt;
&lt;li&gt;对象的创建和销毁&lt;/li&gt;
&lt;li&gt;字符串的表示形式和格式化&lt;/li&gt;
&lt;li&gt;上下文管理模块(with模块)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些特殊方法的存在实际上，是为了让python的解释器调用，除非我们有大量的元编程，否则我们一般不调用他，通过内置的&lt;code&gt;len&lt;/code&gt;等函数进行调用的话，他们的速度更快&lt;/p&gt;
&lt;p&gt;下面我们通过最典型的&lt;code&gt;__getitem__&lt;/code&gt;和&lt;code&gt;__len__&lt;/code&gt;对其有简单的介绍, 并介绍各个魔术方法的使用场景&lt;/p&gt;
&lt;h3 id=&quot;Se2-using-it-and-show-more&quot;&gt;&lt;a href=&quot;#Se2-using-it-and-show-more&quot; class=&quot;headerlink&quot; title=&quot;Se2 using it and show more&quot;&gt;&lt;/a&gt;Se2 using it and show more&lt;/h3&gt;&lt;p&gt;最常用也最典型的magic method 不外乎&lt;code&gt;__getitem__&lt;/code&gt;和&lt;code&gt;__len__&lt;/code&gt;;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;len即对当前对象提供对于通用的&lt;code&gt;len()&lt;/code&gt;方法的接口,通常用于查看对象的&lt;code&gt;length or size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;getitem除了提供&lt;code&gt;obj[index]&lt;/code&gt;的索引方式的同时,&lt;ul&gt;
&lt;li&gt;他也会对python内置的那些迭代方法提供支持&lt;code&gt;for i in range(b)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;对于依托于这些迭代的方法也能够得以支持&lt;code&gt;from random import choice&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切片操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Se2-1-overwrite-operator&quot;&gt;&lt;a href=&quot;#Se2-1-overwrite-operator&quot; class=&quot;headerlink&quot; title=&quot;Se2.1 overwrite operator&quot;&gt;&lt;/a&gt;Se2.1 overwrite operator&lt;/h4&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
  </entry>
  
  <entry>
    <title>Python01 数据模型和常用数据结构</title>
    <link href="http://aikenh.cn/cn/Python/"/>
    <id>http://aikenh.cn/cn/Python/</id>
    <published>2021-10-27T06:19:13.000Z</published>
    <updated>2023-10-31T00:19:06.458Z</updated>
    
    
    <summary type="html">&lt;p&gt;个人的《Python Cookbook》 &amp;amp;&amp;amp; 《Fluent Python》阅读笔记。&lt;/p&gt;
&lt;h1 id=&quot;数据模型（Python结构的通用范式）&quot;&gt;&lt;a href=&quot;#数据模型（Python结构的通用范式）&quot; class=&quot;headerlink&quot; title=&quot;数据模型（Python结构的通用范式）&quot;&gt;&lt;/a&gt;数据模型（Python结构的通用范式）&lt;/h1&gt;&lt;p&gt;（Magic method）dunder method：Python特有的双下划线方法，这些方法能够支持Python进行特殊的调用，实现通用方法在新定义的数据结构上的使用，比如最典型的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__len__()&lt;/code&gt;后可以支持&lt;code&gt;len()&lt;/code&gt;，获得结构的长度&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;__getitem__()&lt;/code&gt;后可以支持&lt;code&gt;data[index]&lt;/code&gt;来获取相应的元素，切片，等等数组的操作；&lt;/p&gt;
  &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs python&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 也可以支持类似如下的一些操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 从数据结构中随机选出一个items&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; random &lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; choice&lt;br&gt;choice(datas)&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 也可以支持迭代方法和反迭代方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; data &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; datas:&lt;br&gt;    ...&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; data &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;reversed&lt;/span&gt;(datas):&lt;br&gt;    ...&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 也可以支持sort函数&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;到这里也就说明了，只要我们在数据结构（class）中定义了相应的dunder method，该class就能支持相应的一系列操作，getitems就可以类比为列表，相应的操作都能够在python解释器下自动的赋予支持。&lt;/p&gt;
&lt;p&gt;还有一些好用但不常用的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__contain__&lt;/code&gt;实现的是&lt;code&gt;in&lt;/code&gt; ，当没有实现contain的方法的时候会按照顺序在list中进行搜索&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__abs__&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__repr__&lt;/code&gt;实现的是输出的format设置，也就是print的时候的输出形式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;__eq__&lt;/code&gt; 实现的是  == 命令，同时in调用的是&lt;strong&gt;eq&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面附上一张特殊方法表：&lt;br&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Python" scheme="http://aikenh.cn/categories/Langs/Python/"/>
    
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
  </entry>
  
  <entry>
    <title>VsCode&#39;s Configuration</title>
    <link href="http://aikenh.cn/cn/VSCode/"/>
    <id>http://aikenh.cn/cn/VSCode/</id>
    <published>2021-10-27T06:19:13.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Debug&quot;&gt;&lt;a href=&quot;#Debug&quot; class=&quot;headerlink&quot; title=&quot;Debug&quot;&gt;&lt;/a&gt;Debug&lt;/h2&gt;&lt;p&gt;配置Launch.json 能够帮助我们更好的进行debug的操作，有一些比较特别的文件名和相关编码。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$&amp;#123;workspaceFolder&amp;#125;&lt;/code&gt; 指代当前运行目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&amp;#123;file&amp;#125;&lt;/code&gt;指代当前文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找到launch文件并打开，自定义JSON：执行工作文件夹下的main.py进行调试。&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs json&quot;&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;experiment&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;python&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;launch&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;program&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;$&amp;#123;workspaceFolder&amp;#125;/main.py&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;console&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;integratedTerminal&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-attr&quot;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;--data_path&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;$&amp;#123;workspaceFolder&amp;#125;/data&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;            &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;--mode&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;--resume&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&quot;hljs-punctuation&quot;&gt;,&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认 JSON：执行当前文件&lt;br&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vscode" scheme="http://aikenh.cn/categories/Editor/Vscode/"/>
    
    
    <category term="VsCode" scheme="http://aikenh.cn/tags/VsCode/"/>
    
  </entry>
  
  <entry>
    <title>Vim 00 Basic Opeation</title>
    <link href="http://aikenh.cn/cn/Vimtutor/"/>
    <id>http://aikenh.cn/cn/Vimtutor/</id>
    <published>2021-10-13T17:58:22.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;this is the Note record the vimtutor (the basic usage of vim.)&lt;br&gt;@Aiken 2021&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;write some word and we can use shift+a to insert in the end.&lt;br&gt;&lt;a href=&quot;https://github.com/HanielF/VimTutor&quot;&gt;the doc with Chinese&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- vim-markdown-toc GFM --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#delete-command&quot;&gt;delete command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#skip-words-and-lines&quot;&gt;skip words and lines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#undo-and-resume&quot;&gt;undo and resume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#replace-and-change&quot;&gt;replace and change&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#location-and-file-status&quot;&gt;location and file status&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#search-command&quot;&gt;search command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#find-the-matched-parentheses-找到对应的括号&quot;&gt;find the matched parentheses 找到对应的括号&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#substitute-command-替换命令&quot;&gt;substitute command 替换命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#execute-an-ecternal-command&quot;&gt;EXECUTE AN ECTERNAL COMMAND&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#the-open-command&quot;&gt;THE OPEN COMMAND&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#copy-and-paste&quot;&gt;COPY AND PASTE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#set-option&quot;&gt;SET OPTION&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#keyshort&quot;&gt;KEYSHORT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- vim-markdown-toc --&gt;
&lt;h2 id=&quot;delete-command&quot;&gt;&lt;a href=&quot;#delete-command&quot; class=&quot;headerlink&quot; title=&quot;delete command&quot;&gt;&lt;/a&gt;delete command&lt;/h2&gt;&lt;p&gt;Most of the command can use &lt;code&gt;NUM&lt;/code&gt; to repeat it.&lt;br&gt;&lt;code&gt;d num&lt;/code&gt; command means delete &lt;code&gt;num&lt;/code&gt; times with args below:&lt;br&gt;&lt;code&gt;c&lt;/code&gt; means del and change mode to insert:&lt;br&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/categories/Editor/Vim/"/>
    
    
    <category term="Neovim" scheme="http://aikenh.cn/tags/Neovim/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Vim Configuration 03 Spacevim Setup</title>
    <link href="http://aikenh.cn/cn/Spacevim/"/>
    <id>http://aikenh.cn/cn/Spacevim/</id>
    <published>2021-10-09T04:15:41.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2021 this file is use to record how to config out vim’ by spacevim.&lt;br&gt;I’ll write this doc with three Parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install and envs, Plugins(including the LSP), KeyShort  &lt;/li&gt;
&lt;li&gt;Attention: we have much to do if we want to install some other plugins.&lt;br&gt;  maybe it not a good way to set the vim.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- vim-markdown-toc GFM --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#install-spacevim-and-config-it&quot;&gt;INSTALL SPACEVIM AND CONFIG IT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#install-langs&quot;&gt;INSTALL LANGs’&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#cocnvim&quot;&gt;COCNVIM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#keyshort-and-special-usage&quot;&gt;KEYSHORT and special USAGE&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#split-windows-and-checkout&quot;&gt;SPLIT WINDOWS and CHECKOUT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#plugins&quot;&gt;Plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- vim-markdown-toc --&gt;
&lt;hr&gt;
&lt;h2 id=&quot;INSTALL-SPACEVIM-AND-CONFIG-IT&quot;&gt;&lt;a href=&quot;#INSTALL-SPACEVIM-AND-CONFIG-IT&quot; class=&quot;headerlink&quot; title=&quot;INSTALL SPACEVIM AND CONFIG IT&quot;&gt;&lt;/a&gt;INSTALL SPACEVIM AND CONFIG IT&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Install:&lt;/strong&gt; SpaceVim via the offical websize:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spacevim.org/cn/quick-start-guide/&quot;&gt;spacevim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spacevim.org/cn/layers/&quot;&gt;layers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spacevim.org/cn/layers/colorscheme/&quot;&gt;colorscheme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;The COMMAND is like:&lt;br&gt;curl -sLf https://spacevim.org/cn/install.sh | bash&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/categories/Editor/Vim/"/>
    
    
    <category term="Spacevim" scheme="http://aikenh.cn/tags/Spacevim/"/>
    
    <category term="Dev" scheme="http://aikenh.cn/tags/Dev/"/>
    
  </entry>
  
  <entry>
    <title>SS_OD_SoftTeacher</title>
    <link href="http://aikenh.cn/cn/SS_OD_SoftTeacher/"/>
    <id>http://aikenh.cn/cn/SS_OD_SoftTeacher/</id>
    <published>2021-10-08T18:30:08.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@ Article: ICML from Microsoft &amp;amp; Huazhong Keda&lt;br&gt;@ Code: &lt;a href=&quot;https://github.com/microsoft/SoftTeacher&quot;&gt;Github&lt;/a&gt;&lt;br&gt;@ Noteby: Aikenhong&lt;br&gt;@ Time: 20210914&lt;/p&gt;
&lt;h2 id=&quot;Abstrast-and-Intro&quot;&gt;&lt;a href=&quot;#Abstrast-and-Intro&quot; class=&quot;headerlink&quot; title=&quot;Abstrast and Intro&quot;&gt;&lt;/a&gt;Abstrast and Intro&lt;/h2&gt;&lt;p&gt;in the session we will using describe the main idea of this article.&lt;/p&gt;
&lt;p&gt;这篇文章的重点在于Soft Teacher，也就是用pseudo label做为弱标注，逐步提高伪标签的可靠性。&lt;/p&gt;
&lt;p&gt;不同于多阶段的方法，端到端的方法再训练中逐步的提升伪标签的质量从而再去benifit目标检测的质量。&lt;br&gt;这样E2E的框架主要依赖于两部分技术:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;soft teacher: 每个未标记边界框的分类损失由教师网络产生的分类分数进行加权&lt;/li&gt;
&lt;li&gt;box jitter 窗口抖动: 选择可靠的伪框来学习框回归&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在目标检测上获得SOTA的效果;&lt;/p&gt;
&lt;h3 id=&quot;Multi-Stage&quot;&gt;&lt;a href=&quot;#Multi-Stage&quot; class=&quot;headerlink&quot; title=&quot;Multi-Stage&quot;&gt;&lt;/a&gt;Multi-Stage&lt;/h3&gt;&lt;p&gt;在半监督的情况下，关注的主要是基于伪标签的方法，是目前的SOTA，以往的方法采用多阶段的方式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用标记数据训练初始检测器&lt;/li&gt;
&lt;li&gt;未标记数据的伪标记，同时基于伪标签进行重新训练&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;局限&lt;/strong&gt;：初始少量标注的局限，初始的检测器的伪标签质量&lt;/p&gt;
&lt;h3 id=&quot;End-to-End&quot;&gt;&lt;a href=&quot;#End-to-End&quot; class=&quot;headerlink&quot; title=&quot;End to End&quot;&gt;&lt;/a&gt;End to End&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Soft Teacher&lt;/strong&gt;基本思路：对未标记的图像进行标记，然后通过标记的几个伪标签训练检测器.&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Semi-Supervised Learning" scheme="http://aikenh.cn/tags/Semi-Supervised-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Vim Configuration 02 Nvim的插件配置</title>
    <link href="http://aikenh.cn/cn/VimConfig/"/>
    <id>http://aikenh.cn/cn/VimConfig/</id>
    <published>2021-10-07T23:45:42.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aikenhong 2021&lt;/p&gt;
&lt;p&gt;Vim is a important consistant for editing file in shell. It’s Hightly Customized for Everyone, In this part I’ll Show my personal Vim comfigurations&lt;/p&gt;
&lt;p&gt;And I’ll Discuss about the diff between Spacevim &amp;amp; Neovim.&lt;/p&gt;
&lt;p&gt;Give a conclusion in advance: &lt;strong&gt;Recommand Config the Vim for Yourself&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You only need to config once, then you should save it in the cloud.&lt;/li&gt;
&lt;li&gt;You will Know all the Keyshot you setting up, and you can customize it as you want.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20211014192437083.png&quot; alt=&quot;image-20211014192437083&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Based-on-neovim&quot;&gt;&lt;a href=&quot;#Based-on-neovim&quot; class=&quot;headerlink&quot; title=&quot;Based on neovim&quot;&gt;&lt;/a&gt;Based on neovim&lt;/h2&gt;&lt;p&gt;基于NeoVim进行配置，不采用SpaveVim的配置文件，这里需要建议采用最新的测试版的NeoVim(&amp;gt;= 0.5)，Stable的NVim已经很久没有更新，对一些新的插件缺乏支持。&lt;/p&gt;
&lt;h3 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/neovim/neovim/wiki/Installing-Neovim&quot;&gt;Installing Neovim &lt;/a&gt; Download NeoVim Package and Install from source&lt;/p&gt;
&lt;p&gt;or &lt;a href=&quot;https://thomasventurini.com/articles/install-neovim-05-in-ubuntu/&quot;&gt;Install from neovim-ppa&lt;/a&gt; Like Following:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;sudo add-apt-repository ppa:neovim-ppa/unstable&lt;br&gt;sudo apt-get update&lt;br&gt;sudo apt-get install neovim&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/categories/Editor/Vim/"/>
    
    
    <category term="Vimscript" scheme="http://aikenh.cn/tags/Vimscript/"/>
    
    <category term="Neovim" scheme="http://aikenh.cn/tags/Neovim/"/>
    
  </entry>
  
  <entry>
    <title>Vim Configuration 01 vim的无插件基础设置</title>
    <link href="http://aikenh.cn/cn/VimConfigDf/"/>
    <id>http://aikenh.cn/cn/VimConfigDf/</id>
    <published>2021-10-07T07:00:42.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;该配置笔记于 20230521 重新整理。默认的 Vimrc 位置为 &lt;code&gt;/usr/share/vim/vimrc&lt;/code&gt;，也可以在 vim 界面使用 &lt;code&gt;:echo $MYVIMRC&lt;/code&gt; 查看当前的配置文件，默认使用的配置文件地址为 &lt;code&gt;~/.vimrc&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考文献地址：&lt;a href=&quot;https://dougblack.io/words/a-good-vimrc.html&quot;&gt;Good VimRC&lt;/a&gt; | &lt;a href=&quot;https://segmentfault.com/a/1190000021029480&quot;&gt;Backspace&lt;/a&gt; | &lt;a href=&quot;https://zhuanlan.zhihu.com/p/98360630&quot;&gt;AutoCmd&lt;/a&gt; | &lt;a href=&quot;https://www.ruanyifeng.com/blog/2018/09/vimrc.html&quot;&gt;VIM配置入门&lt;/a&gt;&lt;br&gt;配置文件地址：&lt;a href=&quot;https://github.com/AikenH/aikenh-dotfile/tree/main/vim-dot&quot;&gt;AikenDotfile&lt;/a&gt;，本文这里只介绍部分配置，一些过于常见的配置等等这里就不再介绍，在 dotfile 中对每行配置均有的细致的注释。&lt;/p&gt;
&lt;p&gt;基于 VimScript） 该 blog 主要记录基础 vim 的配置文件编写，旨在使用基础 vim 的时候也能有一个较好的代码编辑体验，同时提供部分 keymap 集成一些简单的功能，方便文档编写时候的格式转换等。这个配置文件在后续配置 nvim 的时候部分配置也会沿用。&lt;/p&gt;
&lt;h2 id=&quot;Vim-的基础配置&quot;&gt;&lt;a href=&quot;#Vim-的基础配置&quot; class=&quot;headerlink&quot; title=&quot;Vim 的基础配置&quot;&gt;&lt;/a&gt;Vim 的基础配置&lt;/h2&gt;&lt;p&gt;自动检测文件修改，以及对多个文件的 workspace 自动切换&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs vim&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; &amp;gt;&amp;gt;0-1 state detection.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; autoread &lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; when file change outside, we will know&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; autochdir &lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; change workspace when we swtich file, when we open multi-file in one session.&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;鼠标和剪切板功能&quot;&gt;&lt;a href=&quot;#鼠标和剪切板功能&quot; class=&quot;headerlink&quot; title=&quot;鼠标和剪切板功能&quot;&gt;&lt;/a&gt;鼠标和剪切板功能&lt;/h3&gt;&lt;p&gt;设置 vim 对鼠标的支持，支持鼠标选择等&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs vim&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; reference the web get the best setting and use it always&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; suppose the mouse operation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; but this function not work well in the weterm, we disable this part for work.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; mouse=&lt;span class=&quot;hljs-keyword&quot;&gt;a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot;set selection=exclusive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot;set selectmode=mouse,key&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置和系统同步的剪切板，WSL 下的剪切板设置可以参考下面文章 &lt;a href=&quot;https://github.com/microsoft/WSL/issues/4440&quot;&gt;WSL2 clipboard not shared between Linux and Windows&lt;/a&gt; || &lt;a href=&quot;https://www.reddit.com/r/bashonubuntuonwindows/comments/be2q3l/comment/el2vx7u/?utm_source#&quot;&gt;Reddit - Dive into anything&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs vim&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; set the clipboard&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; clipboard+=unnamed&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; WSL yank support&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;s:clip&lt;/span&gt; = &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;/mnt/c/WINDOWS/system32/clip.exe&amp;#x27;&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; change this path according to your mount point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;executable&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;s:clip&lt;/span&gt;)&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;augroup&lt;/span&gt; WSLYank&lt;br&gt;        autocmd!&lt;br&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;autocmd&lt;/span&gt; TextYankPost * &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-variable&quot;&gt;v:event&lt;/span&gt;.operator ==# &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt; | &lt;span class=&quot;hljs-keyword&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;system&lt;/span&gt;(&lt;span class=&quot;hljs-variable&quot;&gt;s:clip&lt;/span&gt;, @&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) | &lt;span class=&quot;hljs-keyword&quot;&gt;endif&lt;/span&gt;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;augroup&lt;/span&gt; END&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;endif&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;设置撤销历史记录&quot;&gt;&lt;a href=&quot;#设置撤销历史记录&quot; class=&quot;headerlink&quot; title=&quot;设置撤销历史记录&quot;&gt;&lt;/a&gt;设置撤销历史记录&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;多次编辑同一个文件的时候保持 Undo 的历史记录，便于对同一个文件进行编辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs vim&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; &amp;gt;&amp;gt;0-2 keep file history&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;undofile&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;&amp;quot; keep the undo history in file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; undodir=~/.&lt;span class=&quot;hljs-keyword&quot;&gt;vim&lt;/span&gt;/.&lt;span class=&quot;hljs-keyword&quot;&gt;undo&lt;/span&gt;//&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;history&lt;/span&gt;=&lt;span class=&quot;hljs-number&quot;&gt;1000&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过上述命令启用 undofile 的选项，并设置存储目录，这里需要注意的是，&lt;strong&gt;存储目录需要手动创建&lt;/strong&gt;，undo 的历史记录才能生效。&lt;/p&gt;</summary>
    
    
    
    <category term="Editor" scheme="http://aikenh.cn/categories/Editor/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/categories/Editor/Vim/"/>
    
    
    <category term="Vimscript" scheme="http://aikenh.cn/tags/Vimscript/"/>
    
    <category term="Vim" scheme="http://aikenh.cn/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>StyleGAN</title>
    <link href="http://aikenh.cn/cn/StyleGAN/"/>
    <id>http://aikenh.cn/cn/StyleGAN/</id>
    <published>2021-10-03T05:16:40.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;StyleGAN-V1&quot;&gt;&lt;a href=&quot;#StyleGAN-V1&quot; class=&quot;headerlink&quot; title=&quot;StyleGAN V1&quot;&gt;&lt;/a&gt;StyleGAN V1&lt;/h1&gt;&lt;p&gt;@AikenHong 2020 10.8&lt;/p&gt;
&lt;p&gt;《A Style-Based Generator Architecture for Generative Adversarial Networks》&lt;/p&gt;
&lt;h2 id=&quot;Related-Work：&quot;&gt;&lt;a href=&quot;#Related-Work：&quot; class=&quot;headerlink&quot; title=&quot;Related Work：&quot;&gt;&lt;/a&gt;Related Work：&lt;/h2&gt;&lt;p&gt;继承的文献工作： ProGAN&lt;br&gt;参考解读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/a312863063/article/details/88795147&quot;&gt;《其中子链接值得一看》&lt;/a&gt;（包括源码解析啥的）（甚至还有GAN的笔记）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gwylab.com/pdf/Note_StyleGAN.pdf&quot;&gt;《StyleGan源码解析和拓展应用》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cuijiahua.com/blog/2020/07/dl-22.html&quot;&gt;《秃头生成器1》&lt;/a&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1658228&quot;&gt;《秃头生成器2》 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/swlh/hairstyle-transfer-semantic-editing-gan-latent-code-b3a6ccf91e82&quot;&gt;NO.3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contribution（Problem）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;解纠缠：Mapping Network&lt;/li&gt;
&lt;li&gt;Noise Generator&lt;/li&gt;
&lt;li&gt;AdaIN before all conv&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Structure：&quot;&gt;&lt;a href=&quot;#Structure：&quot; class=&quot;headerlink&quot; title=&quot;Structure：&quot;&gt;&lt;/a&gt;Structure：&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210930135941.png&quot; alt=&quot;image-20210930135938114&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210930161259.png&quot; alt=&quot;image-20210930161258031&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Part1：AdaIN&quot;&gt;&lt;a href=&quot;#Part1：AdaIN&quot; class=&quot;headerlink&quot; title=&quot;Part1：AdaIN&quot;&gt;&lt;/a&gt;Part1：AdaIN&lt;/h3&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="GAN" scheme="http://aikenh.cn/tags/GAN/"/>
    
  </entry>
  
  <entry>
    <title>YOLOv4</title>
    <link href="http://aikenh.cn/cn/YOLOv4/"/>
    <id>http://aikenh.cn/cn/YOLOv4/</id>
    <published>2021-10-03T05:16:40.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong 20200726&lt;/p&gt;
&lt;p&gt;基于YOLO v4 掌握一些CV方面训练的&lt;strong&gt;Trick&lt;/strong&gt;，同时针对Typora的使用进行一个熟悉掌握。&lt;a href=&quot;https://github.com/AlexeyAB/darknet&quot;&gt;GITHUB CODE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一些相关的参考资料&lt;/p&gt;
&lt;p&gt;⚡️&lt;a href=&quot;https://zhuanlan.zhihu.com/p/150127712&quot;&gt;https://zhuanlan.zhihu.com/p/150127712&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;⚡ &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650785604&amp;amp;idx=1&amp;amp;sn=46bd186e5291deded9f6ec1ae6a22649&amp;amp;chksm=871a033ab06d8a2cff370a06e9e88f578a6c16a70231778ae2f997a8b30e347c6e746db10759&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0429kHitmMCPeF2JGN1XCzik&amp;amp;sharer_sharetime=1588144165276&amp;amp;sharer_shareid=484a4a951d2ad320314b6b56ee9a0ba8&amp;amp;key=c53866ae67b2b8c4b46c89671357025dcdb6b895d1ebde603135230e484682a3552d924bf6126ecf72cb98361e1171f0f0381bee5bd456520dd201034c33ec48272d62ae73345cc914c2db9c6e943a10&amp;amp;ascene=1&amp;amp;uin=NTkyNDg4NjQw&amp;amp;devicetype=Windows+10+x64&amp;amp;version=62090070&amp;amp;lang=zh_CN&amp;amp;exportkey=ASfZUAGjes1A%2BJpXS1yNmT0%3D&amp;amp;pass_ticket=GB56ClnZIrs5ENfLSAh4yF9tj54n041FM39bTg38LQuW%2FKDyBPyfqKLD8SDIZgE%2F&quot;&gt;机器之心YOLOv4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;⚡️&lt;a href=&quot;https://www.zhihu.com/question/390191723/answer/1177584901&quot;&gt;https://www.zhihu.com/question/390191723/answer/1177584901&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本文中一些其他的收获&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;•  其他可替代的Object Detection的SOTA算法有哪些&lt;/p&gt;
&lt;p&gt;•  BoS，BoF方法&lt;/p&gt;
&lt;p&gt;•  简直是一个Tricks的综述&lt;/p&gt;
&lt;h2 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract&quot;&gt;&lt;/a&gt;Abstract&lt;/h2&gt;&lt;p&gt;本文对近期再CNN上的一些Feature方法进行了尝试组合，并实现了新的SOTA，其实就是一些&lt;strong&gt;通用的**&lt;/strong&gt;Trick&lt;strong&gt;**的组合&lt;/strong&gt;尝试，包括&lt;/p&gt;
&lt;p&gt;•  加权残差连接（WRC）&lt;/p&gt;
&lt;p&gt;•  Cross-Stage-Partial-connection，CSP&lt;/p&gt;
&lt;p&gt;•  Cross mini-Batch Normalization，CmBN&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>OW Object Detector</title>
    <link href="http://aikenh.cn/cn/OW-OD/"/>
    <id>http://aikenh.cn/cn/OW-OD/</id>
    <published>2021-09-28T05:44:20.000Z</published>
    <updated>2023-10-31T00:18:24.865Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2021 &lt;/p&gt;
&lt;p&gt;框架撞车系列，主要看看这一篇论文中怎么解决如下的问题👇，并从中借鉴和优化的我框架设计&lt;/p&gt;
&lt;h2 id=&quot;思路分析&quot;&gt;&lt;a href=&quot;#思路分析&quot; class=&quot;headerlink&quot; title=&quot;思路分析&quot;&gt;&lt;/a&gt;思路分析&lt;/h2&gt;&lt;h3 id=&quot;Motivation&quot;&gt;&lt;a href=&quot;#Motivation&quot; class=&quot;headerlink&quot; title=&quot;Motivation&quot;&gt;&lt;/a&gt;Motivation&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;模型实现的主要的两个TASK：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Set Learning ： 在没有明确监督的时候，将尚未引入的目标类别识别为未知&lt;/li&gt;
&lt;li&gt;Incremental Learning：类别增量学习&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;实现这两个问题的主要思路：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自动标注&lt;/strong&gt;：借鉴RPN的class-agnostic，以及检测和分类的显著性指标的差异，找到并自动标注NewClass&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对比聚类：&lt;/strong&gt;使用prototype feature来进行聚类，同时计算Distance损失&lt;br&gt;it seems like contain a unknown prototype.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;energy based：&lt;/strong&gt;亥姆霍兹自由能公式？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210412171723896.png&quot; alt=&quot;image-20210412171723896&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;ENERGY-BASED&quot;&gt;&lt;a href=&quot;#ENERGY-BASED&quot; class=&quot;headerlink&quot; title=&quot;ENERGY BASED&quot;&gt;&lt;/a&gt;&lt;strong&gt;ENERGY BASED&lt;/strong&gt;&lt;/h3&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
    <category term="Open World Learning" scheme="http://aikenh.cn/tags/Open-World-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Attention Mechanism</title>
    <link href="http://aikenh.cn/cn/Attention/"/>
    <id>http://aikenh.cn/cn/Attention/</id>
    <published>2021-09-27T21:34:22.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2020.9.16&lt;/p&gt;
&lt;p&gt;对基本注意力机制的一些资料和理解做一些简单的汇总，着重分析基本思想原理，应用和实现（即 structure），还有一些Weakness和相应的解决方案。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Attention" scheme="http://aikenh.cn/tags/Attention/"/>
    
  </entry>
  
  <entry>
    <title>EfficientNet</title>
    <link href="http://aikenh.cn/cn/EfficientNet/"/>
    <id>http://aikenh.cn/cn/EfficientNet/</id>
    <published>2021-09-27T21:34:22.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Tags: Paper&lt;br&gt;URL1: &lt;a href=&quot;https://arxiv.org/pdf/1905.11946.pdf&quot;&gt;https://arxiv.org/pdf/1905.11946.pdf&lt;/a&gt;&lt;br&gt;URL2: &lt;a href=&quot;https://arxiv.org/pdf/2104.00298.pdf&quot;&gt;https://arxiv.org/pdf/2104.00298.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;提出了一种模型缩放策略，如何更高效的平衡网络的深度、宽度、和图片分辨率&lt;br&gt;**1. Efficient Net: Rethinking Model Scaling for Convolutional Neural Networks&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;EfficientNetV2: Smaller Models and Faster Training**&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;@Aiken H 2021 find detail to code his &lt;/p&gt;
&lt;h1 id=&quot;Efficient-Net-V1&quot;&gt;&lt;a href=&quot;#Efficient-Net-V1&quot; class=&quot;headerlink&quot; title=&quot;Efficient Net V1&quot;&gt;&lt;/a&gt;Efficient Net V1&lt;/h1&gt;&lt;p&gt;除了提出了缩放策略以外，还使用神经架构搜索还建立了一个新的baseline network，得到了一系列模型。&lt;/p&gt;
&lt;p&gt;平衡网络宽度、深度、分辨率至关重要，这种平衡可以通过简单的恒定比率缩放维度来实现，于是我们&lt;strong&gt;提出了一种简单有效的复合缩放&lt;/strong&gt;方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&quot; alt=&quot;https://raw.githubusercontent.com/AikenH/md-image/master/img/image-20210610180603496.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;复合缩放的物理意义：输入图像更大的话就需要更多层来增加感受野和更多通道，从而能在更大的图像上捕获更多细粒度的图案，而宽度和深度（对于表达能力来说很重要）之间也存在着一定的关系，“我们”是第一个对此进行了建模的。&lt;/p&gt;
&lt;p&gt;从各个维度单独的进行缩放能发现都存在着增益瓶颈，如何去得到这么一个合适的等比缩放增益&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>Astar</title>
    <link href="http://aikenh.cn/cn/Astar/"/>
    <id>http://aikenh.cn/cn/Astar/</id>
    <published>2021-09-27T21:34:21.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;A* 是一种在平面图形上计算最优路径的方法，通常用来做 2D 游戏的最短寻路，该算法是一种 Dijkstra 算法的变体，使用启发式的策略来提高算法的搜索效率。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/A*%E6%90%9C%E5%B0%8B%E6%BC%94%E7%AE%97%E6%B3%95&quot;&gt;wikipedia&lt;/a&gt;；&lt;a href=&quot;https://medium.com/@nicholas.w.swift/easy-a-star-pathfinding-7e6689c7f7b2&quot;&gt;medium&lt;/a&gt;；&lt;a href=&quot;https://www.pythonf.cn/read/123915&quot;&gt;pythonf&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本思想&quot;&gt;&lt;a href=&quot;#基本思想&quot; class=&quot;headerlink&quot; title=&quot;基本思想&quot;&gt;&lt;/a&gt;基本思想&lt;/h2&gt;&lt;p&gt;基于启发式的方法，基于BFS去做最短路径搜索，借助类似Manhattan距离作为启发，每次加入后续的多个点，然后按照后续点的属性去排序，不断的加入close的区间，直到第一次遍历到终点就是最短的路径。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(n) = g(n) + h(n)&lt;/script&gt;&lt;p&gt;f代表的是经过当前点，从起点到最终点的距离，g代表的是从起点到当前节点的距离，h代表的是启发式方法到终点的距离。&lt;/p&gt;
&lt;p&gt;维护三个list：open(候选列表)、close（状态确定的列表）、children（等待操作的列表）&lt;/p&gt;
&lt;p&gt;首先用 bfs 的方法，找到当前节点的可达后续节点，将这些节点加入 children，确定 child 不在 close_list 中后（即在 open 中）则判断哪个是最优解，然后更新 openlist 和 closelist 。&lt;/p&gt;
&lt;p&gt;即：每次遍历的当前节点都从 open 中总距离最小的选，然后放入 close。直到 openlist 为空。&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/tags/Algorithm/"/>
    
    <category term="Python" scheme="http://aikenh.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Docker Configuration00 Install on WSL2</title>
    <link href="http://aikenh.cn/cn/Docker/"/>
    <id>http://aikenh.cn/cn/Docker/</id>
    <published>2021-09-27T21:34:21.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;基于 WSL2 对于 Docker 的适配，本文介绍 Windows 下利用 WSL2 对 Docker 的安装和部署，对于 WSL2 的安装可以参考上篇文章： &lt;a href=&quot;https://aikenh.cn/cn/WSL2/&quot;&gt;Windows Configuration01 WSL2 - AikenH Blogs&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Install-Docker-on-Windows&quot;&gt;&lt;a href=&quot;#Install-Docker-on-Windows&quot; class=&quot;headerlink&quot; title=&quot;Install Docker on Windows&quot;&gt;&lt;/a&gt;Install Docker on Windows&lt;/h2&gt;&lt;p&gt;该部分主要介绍以下几内容：安装，存储盘迁移，连接 WSL2 发行版，完成了这几步之后就可以畅游 Docker 世界了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前置：先安装好一个 WSL2 的发行版&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先，官网 &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker:&lt;/a&gt; 下载 Docker Desktop for windows，安装基于 WSL2 的 docker，安装完成后 Docker 的发行版和存储目录会默认存放在，该地址可以用来确认后续的迁移状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker-Desktop/data：&lt;code&gt;%LOCALAPPDATA%/Docker/wsl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;WSL2：&lt;code&gt;%LOCALAPPDATA%/packages/c......./local_state&lt;/code&gt;  &lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Docker" scheme="http://aikenh.cn/categories/Docker/"/>
    
    
    <category term="Docker" scheme="http://aikenh.cn/tags/Docker/"/>
    
    <category term="Wsl" scheme="http://aikenh.cn/tags/Wsl/"/>
    
  </entry>
  
  <entry>
    <title>Colab 使用的问题记录</title>
    <link href="http://aikenh.cn/cn/GoogleColab/"/>
    <id>http://aikenh.cn/cn/GoogleColab/</id>
    <published>2021-09-27T21:34:21.000Z</published>
    <updated>2023-10-31T00:07:40.907Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;@Aiken 2020 &lt;/p&gt;
&lt;p&gt;在使用Google</summary>
        
      
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    
    <category term="Colab" scheme="http://aikenh.cn/tags/Colab/"/>
    
    <category term="Gpu" scheme="http://aikenh.cn/tags/Gpu/"/>
    
  </entry>
  
  <entry>
    <title>Windows Configuration01 WSL2</title>
    <link href="http://aikenh.cn/cn/WSL2/"/>
    <id>http://aikenh.cn/cn/WSL2/</id>
    <published>2021-09-27T18:17:39.000Z</published>
    <updated>2023-11-12T02:44:11.690Z</updated>
    
    
    <summary type="html">&lt;p&gt;WSL（Windows Subsystem Linux） 将 Linux 环境部署在 Windows 中，Linux 环境在补全了 Windows 开发上的不足之外（Bash 等），还有以下的几个特性极大的便利开发和日常使用，因此强烈推荐启用并安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;win11 中 wsl2 已经支持相应主机的 cuda，便利了机器学习的开发；&lt;/li&gt;
&lt;li&gt;子系统中通过/mnt 挂载了 windows 的磁盘，可以通过子系统访问和管理 windows 环境；&lt;/li&gt;
&lt;li&gt;windows 资源管理器可访问和管理子系统中的文件&lt;/li&gt;
&lt;li&gt;支持 windows 打开子系统中的 GUI 应用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论是将 windows 和 linux 分别作为日常和开发的环境来隔离，还是两个协同去做开发和日常，都是一个比较不错的选择，下面就介绍一下如何安装和使用 WSL2。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开始之前可以参考 &lt;a href=&quot;&quot;&gt;windows terminal&lt;/a&gt; 安装一下这个官方的终端模拟器，在 windows 上的表现是比较优秀的&lt;/li&gt;
&lt;li&gt;如果是考虑在 windows 环境开发的话，也可以参考这个[windows]，里面有我个人推荐的一些应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;启用并安装-WSL2&quot;&gt;&lt;a href=&quot;#启用并安装-WSL2&quot; class=&quot;headerlink&quot; title=&quot;启用并安装 WSL2&quot;&gt;&lt;/a&gt;启用并安装 WSL2&lt;/h2&gt;&lt;p&gt;安装和启用 WSL2 需要在 windows 的服务中勾选 Hyper-V 和 Windows Subsystem Linux 支持两个选项，具体操作如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Win + S 搜索 “功能”，打开启用或关闭 windows 功能&lt;/li&gt;
&lt;li&gt;启用对应功能，功能安装完毕后即可&lt;br&gt; &lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230305091044.png&quot; alt=&quot;image.png&quot;&gt;&lt;br&gt; &lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/3070PC/20230305091150.png&quot; alt=&quot;image.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;安装 linux 发行版可以在 windows store 安装，也可以通过如下的命令进行安装：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs powershell&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 列出对应的发行版&lt;/span&gt;&lt;br&gt;wsl &lt;span class=&quot;hljs-literal&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 选择相应的发行版进行安装&lt;/span&gt;&lt;br&gt;wsl &lt;span class=&quot;hljs-literal&quot;&gt;--install&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-d&lt;/span&gt; &amp;lt;Distribution Name&amp;gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 如果当前的WSL是1版本，更新到2&lt;/span&gt;&lt;br&gt;wsl &lt;span class=&quot;hljs-literal&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;-v&lt;/span&gt;&lt;br&gt;wsl &lt;span class=&quot;hljs-literal&quot;&gt;--set-default-version&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    <category term="WSL2" scheme="http://aikenh.cn/categories/Windows/WSL2/"/>
    
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
    <category term="WSL2" scheme="http://aikenh.cn/tags/WSL2/"/>
    
  </entry>
  
  <entry>
    <title>Windows Configuration00 系统初始配置</title>
    <link href="http://aikenh.cn/cn/Windows/"/>
    <id>http://aikenh.cn/cn/Windows/</id>
    <published>2021-09-27T18:16:26.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@AikenHong 2020&lt;/p&gt;
&lt;p&gt;本文介绍个人的 windows 开发环境搭建（包括一些环境安装、功能启用）以及一些使用的小 tips。&lt;/p&gt;
&lt;h2 id=&quot;软件推荐&quot;&gt;&lt;a href=&quot;#软件推荐&quot; class=&quot;headerlink&quot; title=&quot;软件推荐&quot;&gt;&lt;/a&gt;软件推荐&lt;/h2&gt;&lt;p&gt;Windows 的账号同步功能善用，减少在环境迁移的时候对浏览器插件和 Vscode 插件的繁琐同步步骤。&lt;/p&gt;
&lt;p&gt;同时对 Onedrive 和外接硬盘的应用可以很好的减轻备份的负担，在网络环境对 Onedrive 友好的时候还是推荐使用，在 Mac 和 Windows 上都有一个比较好的体验。&lt;/p&gt;
&lt;h3 id=&quot;一些基础的软件&quot;&gt;&lt;a href=&quot;#一些基础的软件&quot; class=&quot;headerlink&quot; title=&quot;一些基础的软件&quot;&gt;&lt;/a&gt;一些基础的软件&lt;/h3&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Free? &amp;amp; source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Powertorys&lt;/td&gt;
&lt;td&gt;system enhance&lt;/td&gt;
&lt;td&gt;y &amp;amp; github&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Translucent&lt;/td&gt;
&lt;td&gt;beautify&lt;/td&gt;
&lt;td&gt;y &amp;amp; Microsoft Store&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Snipaste&lt;/td&gt;
&lt;td&gt;system enhance&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clash for windows&lt;/td&gt;
&lt;td&gt;proxy&lt;/td&gt;
&lt;td&gt;y &amp;amp; github&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;everything&lt;/td&gt;
&lt;td&gt;search-file&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Potplayer&lt;/td&gt;
&lt;td&gt;Player&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Twinkle Tray&lt;/td&gt;
&lt;td&gt;screen control&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7 zip&lt;/td&gt;
&lt;td&gt;system enhanc&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Zerotier&lt;/td&gt;
&lt;td&gt;NAT&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nerd Font&lt;/td&gt;
&lt;td&gt;Font&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wallpaper Engine&lt;/td&gt;
&lt;td&gt;beautify&lt;/td&gt;
&lt;td&gt;n &amp;amp; steam&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MyDockerFinder&lt;/td&gt;
&lt;td&gt;beautify&lt;/td&gt;
&lt;td&gt;n &amp;amp; steam&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IDM&lt;/td&gt;
&lt;td&gt;Download&lt;/td&gt;
&lt;td&gt;n &amp;amp; offical site&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&quot;开发工具&quot;&gt;&lt;a href=&quot;#开发工具&quot; class=&quot;headerlink&quot; title=&quot;开发工具&quot;&gt;&lt;/a&gt;开发工具&lt;/h3&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Free? &amp;amp; source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows Terminal&lt;/td&gt;
&lt;td&gt;Terminal Simulator&lt;/td&gt;
&lt;td&gt;y &amp;amp; Microsoft Store&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Powershell 7&lt;/td&gt;
&lt;td&gt;Shell&lt;/td&gt;
&lt;td&gt;y &amp;amp; Github&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VsCode&lt;/td&gt;
&lt;td&gt;Editor&lt;/td&gt;
&lt;td&gt;y &amp;amp; Offical Site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual Studio&lt;/td&gt;
&lt;td&gt;IDE&lt;/td&gt;
&lt;td&gt;y &amp;amp; Offical Site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Interllij IDEA&lt;/td&gt;
&lt;td&gt;IDE&lt;/td&gt;
&lt;td&gt;n &amp;amp; Offical Site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Git&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nodejs&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anaconda&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&quot;文档编写&quot;&gt;&lt;a href=&quot;#文档编写&quot; class=&quot;headerlink&quot; title=&quot;文档编写&quot;&gt;&lt;/a&gt;文档编写&lt;/h3&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Free &amp;amp; Source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Obsidian&lt;/td&gt;
&lt;td&gt;Markdown Editor&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Typora&lt;/td&gt;
&lt;td&gt;Markdown Editor&lt;/td&gt;
&lt;td&gt;n &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Picgo&lt;/td&gt;
&lt;td&gt;Image Upload&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CopyTranslate&lt;/td&gt;
&lt;td&gt;Translate&lt;/td&gt;
&lt;td&gt;y &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mathpix Snipping Tool&lt;/td&gt;
&lt;td&gt;Latex Formulate&lt;/td&gt;
&lt;td&gt;- &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h3 id=&quot;Daily&quot;&gt;&lt;a href=&quot;#Daily&quot; class=&quot;headerlink&quot; title=&quot;Daily&quot;&gt;&lt;/a&gt;Daily&lt;/h3&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Software&lt;/th&gt;
&lt;th&gt;Free &amp;amp; Source&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Office&lt;/td&gt;
&lt;td&gt;n &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tim&lt;/td&gt;
&lt;td&gt;y  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WeChat&lt;/td&gt;
&lt;td&gt;y  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OneDrive&lt;/td&gt;
&lt;td&gt;y  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Steam&lt;/td&gt;
&lt;td&gt;-  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Epic&lt;/td&gt;
&lt;td&gt;-  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;yy&lt;/td&gt;
&lt;td&gt;y  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uu&lt;/td&gt;
&lt;td&gt;n  &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网易云&lt;/td&gt;
&lt;td&gt;y   &amp;amp; offical-site&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2 id=&quot;开发环境配置&quot;&gt;&lt;a href=&quot;#开发环境配置&quot; class=&quot;headerlink&quot; title=&quot;开发环境配置&quot;&gt;&lt;/a&gt;开发环境配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安装 python&lt;/strong&gt;：直接去 &lt;a href=&quot;https://www.anaconda.com/&quot;&gt;https://www.anaconda.com&lt;/a&gt; 下载，安装的时候使其添加到路径中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安装 Node&lt;/strong&gt;：windows 直接去 &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;nodejs&lt;/a&gt; 官网下载安装，详细文档请参考&lt;a href=&quot;https://aikenh.cn/cn/Nodes/&quot;&gt;Node Version Manage - AikenH Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装 Window Terminal：&lt;ul&gt;
&lt;li&gt;Win11 中自带&lt;/li&gt;
&lt;li&gt;Win10 可以在 windows store 中安装，也可以去 Github 界面安装&lt;/li&gt;
&lt;li&gt;配置请参考 &lt;a href=&quot;&quot;&gt;WindowsTerminal - AIkenH Blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://aikenh.cn/categories/Windows/"/>
    
    
    <category term="Windows" scheme="http://aikenh.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Build Gitbook</title>
    <link href="http://aikenh.cn/cn/Gitbook/"/>
    <id>http://aikenh.cn/cn/Gitbook/</id>
    <published>2021-09-26T07:36:25.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Gitbook命令行工具，基于Markdown编写文档，后续基于Github发布该Blog&lt;/p&gt;
&lt;p&gt;笔记的构建流程：&lt;/p&gt;
&lt;h2 id=&quot;Chapter1-Install&quot;&gt;&lt;a href=&quot;#Chapter1-Install&quot; class=&quot;headerlink&quot; title=&quot;Chapter1 Install&quot;&gt;&lt;/a&gt;Chapter1 Install&lt;/h2&gt;&lt;p&gt;安装&lt;code&gt;Gitbook&lt;/code&gt;之前我们需要安装&lt;code&gt;node.js&lt;/code&gt;和&lt;code&gt;npm&lt;/code&gt;的依赖，使用&lt;code&gt;npm&lt;/code&gt;安装&lt;code&gt;gitbook&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先安装Install Nodejs，Npm&lt;/p&gt;
&lt;p&gt;Windows：&lt;a href=&quot;https://nodejs.org/zh-cn/download/&quot;&gt;Node.js (nodejs.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# add &amp;amp; update apt source before install nodejs.&lt;/span&gt;&lt;br&gt;curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -&lt;br&gt;sudo apt-get update&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# install nodejs after that.&lt;/span&gt;&lt;br&gt;sudo apt-get install -y nodejs&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后安装gitbook&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;npm install gitbook-cli -g &lt;br&gt;&lt;br&gt;gitbook fetch beta &lt;span class=&quot;hljs-comment&quot;&gt;# 安装历史版本&lt;/span&gt;&lt;br&gt;gitbook ls-remote &lt;span class=&quot;hljs-comment&quot;&gt;# 列举可以下载的版本&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检查Gitbook版本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;gitbook -V&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://aikenh.cn/categories/Blog/"/>
    
    <category term="Gitbook" scheme="http://aikenh.cn/categories/Blog/Gitbook/"/>
    
    
    <category term="Blog" scheme="http://aikenh.cn/tags/Blog/"/>
    
    <category term="Gitbook" scheme="http://aikenh.cn/tags/Gitbook/"/>
    
  </entry>
  
  <entry>
    <title>RL-DouZero</title>
    <link href="http://aikenh.cn/cn/RL-DouZero/"/>
    <id>http://aikenh.cn/cn/RL-DouZero/</id>
    <published>2021-07-06T05:51:48.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Desc: GAME, RL&lt;br&gt;Finished?: Yes&lt;br&gt;Tags: Paper&lt;br&gt;URL1: &lt;a href=&quot;https://arxiv.org/abs/2106.06135&quot;&gt;https://arxiv.org/abs/2106.06135&lt;/a&gt;&lt;br&gt;URL2: &lt;a href=&quot;https://github.com/kwai/DouZero&quot;&gt;https://github.com/kwai/DouZero&lt;/a&gt;&lt;br&gt;URL3: &lt;a href=&quot;https://github.com/datamllab/rlcard-showdown）&quot;&gt;https://github.com/datamllab/rlcard-showdown）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用蒙特卡洛方法进行自我对弈不断更新预测模型的方法，这实际上也是普通人对于强化学习如何在self-play中实现自我更新的最基础的想法把：&lt;br&gt;自我对弈（记录动作序列）- 用最终的胜负（价值）更新网络。&lt;/p&gt;
&lt;h2 id=&quot;算法的设计和思路&quot;&gt;&lt;a href=&quot;#算法的设计和思路&quot; class=&quot;headerlink&quot; title=&quot;算法的设计和思路&quot;&gt;&lt;/a&gt;算法的设计和思路&lt;/h2&gt;&lt;p&gt;算法的目标是学习一个价值网路。网络的输入是当前状态和一个动作，输出是在当前状态做这个动作的期望收益（比如胜率）。简单来说，价值网络在每一步计算出哪种牌型赢的概率最大，然后选择最有可能赢的牌型。蒙特卡罗方法不断重复以下步骤来优化价值网络：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用价值网络生成一场对局&lt;/li&gt;
&lt;li&gt;记录下该对局中所有的状态、动作和最后的收益（胜率）&lt;/li&gt;
&lt;li&gt;将每一对状态和动作作为网络输入，收益作为网络输出，用梯度下降对价值网络进行一次更新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实，所谓的蒙特卡罗方法就是一种随机模拟，即通过不断的重复实验来估计真实价值。&lt;/p&gt;
&lt;p&gt;如下图所示，斗零采用一个价值神经网络，其输入是状态和动作，输出是价值。首先，过去的出牌用 LSTM 神经网络进行编码。然后 LSTM 的输出以及其他的表征被送入了 6 层全连接网络，最后输出价值。&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Reinforcement learning" scheme="http://aikenh.cn/tags/Reinforcement-learning/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 题型和框架代码总结</title>
    <link href="http://aikenh.cn/cn/IntView_%E7%AC%94%E8%AF%95%E9%A2%98%E5%9E%8B%E5%92%8C%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93/"/>
    <id>http://aikenh.cn/cn/IntView_%E7%AC%94%E8%AF%95%E9%A2%98%E5%9E%8B%E5%92%8C%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93/</id>
    <published>2021-06-29T02:18:47.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    <category term="Leetcode" scheme="http://aikenh.cn/categories/Algorithm/Leetcode/"/>
    
    
    <category term="Cpp" scheme="http://aikenh.cn/tags/Cpp/"/>
    
    <category term="Leetcode" scheme="http://aikenh.cn/tags/Leetcode/"/>
    
    <category term="Job" scheme="http://aikenh.cn/tags/Job/"/>
    
  </entry>
  
  <entry>
    <title>Pooling</title>
    <link href="http://aikenh.cn/cn/Pooling/"/>
    <id>http://aikenh.cn/cn/Pooling/</id>
    <published>2021-06-23T05:48:56.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;DownSampling：Pooling的全面调研&quot;&gt;&lt;a href=&quot;#DownSampling：Pooling的全面调研&quot; class=&quot;headerlink&quot; title=&quot;DownSampling：Pooling的全面调研&quot;&gt;&lt;/a&gt;DownSampling：Pooling的全面调研&lt;/h1&gt;&lt;p&gt;@Aiken 2021 笔记摘录：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/341820742&quot;&gt;深度神经网络中的池化方法：全面调研（1989-2020） - 知乎&lt;/a&gt; ；&lt;a href=&quot;https://www.sohu.com/a/442710521_823210&quot;&gt;相同论文的简单中文Version&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;16页综述，共计67篇参考文献。网络千奇百怪，但基础元素却大致相同！本文全面调研了1989至2020年一些著名且有用的池化方法，并主要对20种池化方法进行了详细介绍（这些方法，你都知道么？） 注1：文末附【计算机视…&lt;/p&gt;
&lt;p&gt;来自 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/341820742&quot;&gt;https://zhuanlan.zhihu.com/p/341820742&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文：《Pooling Methods in Deep Neural Networks, a Review》&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/112216409&quot;&gt;整合2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;池化的根本目的（Motivation）&quot;&gt;&lt;a href=&quot;#池化的根本目的（Motivation）&quot; class=&quot;headerlink&quot; title=&quot;池化的根本目的（Motivation）&quot;&gt;&lt;/a&gt;池化的根本目的（Motivation）&lt;/h2&gt;&lt;p&gt;卷积神经网络是DNN的一种特殊类型，它由几个卷积层组成，每个卷积层后都有一个激活函数和一个池化层。&lt;/p&gt;
&lt;p&gt;池化层是重要的层，它对来自上一层的特征图执行下采样，并生成具有简化分辨率的新feature maps 。该层&lt;strong&gt;极大地减小了输入的空间尺寸&lt;/strong&gt;。 它有两个主要目的。 首先是减少参数或权重的数量，从而减少计算成本。 第二是控制网络的过拟合。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;池化可以增加网络对于平移（旋转，伸缩）的不变性，提升网络的泛化能力。&lt;/li&gt;
&lt;li&gt;增大感受野；&lt;/li&gt;
&lt;li&gt;降低优化难度和参数数目，&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理想的池化方法应仅提取有用的信息，并丢弃无关的细节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特征不变性、特征降维、在一定程度上防止过拟合，更方便优化&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="Pooling" scheme="http://aikenh.cn/tags/Pooling/"/>
    
  </entry>
  
  <entry>
    <title>OW-openmix</title>
    <link href="http://aikenh.cn/cn/OW-openmix/"/>
    <id>http://aikenh.cn/cn/OW-openmix/</id>
    <published>2021-06-23T05:45:50.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2021 究极万恶的撞车论文&lt;/p&gt;
&lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt; ：Tackle the problem of 发现无标注数据中与给定（已知）类别不相交的新类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related Research：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现有的方法通常1. 使用标记数据对模型进行预训练； 2. 无监督聚类在未标记的数据中识别新的类&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者认为label带来的essential knowledge在第二步中没有被充分学习利用到，这样模型就只能从第一步的现成知识中获益，而不能利用标记数据和未标记数据之间的潜在关系&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="CV" scheme="http://aikenh.cn/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>Reward is Enough</title>
    <link href="http://aikenh.cn/cn/RL-Reward_is_enough/"/>
    <id>http://aikenh.cn/cn/RL-Reward_is_enough/</id>
    <published>2021-06-06T05:53:36.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Desc: RL&lt;br&gt;Finished?: Yes&lt;br&gt;Tags: Paper&lt;/p&gt;
&lt;p&gt;通用人工智能，是否能通过强化学习的奖励机制就实现&lt;/p&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Reinforcement learning" scheme="http://aikenh.cn/tags/Reinforcement-learning/"/>
    
  </entry>
  
  <entry>
    <title>RL-MobaAI</title>
    <link href="http://aikenh.cn/cn/RL-MobaAI_Tencent/"/>
    <id>http://aikenh.cn/cn/RL-MobaAI_Tencent/</id>
    <published>2021-05-30T05:52:42.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Created by: Aiken H&lt;br&gt;Desc: GAME, RL&lt;br&gt;Finished?: Yes&lt;br&gt;Tags: Paper&lt;/p&gt;
&lt;p&gt;《Master Complex Control in MOBA Games with Deep Reinforcement Learning》 论文阅读笔记&lt;/p&gt;
&lt;p&gt;@Aiken H 2021.06&lt;/p&gt;
&lt;h2 id=&quot;Introduction-and-Related-Research&quot;&gt;&lt;a href=&quot;#Introduction-and-Related-Research&quot; class=&quot;headerlink&quot; title=&quot;Introduction and Related Research.&quot;&gt;&lt;/a&gt;Introduction and Related Research.&lt;/h2&gt;&lt;p&gt;MOBA游戏的复杂度和状态空间都远比以前的围棋之类的运动更大，所以难度会更大一些&lt;/p&gt;
&lt;p&gt;早一些的游戏ai使用的是（2015） Deep Q-Network  通过 supervised learning and self-play 结合的训练策略在围棋上击败了专业人类，而最近更多的使用了DRL（Deep Reinforcement Learning）的方法在近几年被进一步的应用。&lt;/p&gt;
&lt;h3 id=&quot;Neural-Network-Architecture-Include&quot;&gt;&lt;a href=&quot;#Neural-Network-Architecture-Include&quot; class=&quot;headerlink&quot; title=&quot;Neural Network Architecture Include&quot;&gt;&lt;/a&gt;&lt;strong&gt;Neural Network Architecture Include&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;Contributions&quot;&gt;&lt;a href=&quot;#Contributions&quot; class=&quot;headerlink&quot; title=&quot;Contributions&quot;&gt;&lt;/a&gt;&lt;strong&gt;Contributions&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;encoding&lt;/strong&gt; of &lt;strong&gt;Multi-modal inputs 多模态输入&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;decoupling&lt;/strong&gt; of inter-correlations in controls &lt;strong&gt;控制内关联解码&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;exploration &lt;strong&gt;pruning&lt;/strong&gt; mechanism  &lt;strong&gt;剪枝设置&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Action mask&lt;/strong&gt; for efficient exploration ❓&lt;strong&gt;效率&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;attack &lt;strong&gt;attention&lt;/strong&gt;(for target selection) &lt;strong&gt;Attention机制做目标选择&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LSTM&lt;/strong&gt; for learning skill combos &lt;strong&gt;LSTM 机制做技能释放和链接&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimize&lt;/strong&gt; by multi-label proximal policy algorithm(&lt;strong&gt;improved PPO&lt;/strong&gt;)&lt;ul&gt;
&lt;li&gt;dual-clip PPO 帮助训练的收敛&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Reinforcement learning" scheme="http://aikenh.cn/tags/Reinforcement-learning/"/>
    
  </entry>
  
  <entry>
    <title>RL Notebook 01</title>
    <link href="http://aikenh.cn/cn/RL-C1/"/>
    <id>http://aikenh.cn/cn/RL-C1/</id>
    <published>2021-05-23T05:50:06.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Created by: Aiken H&lt;br&gt;Detail: survey&lt;br&gt;Finished?: No&lt;br&gt;Tags: Paper&lt;br&gt;URL1: &lt;a href=&quot;https://www.cnblogs.com/pinard/category/1254674.html&quot;&gt;https://www.cnblogs.com/pinard/category/1254674.html&lt;/a&gt;&lt;br&gt;URL2: &lt;a href=&quot;https://github.com/ljpzzz/machinelearning&quot;&gt;https://github.com/ljpzzz/machinelearning&lt;/a&gt;&lt;br&gt;URL3: &lt;a href=&quot;https://datawhalechina.github.io/easy-rl/#/&quot;&gt;https://datawhalechina.github.io/easy-rl/#/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Chapter1-模型基础&quot;&gt;&lt;a href=&quot;#Chapter1-模型基础&quot; class=&quot;headerlink&quot; title=&quot;Chapter1 模型基础&quot;&gt;&lt;/a&gt;Chapter1 模型基础&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/pinard/p/9385570.html&quot;&gt;强化学习（一）模型基础&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;强化学习是介于监督和无监督学习之间的，强化学习没有输出值，但是有&lt;strong&gt;reward：&lt;/strong&gt; 同时这个reward是事后给出的，而不是及时回馈的。而无监督学习是只有数据特征，同时数据之间是独立的，没有前后依赖的关系。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://picture-bed-001-1310572365.cos.ap-guangzhou.myqcloud.com/imgs/img/20210911210000.png&quot; alt=&quot;https://images2018.cnblogs.com/blog/1042406/201807/1042406-20180729163058011-290427357.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Theory理论基础&quot;&gt;&lt;a href=&quot;#Theory理论基础&quot; class=&quot;headerlink&quot; title=&quot;Theory理论基础&quot;&gt;&lt;/a&gt;Theory理论基础&lt;/h2&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Reinforcement learning" scheme="http://aikenh.cn/tags/Reinforcement-learning/"/>
    
  </entry>
  
  <entry>
    <title>经典深度学习与机器学习算法</title>
    <link href="http://aikenh.cn/cn/IntView_%E9%9D%A2%E8%AF%95%E8%A1%A5%E5%85%85/"/>
    <id>http://aikenh.cn/cn/IntView_%E9%9D%A2%E8%AF%95%E8%A1%A5%E5%85%85/</id>
    <published>2021-04-22T17:43:43.000Z</published>
    <updated>2023-10-31T00:10:03.251Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Job" scheme="http://aikenh.cn/tags/Job/"/>
    
  </entry>
  
  <entry>
    <title>Involution</title>
    <link href="http://aikenh.cn/cn/Involution/"/>
    <id>http://aikenh.cn/cn/Involution/</id>
    <published>2021-04-08T05:12:15.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;@Aiken 2021-4-8&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/UmumqhZW7Aqk6s8X1Aj7aA&quot;&gt;Ariticle &lt;/a&gt;；&lt;a href=&quot;https://arxiv.org/abs/2103.06255&quot;&gt;Paper&lt;/a&gt;；&lt;a href=&quot;https://github.com/d-li14/involution&quot;&gt;:star:Code；&lt;/a&gt; &lt;a href=&quot;https://zhuanlan.zhihu.com/p/357408252&quot;&gt;ZHIHU&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Intro-引子&quot;&gt;&lt;a href=&quot;#Intro-引子&quot; class=&quot;headerlink&quot; title=&quot;Intro 引子&quot;&gt;&lt;/a&gt;Intro 引子&lt;/h2&gt;&lt;p&gt;提出了一种新的神经网络算子（operator或op）称为involution，它比convolution更轻量更高效，形式上比self-attention更加简洁，可以用在各种视觉任务的模型上取得精度和效率的双重提升。&lt;/p&gt;
&lt;p&gt;通过involution的结构设计，我们能够以统一的视角来理解经典的卷积操作和近来流行的自注意力操作。&lt;/p&gt;
&lt;h2 id=&quot;基本思想&quot;&gt;&lt;a href=&quot;#基本思想&quot; class=&quot;headerlink&quot; title=&quot;基本思想&quot;&gt;&lt;/a&gt;基本思想&lt;/h2&gt;&lt;p&gt;将传统Convolution Kernel 的两个基本特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;空间不变性：&lt;/strong&gt;在同个通道的HW上共享3*3的卷积系数，参数共享；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通道特异性：&lt;/strong&gt;在每个通道上有特异的卷积核，最终使用1*1 like的方式来进行通道间的整合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;反对称的修改成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;空间特异性：&lt;/strong&gt; 对每个Feature有对应size  $H·W·K·K·G | G&amp;lt;&amp;lt;C$  的kernel，特异性的对不同图像的不同部分进行处理&lt;ul&gt;
&lt;li&gt;G表示Involution操作的分组数，如果需要下采样，就需要接步长为2的平均池化层，最终可以得到，实际上是一个分组卷积的方式，也就是说，我们K个一组的共享一个Kernel。用G去切分C，最终组合起来&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通道不变性：&lt;/strong&gt;对每个通道之间共享这样的kernel，然后做简单的线性整合，对每个不同的channel有相同的处理方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统的卷积基于邻域相关性的思想，同时旨在同一个channel中用单一的角度去分析特征，所以有空间不变性核通道特异性的这两个特征。&lt;/p&gt;
&lt;p&gt;而Involution实际上更像是Self-Attention这种思路，通过Whole-Size的Kernel，执行一个特异性处理？&lt;/p&gt;
&lt;h2 id=&quot;要点分析&quot;&gt;&lt;a href=&quot;#要点分析&quot; class=&quot;headerlink&quot; title=&quot;要点分析&quot;&gt;&lt;/a&gt;要点分析&lt;/h2&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge Evolution</title>
    <link href="http://aikenh.cn/cn/KnowledgeEvolution/"/>
    <id>http://aikenh.cn/cn/KnowledgeEvolution/</id>
    <published>2021-04-06T21:34:22.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Knowledge-Evolution-in-Neural-Networks&quot;&gt;&lt;a href=&quot;#Knowledge-Evolution-in-Neural-Networks&quot; class=&quot;headerlink&quot; title=&quot;Knowledge Evolution in Neural Networks&quot;&gt;&lt;/a&gt;Knowledge Evolution in Neural Networks&lt;/h1&gt;&lt;p&gt;@Aiken 2021.4.7  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/ZdHhdTrHmdcBF4DYf1HXPQ&quot;&gt;Article：只能当成OverView，技术细节写的很差&lt;/a&gt;；Mendeley；&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ahmdtaha/knowledge_evolution&quot;&gt;Code_PyTorch&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Intro引子&quot;&gt;&lt;a href=&quot;#Intro引子&quot; class=&quot;headerlink&quot; title=&quot;Intro引子&quot;&gt;&lt;/a&gt;&lt;strong&gt;Intro引子&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;：如何在较小的数据集上训练神经网络，这到底是个小样本的方法还是个类别增量的方法？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Motivation：&lt;/strong&gt; 考虑生物“基因”进化的方式，有一部分是“祖传”，另一部分是“适应”，通过对“祖传”的假设的不断学习进化，得到一个新的模型。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基因编码了从祖先到后代的遗传信息（知识），而基因传递将遗传信息从父母传递至其后代。虽然祖先并不一定具有更好的知识，但是遗传信息（知识）在几代人之间的发展将会促进后代更好的学习曲线。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hypothesis：&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拟合假设$H^{origin}$：&lt;/li&gt;
&lt;li&gt;重置假设：$H^{later}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TOBEUPDATE：将神经网络拆分成两个假设(子网络)：通过重新训练多代网络来进化$H^{origin}$ 中的知识，每一代都会扰乱$H^{later}$的内部权重来鼓励$H^{origin}$ 学习独立的表达形式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;将深度神经网络的知识封装在一个名为拟合假设的子网络H中，将拟合假设的知识从&lt;strong&gt;父母网络&lt;/strong&gt;传递至其后代，即下一代神经网络。并反复重复此过程，在后代网络中证明了其性能的显著提升：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/AikenH/md-image/master/img/640&quot; alt=&quot;图片&quot; style=&quot;zoom:67%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contribution&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;提出了KELS（内核级卷积感知拆分），为CNN量身定做。虽然增加了训练时间，但是大大降低了推理成本，也减轻了较小数据集中的过拟合问题。&lt;/p&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 刷题笔记</title>
    <link href="http://aikenh.cn/cn/IntView_%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    <id>http://aikenh.cn/cn/IntView_%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/</id>
    <published>2021-02-22T17:45:04.000Z</published>
    <updated>2023-10-31T00:09:32.447Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Algorithm" scheme="http://aikenh.cn/categories/Algorithm/"/>
    
    <category term="Leetcode" scheme="http://aikenh.cn/categories/Algorithm/Leetcode/"/>
    
    
    <category term="Cpp" scheme="http://aikenh.cn/tags/Cpp/"/>
    
    <category term="Leetcode" scheme="http://aikenh.cn/tags/Leetcode/"/>
    
    <category term="Job" scheme="http://aikenh.cn/tags/Job/"/>
    
  </entry>
  
  <entry>
    <title>SSH 常用场景和操作</title>
    <link href="http://aikenh.cn/cn/SSH/"/>
    <id>http://aikenh.cn/cn/SSH/</id>
    <published>2021-02-21T17:45:43.000Z</published>
    <updated>2023-10-31T00:27:12.057Z</updated>
    
    
    <summary type="html">&lt;p&gt;主要介绍ssh服务在以下的几个方面（windows，linux）的使用情况：远程服务器连接（22），git&amp;amp;github（gitee），vscode免密登录。&lt;/p&gt;
&lt;h2 id=&quot;ssh-key&quot;&gt;&lt;a href=&quot;#ssh-key&quot; class=&quot;headerlink&quot; title=&quot;ssh-key&quot;&gt;&lt;/a&gt;ssh-key&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/github/authenticating-to-github/checking-for-existing-ssh-keys&quot;&gt;GITHUB关于SSH的教程&lt;/a&gt; 👈可以直接切换成中文模式的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看是否已存在&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;ls&lt;/span&gt; -al ~/.ssh&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;初始化 / 生成 ssh key &lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# github 推荐，优先度从上到下递减&lt;/span&gt;&lt;br&gt;ssh-keygen -t ed25519 -C &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# if not support &lt;/span&gt;&lt;br&gt;ssh-keygen -t rsa -b 4096 -C &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;your_email@example.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# tradition&lt;/span&gt;&lt;br&gt;ssh-keygen -t rsa -C &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;chenlangl@outlook.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;将ssh添加到github的个人权限界面中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;免密登录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在github的教程中也有另一种方式来实现免密登录，好像是ssh-agent的方式安全的保存密码。&lt;br&gt;</summary>
    
    
    
    <category term="Dev" scheme="http://aikenh.cn/categories/Dev/"/>
    
    <category term="SSH" scheme="http://aikenh.cn/categories/Dev/SSH/"/>
    
    
    <category term="Git" scheme="http://aikenh.cn/tags/Git/"/>
    
    <category term="SSH" scheme="http://aikenh.cn/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Related Word of Emotion</title>
    <link href="http://aikenh.cn/cn/Facial_expression_and_Emotion/"/>
    <id>http://aikenh.cn/cn/Facial_expression_and_Emotion/</id>
    <published>2020-12-16T09:08:26.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;疑似&quot;&gt;&lt;a href=&quot;#疑似&quot; class=&quot;headerlink&quot; title=&quot;疑似&quot;&gt;&lt;/a&gt;疑似&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;M. Suwa, N. Sugie and K. Fujimora, “A Preliminary Note on Pattern Recognition of Human Emotional Expression”, &lt;em&gt;Proc. Int’l Joint Conf. Pattern Recognition&lt;/em&gt;, pp. 408-410, 1978.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;K. Scherer and P. Ekman, &lt;em&gt;Handbook of Methods in Nonverbal Behavior Research.&lt;/em&gt;, 1982.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;J.M. Carroll and J. Russell, “Facial Expression in Hollywood’s Portrayal of Emotion”, &lt;em&gt;J. Personality and Social Psychology&lt;/em&gt;, vol. 72, pp. 164-176, 1997.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Standardization and Assessment of College Students’ Facial Expression of Emotion.&lt;/p&gt;
&lt;p&gt;好像是评估表情标注的，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Universals and cultural differences in the judgments of facial expressions of emotion&lt;br&gt;不同文化下的表情对应情感的认知&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Classifying Emotion based on Facial Expression Analysis using Gabor Filter: A Basis for Adaptive Effective Teaching Strategy &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;确信&quot;&gt;&lt;a href=&quot;#确信&quot; class=&quot;headerlink&quot; title=&quot;确信&quot;&gt;&lt;/a&gt;确信&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://link.springer.com/chapter/10.1007/0-387-27257-7_12&quot;&gt;Facial Expression Analysis&lt;/a&gt;&lt;br&gt;这篇的introduction里面有好几篇&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ekman P. Facial expression and emotion[J]. American psychologist, 1993, 48(4): 384.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keltner D, Ekman P, Gonzaga G C, et al. Facial expression of emotion[J]. 2003.&lt;/p&gt;
&lt;p&gt;上面这两篇的引用里应该能找到特别多&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Xu R, Chen J, Han J, et al. Towards emotion-sensitive learning cognitive state analysis of big data in education: deep learning-based facial expression analysis using ordinal information[J]. Computing, 2019: 1-16.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Emotion" scheme="http://aikenh.cn/tags/Emotion/"/>
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
  </entry>
  
  <entry>
    <title>GANs 01</title>
    <link href="http://aikenh.cn/cn/GANs/"/>
    <id>http://aikenh.cn/cn/GANs/</id>
    <published>2020-10-18T23:47:36.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;fGAN-对GAN理论的深度理解&quot;&gt;&lt;a href=&quot;#fGAN-对GAN理论的深度理解&quot; class=&quot;headerlink&quot; title=&quot;fGAN 对GAN理论的深度理解&quot;&gt;&lt;/a&gt;fGAN 对GAN理论的深度理解&lt;/h1&gt;&lt;p&gt;@Aiken 2021 onenote部分的拓展编写，到时候拷过去，整合在一起。&lt;/p&gt;
&lt;p&gt;fGAN: 不只是JS-Div散度，我们可以&lt;strong&gt;将所有的散度都应用到GANs的框架&lt;/strong&gt;中。该部分的阅读是对GAN的基本理论最重要的文章之一。&lt;/p&gt;
&lt;h2 id=&quot;基本理论体系和推演&quot;&gt;&lt;a href=&quot;#基本理论体系和推演&quot; class=&quot;headerlink&quot; title=&quot;基本理论体系和推演&quot;&gt;&lt;/a&gt;基本理论体系和推演&lt;/h2&gt;&lt;p&gt;首先给出fGAN中提出的基本理论：可以将所有的Div放入GANs的框架中，来做那个核心的关键演化判别指标：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
D_{f}(P||Q) = &#92;int_xq(x)f(&#92;frac{p(x)}{q(x)}dx)&lt;/script&gt;&lt;p&gt;上述公式将衡量P和Q两个分布之间的差距，公式中的$f$可以是很多不同的版本，但是要求满足如下的两个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是一个凸函数；$f(&#92;frac{(x1+x2)}{2})&#92;leq &#92;frac{[f(x1)+f(x2)]}{2}$，需要注意国内外的凹凸相反&lt;/li&gt;
&lt;li&gt;$f(1)=0$。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而我们知道$q(x)$是概率密度分布函数，实际上可以看成凸函数性质的推广，所以我们可以证得：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;
D_{f}(P||Q) = &#92;int_xq(x)f(&#92;frac{p(x)}{q(x)}dx) &#92;geq
f(&#92;int q(x) &#92;frac{p(x)}{q(x)} dx) = f(1) = 0&lt;/script&gt;&lt;p&gt;显然当我们取得合适的f，KL（$f(x) = xlog(x)$）; ReverseKL($-log(x)$)；chi square ($f(x) = (x-1)^2$)；&lt;/p&gt;
&lt;h3 id=&quot;Fenchel-Conjugate共轭&quot;&gt;&lt;a href=&quot;#Fenchel-Conjugate共轭&quot; class=&quot;headerlink&quot; title=&quot;Fenchel Conjugate共轭&quot;&gt;&lt;/a&gt;Fenchel Conjugate共轭&lt;/h3&gt;&lt;p&gt;补充Fenchel共轭的知识来对后续的fGAN推导进行补充，定理内容如下：&lt;br&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="GAN" scheme="http://aikenh.cn/tags/GAN/"/>
    
  </entry>
  
  <entry>
    <title>Using Judgment Instead of Annotation</title>
    <link href="http://aikenh.cn/cn/Using_Judgment_Instead_of_Annotation/"/>
    <id>http://aikenh.cn/cn/Using_Judgment_Instead_of_Annotation/</id>
    <published>2020-09-22T16:46:30.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/tags/Machine-Learning/"/>
    
    <category term="Draft" scheme="http://aikenh.cn/tags/Draft/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Handbook</title>
    <link href="http://aikenh.cn/cn/Markdown/"/>
    <id>http://aikenh.cn/cn/Markdown/</id>
    <published>2020-04-17T18:21:22.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;一些关于markdown语法的参考资料，但是实际上如果用Typora的话，有很多的语法是不需要记忆的，只需要稍微了解就可以了，更需要学习的其实是&lt;strong&gt;Latex的公式&lt;/strong&gt;编写。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基本语法：&lt;a href=&quot;https://www.jianshu.com/p/191d1e21f7ed&quot;&gt;https://www.jianshu.com/p/191d1e21f7ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;进阶语法：&lt;a href=&quot;https://blog.csdn.net/m0_37925202/article/details/80461714&quot;&gt;https://blog.csdn.net/m0_37925202/article/details/80461714&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;其他语法：&lt;a href=&quot;https://blog.csdn.net/cuishizun/article/details/80311673&quot;&gt;https://blog.csdn.net/cuishizun/article/details/80311673&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;目录：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#Editor&quot;&gt;Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Some daily usage&quot;&gt;一些常用操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#希腊字母表&quot;&gt;希腊字母表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Editor：&quot;&gt;&lt;a href=&quot;#Editor：&quot; class=&quot;headerlink&quot; title=&quot;Editor：&quot;&gt;&lt;/a&gt;Editor：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Obsidian、Nvim、Typora：Notes的主力编写工具&lt;/li&gt;
&lt;li&gt;VsCode：Readme文档&lt;/li&gt;
&lt;li&gt;Jupyter：代码笔记编写的时候&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Some-daily-usage：&quot;&gt;&lt;a href=&quot;#Some-daily-usage：&quot; class=&quot;headerlink&quot; title=&quot;Some daily usage：&quot;&gt;&lt;/a&gt;Some daily usage：&lt;/h2&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作名称&lt;/th&gt;
&lt;th&gt;Typora&lt;/th&gt;
&lt;th&gt;VsCode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;跳转&lt;/td&gt;
&lt;td&gt;[button] (#name)-&amp;gt;#&lt;/td&gt;
&lt;td&gt;[button] (#name)-&amp;gt; &#92;&lt;span id=&quot;name&quot;&#92;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;复选框&lt;/td&gt;
&lt;td&gt;- [ ]&lt;/td&gt;
&lt;td&gt;- [ ]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;</summary>
    
    
    
    <category term="Langs" scheme="http://aikenh.cn/categories/Langs/"/>
    
    <category term="Markdown" scheme="http://aikenh.cn/categories/Langs/Markdown/"/>
    
    
    <category term="Langs" scheme="http://aikenh.cn/tags/Langs/"/>
    
    <category term="Markdown" scheme="http://aikenh.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hyper-Resolution</title>
    <link href="http://aikenh.cn/cn/Hyper_Resolution/"/>
    <id>http://aikenh.cn/cn/Hyper_Resolution/</id>
    <published>2020-03-06T06:55:02.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;说明：重点针对&lt;strong&gt;超分辨率&lt;/strong&gt;技术  &lt;/p&gt;
&lt;p&gt;备注：&lt;br&gt;超分辨率在人脸识别上的多，但是表情识别上的确实不多，不过很多都会引用一波&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;超分辨率在表情识别中的应用&quot;&gt;&lt;a href=&quot;#超分辨率在表情识别中的应用&quot; class=&quot;headerlink&quot; title=&quot;超分辨率在表情识别中的应用&quot;&gt;&lt;/a&gt;超分辨率在表情识别中的应用&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs plaintext&quot;&gt;KEY WORDs ：&lt;br&gt;&lt;br&gt;1. (&amp;quot;super resolution&amp;quot; OR &amp;quot;image restore&amp;quot;) AND (&amp;quot;facial expression recognition&amp;quot; OR &amp;quot;emotion recognition&amp;quot;)   &lt;br&gt;2. (&amp;quot;super resolution&amp;quot;) AND  (&amp;quot;expression recognition&amp;quot;)   &lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/1709.03126.pdf&quot;&gt;&amp;lt; Robust Emotion Recognition from Low Quality and Low Bit Rate Video: A Deep Learning Approach &amp;gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;针对于低带宽传输的分辨率不足和比率低的应用场景  &lt;/li&gt;
&lt;li&gt;基于facial expression recognition 的 emotion recognition&lt;/li&gt;
&lt;li&gt;在解码器进行视频下采样的时候，&lt;strong&gt;联合SR和识别&lt;/strong&gt;    &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/abs/pii/S0925231219312974&quot;&gt;&amp;lt; Effective image super resolution via hierarchical convolutional neural network &amp;gt;&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;通过层次卷积神经网络(HCNN)来实现有校的SR&lt;/li&gt;
&lt;li&gt;在facial expression recognition 中案例研究发现增强后的图像有助于提高识别性能&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://link.springer.com/chapter/10.1007/978-3-319-56687-0_13&quot;&gt;&amp;lt; Spatio-temporal Pain Recognition in CNN-Based Super-Resolved Facial Images &amp;gt;&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;有点擦边吧，就是基于超分辨率算法的多分辨率图像，对面部进行识别从而判断疼痛程度&lt;/li&gt;
&lt;li&gt;也可能妹啥用，你可以考虑一下&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/abs/pii/S0165168419304232&quot;&gt;&amp;lt; Low-resolution facial expression recognition: A filter learning perspective &amp;gt;&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;摘要中没有明确的提到Super-Resolution，&lt;/li&gt;
&lt;li&gt;但是感觉低分辨率这个问题前缀，可能和SR有关系来着&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www-nlpir.nist.gov/projects/tvpubs/tv19.papers/pku-icst.pdf&quot;&gt;&amp;lt; PKU_ICST at TRECVID 2019: Instance Search Task &amp;gt;&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;好像是什么比赛，过程中有一部分是面部表情检测&lt;/li&gt;
&lt;li&gt;在识别之前采取了超分辨率的查询增强&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://link.springer.com/chapter/10.1007/978-3-030-37734-2_43&quot;&gt;&amp;lt; Facial Expression Restoration Based on Improved Graph Convolutional Networks &amp;gt;&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;针对分辨率低和部分遮挡的面部表情识别 &lt;/li&gt;
&lt;li&gt;GAN IGCN RRMB 修复和超分辨率面部表情    &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    
    <category term="Survey" scheme="http://aikenh.cn/tags/Survey/"/>
    
    <category term="HyperResolution" scheme="http://aikenh.cn/tags/HyperResolution/"/>
    
  </entry>
  
  <entry>
    <title>Image Caption Dataset</title>
    <link href="http://aikenh.cn/cn/ImageCaptionRequirement/"/>
    <id>http://aikenh.cn/cn/ImageCaptionRequirement/</id>
    <published>2020-01-13T18:13:25.000Z</published>
    <updated>2023-10-31T00:09:04.023Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Goals：&quot;&gt;&lt;a href=&quot;#Goals：&quot; class=&quot;headerlink&quot; title=&quot;Goals：&quot;&gt;&lt;/a&gt;Goals：&lt;/h2&gt;&lt;p&gt;1.数据量要求&lt;br&gt;2.标注的标准&lt;br&gt;3.标注的手段  &lt;/p&gt;
&lt;h2 id=&quot;Microsoft-COCO-Captions&quot;&gt;&lt;a href=&quot;#Microsoft-COCO-Captions&quot; class=&quot;headerlink&quot; title=&quot;Microsoft COCO Captions:&quot;&gt;&lt;/a&gt;Microsoft COCO Captions:&lt;/h2&gt;&lt;p&gt;使用Amazon的Mechanical Turk(AMT)收集数据，再对数据进行标注。&lt;br&gt;“Each of our captions are also generated using human subjects on AMT.”&lt;/p&gt;
&lt;h3 id=&quot;一些其他信息：-Caption-Evaluation-Server&quot;&gt;&lt;a href=&quot;#一些其他信息：-Caption-Evaluation-Server&quot; class=&quot;headerlink&quot; title=&quot;一些其他信息：(Caption Evaluation Server):&quot;&gt;&lt;/a&gt;一些其他信息：(Caption Evaluation Server):&lt;/h3&gt;&lt;p&gt;好像是可以评价caption的生成质量，但是应该是仅仅针对于使用COCO数据进行的，所以这一部分就不分析了。&lt;br&gt;文中（section 3）包含了几种不同评价方法的介绍：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BLEU&lt;br&gt;ROUGE&lt;br&gt;METEOR&lt;br&gt;CIDEr&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在进行Evaluation之前的 Tokenization and preprocessing中：&lt;br&gt;使用了工具来添加caption标记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stanford PTBTokenizer in Stanford CoreNLP tools (version 3.4.1)  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个工具是模仿的是peen treebank3.   其参考文献和相关链接如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“The Stanford CoreNLP natural language processing toolkit,” in Proceedings of 52nd Annual Meeting of the Association for Computational Linguistics: System Demonstrations, 2014, pp. 55–60. &lt;a href=&quot;http://www.aclweb.org/anthology/P/P14/P14-5010&quot;&gt;related-link&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;数据规模：&quot;&gt;&lt;a href=&quot;#数据规模：&quot; class=&quot;headerlink&quot; title=&quot;数据规模：&quot;&gt;&lt;/a&gt;数据规模：&lt;/h3&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="Dataset" scheme="http://aikenh.cn/categories/Machine-Learning/Dataset/"/>
    
    
    <category term="Dataset" scheme="http://aikenh.cn/tags/Dataset/"/>
    
    <category term="Image Caption" scheme="http://aikenh.cn/tags/Image-Caption/"/>
    
  </entry>
  
  <entry>
    <title>表情数据集</title>
    <link href="http://aikenh.cn/cn/Emotion_dataset/"/>
    <id>http://aikenh.cn/cn/Emotion_dataset/</id>
    <published>2019-10-14T13:34:54.000Z</published>
    <updated>2023-10-30T09:27:38.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;根据这次需要搜集的表情的数据集，整理一下搜索数据集的网站和思路等&lt;/p&gt;
&lt;h2 id=&quot;PART1-“表情数据集”&quot;&gt;&lt;a href=&quot;#PART1-“表情数据集”&quot; class=&quot;headerlink&quot; title=&quot;PART1 “表情数据集”&quot;&gt;&lt;/a&gt;PART1 “表情数据集”&lt;/h2&gt;&lt;p&gt;下列是对数据搜集的要求： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否开源&lt;/li&gt;
&lt;li&gt;图片的大小和数量&lt;/li&gt;
&lt;li&gt;图片的采集方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;strong&gt;ck+&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;==数据来源及对应的搜索结果如下：==&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://toolbox.google.com/datasetsearch&quot;&gt;谷歌数据集搜索导航&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kairos.com/blog/60-facial-recognition-databases&quot;&gt;60个人脸识别的数据集汇总&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://homepages.inf.ed.ac.uk/rbf/CVonline/Imagedbase.htm&quot;&gt;cv方面的好几百个数据集汇总&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;www.cvpapers.com/datasets.html&quot;&gt;另一个cv方向的数据集汇总&lt;/a&gt;   &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ChanChiChoi/awesome-Face_Recognition&quot;&gt;github-CV汇总帖&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://cbcsl.ece.ohio-state.edu/EmotionNetChallenge/index.html#overview&quot;&gt;EmotioNet&lt;/a&gt;   &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;好像是一个什么挑战赛的数据集要博士后或者相应教员才能申请使用&lt;a href=&quot;http://cbcsl.ece.ohio-state.edu/dbform_compound.html&quot;&gt;申请页面&lt;/a&gt;&lt;br&gt;没有具体的用于表情识别的数据子集的信息（好像数据很多，但是不知道在哪下，除了那个博士后申请的）  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.whdeng.cn/RAF/model1.html&quot;&gt;RAF&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;real-world Affective Face&lt;br&gt;&lt;strong&gt;数据量&lt;/strong&gt;29672个图像，7种基本情绪，12种复合情绪，（包含种族年龄范围性别属性，5个准确定位和37个自动生成的定位）&lt;br&gt;&lt;strong&gt;数据收集方式：&lt;/strong&gt;来源网络，大小应该很杂 （由40个人独立标定）&lt;br&gt;email  &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Machine Learning" scheme="http://aikenh.cn/categories/Machine-Learning/"/>
    
    <category term="Dataset" scheme="http://aikenh.cn/categories/Machine-Learning/Dataset/"/>
    
    
    <category term="Dataset" scheme="http://aikenh.cn/tags/Dataset/"/>
    
    <category term="Emotion" scheme="http://aikenh.cn/tags/Emotion/"/>
    
  </entry>
  
</feed>
